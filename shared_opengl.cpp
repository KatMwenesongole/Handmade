#pragma once

// CORE (1.0 - 4.6) 
#define GL_DEPTH_BUFFER_BIT						0x00000100
#define GL_STENCIL_BUFFER_BIT						0x00000400
#define GL_COLOR_BUFFER_BIT						0x00004000
#define GL_FALSE							0
#define GL_TRUE								1
#define GL_POINTS							0x0000
#define GL_LINES							0x0001
#define GL_LINE_LOOP							0x0002
#define GL_LINE_STRIP							0x0003
#define GL_TRIANGLES							0x0004
#define GL_TRIANGLE_STRIP						0x0005
#define GL_TRIANGLE_FAN							0x0006
#define GL_NEVER							0x0200
#define GL_LESS								0x0201
#define GL_EQUAL							0x0202
#define GL_LEQUAL							0x0203
#define GL_GREATER							0x0204
#define GL_NOTEQUAL							0x0205
#define GL_GEQUAL							0x0206
#define GL_ALWAYS							0x0207
#define GL_ZERO								0
#define GL_ONE								1
#define GL_SRC_COLOR							0x0300
#define GL_ONE_MINUS_SRC_COLOR						0x0301
#define GL_SRC_ALPHA							0x0302
#define GL_ONE_MINUS_SRC_ALPHA						0x0303
#define GL_DST_ALPHA							0x0304
#define GL_ONE_MINUS_DST_ALPHA						0x0305
#define GL_DST_COLOR							0x0306
#define GL_ONE_MINUS_DST_COLOR						0x0307
#define GL_SRC_ALPHA_SATURATE						0x0308
#define GL_NONE								0
#define GL_FRONT_LEFT							0x0400
#define GL_FRONT_RIGHT							0x0401
#define GL_BACK_LEFT							0x0402
#define GL_BACK_RIGHT							0x0403
#define GL_FRONT							0x0404
#define GL_BACK								0x0405
#define GL_LEFT								0x0406
#define GL_RIGHT							0x0407
#define GL_FRONT_AND_BACK						0x0408
#define GL_NO_ERROR							0
#define GL_INVALID_ENUM							0x0500
#define GL_INVALID_VALUE						0x0501
#define GL_INVALID_OPERATION						0x0502
#define GL_OUT_OF_MEMORY						0x0505
#define GL_CW								0x0900
#define GL_CCW								0x0901
#define GL_POINT_SIZE							0x0B11
#define GL_POINT_SIZE_RANGE						0x0B12
#define GL_POINT_SIZE_GRANULARITY					0x0B13
#define GL_LINE_SMOOTH							0x0B20
#define GL_LINE_WIDTH							0x0B21
#define GL_LINE_WIDTH_RANGE						0x0B22
#define GL_LINE_WIDTH_GRANULARITY					0x0B23
#define GL_POLYGON_MODE							0x0B40
#define GL_POLYGON_SMOOTH						0x0B41
#define GL_CULL_FACE							0x0B44
#define GL_CULL_FACE_MODE						0x0B45
#define GL_FRONT_FACE							0x0B46
#define GL_DEPTH_RANGE							0x0B70
#define GL_DEPTH_TEST							0x0B71
#define GL_DEPTH_WRITEMASK						0x0B72
#define GL_DEPTH_CLEAR_VALUE						0x0B73
#define GL_DEPTH_FUNC							0x0B74
#define GL_STENCIL_TEST							0x0B90
#define GL_STENCIL_CLEAR_VALUE						0x0B91
#define GL_STENCIL_FUNC							0x0B92
#define GL_STENCIL_VALUE_MASK						0x0B93
#define GL_STENCIL_FAIL							0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL					0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS					0x0B96
#define GL_STENCIL_REF							0x0B97
#define GL_STENCIL_WRITEMASK						0x0B98
#define GL_VIEWPORT							0x0BA2
#define GL_DITHER							0x0BD0
#define GL_BLEND_DST							0x0BE0
#define GL_BLEND_SRC							0x0BE1
#define GL_BLEND							0x0BE2
#define GL_LOGIC_OP_MODE						0x0BF0
#define GL_DRAW_BUFFER							0x0C01
#define GL_READ_BUFFER							0x0C02
#define GL_SCISSOR_BOX							0x0C10
#define GL_SCISSOR_TEST							0x0C11
#define GL_COLOR_CLEAR_VALUE						0x0C22
#define GL_COLOR_WRITEMASK						0x0C23
#define GL_DOUBLEBUFFER							0x0C32
#define GL_STEREO							0x0C33
#define GL_LINE_SMOOTH_HINT						0x0C52
#define GL_POLYGON_SMOOTH_HINT						0x0C53
#define GL_UNPACK_SWAP_BYTES						0x0CF0
#define GL_UNPACK_LSB_FIRST						0x0CF1
#define GL_UNPACK_ROW_LENGTH						0x0CF2
#define GL_UNPACK_SKIP_ROWS						0x0CF3
#define GL_UNPACK_SKIP_PIXELS						0x0CF4
#define GL_UNPACK_ALIGNMENT						0x0CF5
#define GL_PACK_SWAP_BYTES						0x0D00
#define GL_PACK_LSB_FIRST						0x0D01
#define GL_PACK_ROW_LENGTH						0x0D02
#define GL_PACK_SKIP_ROWS						0x0D03
#define GL_PACK_SKIP_PIXELS						0x0D04
#define GL_PACK_ALIGNMENT						0x0D05
#define GL_MAX_TEXTURE_SIZE						0x0D33
#define GL_MAX_VIEWPORT_DIMS						0x0D3A
#define GL_SUBPIXEL_BITS						0x0D50
#define GL_TEXTURE_1D							0x0DE0
#define GL_TEXTURE_2D							0x0DE1
#define GL_TEXTURE_WIDTH						0x1000
#define GL_TEXTURE_HEIGHT						0x1001
#define GL_TEXTURE_BORDER_COLOR						0x1004
#define GL_DONT_CARE							0x1100
#define GL_FASTEST							0x1101
#define GL_NICEST							0x1102
#define GL_BYTE								0x1400
#define GL_UNSIGNED_BYTE						0x1401
#define GL_SHORT							0x1402
#define GL_UNSIGNED_SHORT						0x1403
#define GL_INT								0x1404
#define GL_UNSIGNED_INT							0x1405
#define GL_FLOAT							0x1406
#define GL_CLEAR							0x1500
#define GL_AND								0x1501
#define GL_AND_REVERSE							0x1502
#define GL_COPY								0x1503
#define GL_AND_INVERTED							0x1504
#define GL_NOOP								0x1505
#define GL_XOR								0x1506
#define GL_OR								0x1507
#define GL_NOR								0x1508
#define GL_EQUIV							0x1509
#define GL_INVERT							0x150A
#define GL_OR_REVERSE							0x150B
#define GL_COPY_INVERTED						0x150C
#define GL_OR_INVERTED							0x150D
#define GL_NAND								0x150E
#define GL_SET								0x150F
#define GL_TEXTURE							0x1702
#define GL_COLOR							0x1800
#define GL_DEPTH							0x1801
#define GL_STENCIL							0x1802
#define GL_STENCIL_INDEX						0x1901
#define GL_DEPTH_COMPONENT						0x1902
#define GL_RED								0x1903
#define GL_GREEN							0x1904
#define GL_BLUE								0x1905
#define GL_ALPHA							0x1906
#define GL_RGB								0x1907
#define GL_RGBA								0x1908
#define GL_POINT							0x1B00
#define GL_LINE								0x1B01
#define GL_FILL								0x1B02
#define GL_KEEP								0x1E00
#define GL_REPLACE							0x1E01
#define GL_INCR								0x1E02
#define GL_DECR								0x1E03
#define GL_VENDOR							0x1F00
#define GL_RENDERER							0x1F01
#define GL_VERSION							0x1F02
#define GL_EXTENSIONS							0x1F03
#define GL_NEAREST							0x2600
#define GL_LINEAR							0x2601
#define GL_NEAREST_MIPMAP_NEAREST					0x2700
#define GL_LINEAR_MIPMAP_NEAREST					0x2701
#define GL_NEAREST_MIPMAP_LINEAR					0x2702
#define GL_LINEAR_MIPMAP_LINEAR						0x2703
#define GL_TEXTURE_MAG_FILTER						0x2800
#define GL_TEXTURE_MIN_FILTER						0x2801
#define GL_TEXTURE_WRAP_S						0x2802
#define GL_TEXTURE_WRAP_T						0x2803
#define GL_REPEAT							0x2901
#define GL_COLOR_LOGIC_OP						0x0BF2
#define GL_POLYGON_OFFSET_UNITS						0x2A00
#define GL_POLYGON_OFFSET_POINT						0x2A01
#define GL_POLYGON_OFFSET_LINE						0x2A02
#define GL_POLYGON_OFFSET_FILL						0x8037
#define GL_POLYGON_OFFSET_FACTOR					0x8038
#define GL_TEXTURE_BINDING_1D						0x8068
#define GL_TEXTURE_BINDING_2D						0x8069
#define GL_TEXTURE_INTERNAL_FORMAT					0x1003
#define GL_TEXTURE_RED_SIZE						0x805C
#define GL_TEXTURE_GREEN_SIZE						0x805D
#define GL_TEXTURE_BLUE_SIZE						0x805E
#define GL_TEXTURE_ALPHA_SIZE						0x805F
#define GL_DOUBLE							0x140A
#define GL_PROXY_TEXTURE_1D						0x8063
#define GL_PROXY_TEXTURE_2D						0x8064
#define GL_R3_G3_B2							0x2A10
#define GL_RGB4								0x804F
#define GL_RGB5								0x8050
#define GL_RGB8								0x8051
#define GL_RGB10							0x8052
#define GL_RGB12							0x8053
#define GL_RGB16							0x8054
#define GL_RGBA2							0x8055
#define GL_RGBA4							0x8056
#define GL_RGB5_A1							0x8057
#define GL_RGBA8							0x8058
#define GL_RGB10_A2							0x8059
#define GL_RGBA12							0x805A
#define GL_RGBA16							0x805B
#define GL_UNSIGNED_BYTE_3_3_2						0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4					0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1					0x8034
#define GL_UNSIGNED_INT_8_8_8_8						0x8035
#define GL_UNSIGNED_INT_10_10_10_2					0x8036
#define GL_TEXTURE_BINDING_3D						0x806A
#define GL_PACK_SKIP_IMAGES						0x806B
#define GL_PACK_IMAGE_HEIGHT						0x806C
#define GL_UNPACK_SKIP_IMAGES						0x806D
#define GL_UNPACK_IMAGE_HEIGHT						0x806E
#define GL_TEXTURE_3D							0x806F
#define GL_PROXY_TEXTURE_3D						0x8070
#define GL_TEXTURE_DEPTH						0x8071
#define GL_TEXTURE_WRAP_R						0x8072
#define GL_MAX_3D_TEXTURE_SIZE						0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV					0x8362
#define GL_UNSIGNED_SHORT_5_6_5						0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV					0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV					0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV					0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV					0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV					0x8368
#define GL_BGR								0x80E0
#define GL_BGRA								0x80E1
#define GL_MAX_ELEMENTS_VERTICES					0x80E8
#define GL_MAX_ELEMENTS_INDICES						0x80E9
#define GL_CLAMP_TO_EDGE						0x812F
#define GL_TEXTURE_MIN_LOD						0x813A
#define GL_TEXTURE_MAX_LOD						0x813B
#define GL_TEXTURE_BASE_LEVEL						0x813C
#define GL_TEXTURE_MAX_LEVEL						0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE					0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY				0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE					0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY				0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE					0x846E
#define GL_TEXTURE0							0x84C0
#define GL_TEXTURE1							0x84C1
#define GL_TEXTURE2							0x84C2
#define GL_TEXTURE3							0x84C3
#define GL_TEXTURE4							0x84C4
#define GL_TEXTURE5							0x84C5
#define GL_TEXTURE6							0x84C6
#define GL_TEXTURE7							0x84C7
#define GL_TEXTURE8							0x84C8
#define GL_TEXTURE9							0x84C9
#define GL_TEXTURE10							0x84CA
#define GL_TEXTURE11							0x84CB
#define GL_TEXTURE12							0x84CC
#define GL_TEXTURE13							0x84CD
#define GL_TEXTURE14							0x84CE
#define GL_TEXTURE15							0x84CF
#define GL_TEXTURE16							0x84D0
#define GL_TEXTURE17							0x84D1
#define GL_TEXTURE18							0x84D2
#define GL_TEXTURE19							0x84D3
#define GL_TEXTURE20							0x84D4
#define GL_TEXTURE21							0x84D5
#define GL_TEXTURE22							0x84D6
#define GL_TEXTURE23							0x84D7
#define GL_TEXTURE24							0x84D8
#define GL_TEXTURE25							0x84D9
#define GL_TEXTURE26							0x84DA
#define GL_TEXTURE27							0x84DB
#define GL_TEXTURE28							0x84DC
#define GL_TEXTURE29							0x84DD
#define GL_TEXTURE30							0x84DE
#define GL_TEXTURE31							0x84DF
#define GL_ACTIVE_TEXTURE						0x84E0
#define GL_MULTISAMPLE							0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE					0x809E
#define GL_SAMPLE_ALPHA_TO_ONE						0x809F
#define GL_SAMPLE_COVERAGE						0x80A0
#define GL_SAMPLE_BUFFERS						0x80A8
#define GL_SAMPLES							0x80A9
#define GL_SAMPLE_COVERAGE_VALUE					0x80AA
#define GL_SAMPLE_COVERAGE_INVERT					0x80AB
#define GL_TEXTURE_CUBE_MAP						0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP					0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X					0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X					0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y					0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y					0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z					0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z					0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP					0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE					0x851C
#define GL_COMPRESSED_RGB						0x84ED
#define GL_COMPRESSED_RGBA						0x84EE
#define GL_TEXTURE_COMPRESSION_HINT					0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE				0x86A0
#define GL_TEXTURE_COMPRESSED						0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS				0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS					0x86A3
#define GL_CLAMP_TO_BORDER						0x812D
#define GL_BLEND_DST_RGB						0x80C8
#define GL_BLEND_SRC_RGB						0x80C9
#define GL_BLEND_DST_ALPHA						0x80CA
#define GL_BLEND_SRC_ALPHA						0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE					0x8128
#define GL_DEPTH_COMPONENT16						0x81A5
#define GL_DEPTH_COMPONENT24						0x81A6
#define GL_DEPTH_COMPONENT32						0x81A7
#define GL_MIRRORED_REPEAT						0x8370
#define GL_MAX_TEXTURE_LOD_BIAS						0x84FD
#define GL_TEXTURE_LOD_BIAS						0x8501
#define GL_INCR_WRAP							0x8507
#define GL_DECR_WRAP							0x8508
#define GL_TEXTURE_DEPTH_SIZE						0x884A
#define GL_TEXTURE_COMPARE_MODE						0x884C
#define GL_TEXTURE_COMPARE_FUNC						0x884D
#define GL_BLEND_COLOR							0x8005
#define GL_BLEND_EQUATION						0x8009
#define GL_CONSTANT_COLOR						0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR					0x8002
#define GL_CONSTANT_ALPHA						0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA					0x8004
#define GL_FUNC_ADD							0x8006
#define GL_FUNC_REVERSE_SUBTRACT					0x800B
#define GL_FUNC_SUBTRACT						0x800A
#define GL_MIN								0x8007
#define GL_MAX								0x8008
#define GL_BUFFER_SIZE							0x8764
#define GL_BUFFER_USAGE							0x8765
#define GL_QUERY_COUNTER_BITS						0x8864
#define GL_CURRENT_QUERY						0x8865
#define GL_QUERY_RESULT							0x8866
#define GL_QUERY_RESULT_AVAILABLE					0x8867
#define GL_ARRAY_BUFFER							0x8892
#define GL_ELEMENT_ARRAY_BUFFER						0x8893
#define GL_ARRAY_BUFFER_BINDING						0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING					0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING				0x889F
#define GL_READ_ONLY							0x88B8
#define GL_WRITE_ONLY							0x88B9
#define GL_READ_WRITE							0x88BA
#define GL_BUFFER_ACCESS						0x88BB
#define GL_BUFFER_MAPPED						0x88BC
#define GL_BUFFER_MAP_POINTER						0x88BD
#define GL_STREAM_DRAW							0x88E0
#define GL_STREAM_READ							0x88E1
#define GL_STREAM_COPY							0x88E2
#define GL_STATIC_DRAW							0x88E4
#define GL_STATIC_READ							0x88E5
#define GL_STATIC_COPY							0x88E6
#define GL_DYNAMIC_DRAW							0x88E8
#define GL_DYNAMIC_READ							0x88E9
#define GL_DYNAMIC_COPY							0x88EA
#define GL_SAMPLES_PASSED						0x8914
#define GL_SRC1_ALPHA							0x8589
#define GL_BLEND_EQUATION_RGB						0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED					0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE					0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE					0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE					0x8625
#define GL_CURRENT_VERTEX_ATTRIB					0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE					0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER					0x8645
#define GL_STENCIL_BACK_FUNC						0x8800
#define GL_STENCIL_BACK_FAIL						0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL					0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS					0x8803
#define GL_MAX_DRAW_BUFFERS						0x8824
#define GL_DRAW_BUFFER0							0x8825
#define GL_DRAW_BUFFER1							0x8826
#define GL_DRAW_BUFFER2							0x8827
#define GL_DRAW_BUFFER3							0x8828
#define GL_DRAW_BUFFER4							0x8829
#define GL_DRAW_BUFFER5							0x882A
#define GL_DRAW_BUFFER6							0x882B
#define GL_DRAW_BUFFER7							0x882C
#define GL_DRAW_BUFFER8							0x882D
#define GL_DRAW_BUFFER9							0x882E
#define GL_DRAW_BUFFER10						0x882F
#define GL_DRAW_BUFFER11						0x8830
#define GL_DRAW_BUFFER12						0x8831
#define GL_DRAW_BUFFER13						0x8832
#define GL_DRAW_BUFFER14						0x8833
#define GL_DRAW_BUFFER15						0x8834
#define GL_BLEND_EQUATION_ALPHA						0x883D
#define GL_MAX_VERTEX_ATTRIBS						0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED				0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS					0x8872
#define GL_FRAGMENT_SHADER						0x8B30
#define GL_VERTEX_SHADER						0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS				0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS				0x8B4A
#define GL_MAX_VARYING_FLOATS						0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS				0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS				0x8B4D
#define GL_SHADER_TYPE							0x8B4F
#define GL_FLOAT_VEC2							0x8B50
#define GL_FLOAT_VEC3							0x8B51
#define GL_FLOAT_VEC4							0x8B52
#define GL_INT_VEC2							0x8B53
#define GL_INT_VEC3							0x8B54
#define GL_INT_VEC4							0x8B55
#define GL_BOOL								0x8B56
#define GL_BOOL_VEC2							0x8B57
#define GL_BOOL_VEC3							0x8B58
#define GL_BOOL_VEC4							0x8B59
#define GL_FLOAT_MAT2							0x8B5A
#define GL_FLOAT_MAT3							0x8B5B
#define GL_FLOAT_MAT4							0x8B5C
#define GL_SAMPLER_1D							0x8B5D
#define GL_SAMPLER_2D							0x8B5E
#define GL_SAMPLER_3D							0x8B5F
#define GL_SAMPLER_CUBE							0x8B60
#define GL_SAMPLER_1D_SHADOW						0x8B61
#define GL_SAMPLER_2D_SHADOW						0x8B62
#define GL_DELETE_STATUS						0x8B80
#define GL_COMPILE_STATUS						0x8B81
#define GL_LINK_STATUS							0x8B82
#define GL_VALIDATE_STATUS						0x8B83
#define GL_INFO_LOG_LENGTH						0x8B84
#define GL_ATTACHED_SHADERS						0x8B85
#define GL_ACTIVE_UNIFORMS						0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH					0x8B87
#define GL_SHADER_SOURCE_LENGTH						0x8B88
#define GL_ACTIVE_ATTRIBUTES						0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH					0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT				0x8B8B
#define GL_SHADING_LANGUAGE_VERSION					0x8B8C
#define GL_CURRENT_PROGRAM						0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN					0x8CA0
#define GL_LOWER_LEFT							0x8CA1
#define GL_UPPER_LEFT							0x8CA2
#define GL_STENCIL_BACK_REF						0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK					0x8CA4
#define GL_STENCIL_BACK_WRITEMASK					0x8CA5
#define GL_PIXEL_PACK_BUFFER						0x88EB
#define GL_PIXEL_UNPACK_BUFFER						0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING					0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING					0x88EF
#define GL_FLOAT_MAT2x3							0x8B65
#define GL_FLOAT_MAT2x4							0x8B66
#define GL_FLOAT_MAT3x2							0x8B67
#define GL_FLOAT_MAT3x4							0x8B68
#define GL_FLOAT_MAT4x2							0x8B69
#define GL_FLOAT_MAT4x3							0x8B6A
#define GL_SRGB								0x8C40
#define GL_SRGB8							0x8C41
#define GL_SRGB_ALPHA							0x8C42
#define GL_SRGB8_ALPHA8							0x8C43
#define GL_COMPRESSED_SRGB						0x8C48
#define GL_COMPRESSED_SRGB_ALPHA					0x8C49
#define GL_COMPARE_REF_TO_TEXTURE					0x884E
#define GL_CLIP_DISTANCE0						0x3000
#define GL_CLIP_DISTANCE1						0x3001
#define GL_CLIP_DISTANCE2						0x3002
#define GL_CLIP_DISTANCE3						0x3003
#define GL_CLIP_DISTANCE4						0x3004
#define GL_CLIP_DISTANCE5						0x3005
#define GL_CLIP_DISTANCE6						0x3006
#define GL_CLIP_DISTANCE7						0x3007
#define GL_MAX_CLIP_DISTANCES						0x0D32
#define GL_MAJOR_VERSION						0x821B
#define GL_MINOR_VERSION						0x821C
#define GL_NUM_EXTENSIONS						0x821D
#define GL_CONTEXT_FLAGS						0x821E
#define GL_COMPRESSED_RED						0x8225
#define GL_COMPRESSED_RG						0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT				0x00000001
#define GL_RGBA32F							0x8814
#define GL_RGB32F							0x8815
#define GL_RGBA16F							0x881A
#define GL_RGB16F							0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER					0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS					0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET					0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET					0x8905
#define GL_CLAMP_READ_COLOR						0x891C
#define GL_FIXED_ONLY							0x891D
#define GL_MAX_VARYING_COMPONENTS					0x8B4B
#define GL_TEXTURE_1D_ARRAY						0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY					0x8C19
#define GL_TEXTURE_2D_ARRAY						0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY					0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY					0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY					0x8C1D
#define GL_R11F_G11F_B10F						0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV					0x8C3B
#define GL_RGB9_E5							0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV					0x8C3E
#define GL_TEXTURE_SHARED_SIZE						0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH			0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE				0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS			0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS					0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START				0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE				0x8C85
#define GL_PRIMITIVES_GENERATED						0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN			0x8C88
#define GL_RASTERIZER_DISCARD						0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS		0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS			0x8C8B
#define GL_INTERLEAVED_ATTRIBS						0x8C8C
#define GL_SEPARATE_ATTRIBS						0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER					0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING				0x8C8F
#define GL_RGBA32UI							0x8D70
#define GL_RGB32UI							0x8D71
#define GL_RGBA16UI							0x8D76
#define GL_RGB16UI							0x8D77
#define GL_RGBA8UI							0x8D7C
#define GL_RGB8UI							0x8D7D
#define GL_RGBA32I							0x8D82
#define GL_RGB32I							0x8D83
#define GL_RGBA16I							0x8D88
#define GL_RGB16I							0x8D89
#define GL_RGBA8I							0x8D8E
#define GL_RGB8I							0x8D8F
#define GL_RED_INTEGER							0x8D94
#define GL_GREEN_INTEGER						0x8D95
#define GL_BLUE_INTEGER							0x8D96
#define GL_RGB_INTEGER							0x8D98
#define GL_RGBA_INTEGER							0x8D99
#define GL_BGR_INTEGER							0x8D9A
#define GL_BGRA_INTEGER							0x8D9B
#define GL_SAMPLER_1D_ARRAY						0x8DC0
#define GL_SAMPLER_2D_ARRAY						0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW					0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW					0x8DC4
#define GL_SAMPLER_CUBE_SHADOW						0x8DC5
#define GL_UNSIGNED_INT_VEC2						0x8DC6
#define GL_UNSIGNED_INT_VEC3						0x8DC7
#define GL_UNSIGNED_INT_VEC4						0x8DC8
#define GL_INT_SAMPLER_1D						0x8DC9
#define GL_INT_SAMPLER_2D						0x8DCA
#define GL_INT_SAMPLER_3D						0x8DCB
#define GL_INT_SAMPLER_CUBE						0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY						0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY						0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D					0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D					0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D					0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE					0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY				0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY				0x8DD7
#define GL_QUERY_WAIT							0x8E13
#define GL_QUERY_NO_WAIT						0x8E14
#define GL_QUERY_BY_REGION_WAIT						0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT					0x8E16
#define GL_BUFFER_ACCESS_FLAGS						0x911F
#define GL_BUFFER_MAP_LENGTH						0x9120
#define GL_BUFFER_MAP_OFFSET						0x9121
#define GL_DEPTH_COMPONENT32F						0x8CAC
#define GL_DEPTH32F_STENCIL8						0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV				0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION				0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING			0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE			0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE				0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE				0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE				0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE				0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE				0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE				0x8217
#define GL_FRAMEBUFFER_DEFAULT						0x8218
#define GL_FRAMEBUFFER_UNDEFINED					0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT					0x821A
#define GL_MAX_RENDERBUFFER_SIZE					0x84E8
#define GL_DEPTH_STENCIL						0x84F9
#define GL_UNSIGNED_INT_24_8						0x84FA
#define GL_DEPTH24_STENCIL8						0x88F0
#define GL_TEXTURE_STENCIL_SIZE						0x88F1
#define GL_TEXTURE_RED_TYPE						0x8C10
#define GL_TEXTURE_GREEN_TYPE						0x8C11
#define GL_TEXTURE_BLUE_TYPE						0x8C12
#define GL_TEXTURE_ALPHA_TYPE						0x8C13
#define GL_TEXTURE_DEPTH_TYPE						0x8C16
#define GL_UNSIGNED_NORMALIZED						0x8C17
#define GL_FRAMEBUFFER_BINDING						0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING					0x8CA6
#define GL_RENDERBUFFER_BINDING						0x8CA7
#define GL_READ_FRAMEBUFFER						0x8CA8
#define GL_DRAW_FRAMEBUFFER						0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING					0x8CAA
#define GL_RENDERBUFFER_SAMPLES						0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE				0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME				0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL				0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE			0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER				0x8CD4
#define GL_FRAMEBUFFER_COMPLETE						0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT				0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT			0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER				0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER				0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED					0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS					0x8CDF
#define GL_COLOR_ATTACHMENT0						0x8CE0
#define GL_COLOR_ATTACHMENT1						0x8CE1
#define GL_COLOR_ATTACHMENT2						0x8CE2
#define GL_COLOR_ATTACHMENT3						0x8CE3
#define GL_COLOR_ATTACHMENT4						0x8CE4
#define GL_COLOR_ATTACHMENT5						0x8CE5
#define GL_COLOR_ATTACHMENT6						0x8CE6
#define GL_COLOR_ATTACHMENT7						0x8CE7
#define GL_COLOR_ATTACHMENT8						0x8CE8
#define GL_COLOR_ATTACHMENT9						0x8CE9
#define GL_COLOR_ATTACHMENT10						0x8CEA
#define GL_COLOR_ATTACHMENT11						0x8CEB
#define GL_COLOR_ATTACHMENT12						0x8CEC
#define GL_COLOR_ATTACHMENT13						0x8CED
#define GL_COLOR_ATTACHMENT14						0x8CEE
#define GL_COLOR_ATTACHMENT15						0x8CEF
#define GL_COLOR_ATTACHMENT16						0x8CF0
#define GL_COLOR_ATTACHMENT17						0x8CF1
#define GL_COLOR_ATTACHMENT18						0x8CF2
#define GL_COLOR_ATTACHMENT19						0x8CF3
#define GL_COLOR_ATTACHMENT20						0x8CF4
#define GL_COLOR_ATTACHMENT21						0x8CF5
#define GL_COLOR_ATTACHMENT22						0x8CF6
#define GL_COLOR_ATTACHMENT23						0x8CF7
#define GL_COLOR_ATTACHMENT24						0x8CF8
#define GL_COLOR_ATTACHMENT25						0x8CF9
#define GL_COLOR_ATTACHMENT26						0x8CFA
#define GL_COLOR_ATTACHMENT27						0x8CFB
#define GL_COLOR_ATTACHMENT28						0x8CFC
#define GL_COLOR_ATTACHMENT29						0x8CFD
#define GL_COLOR_ATTACHMENT30						0x8CFE
#define GL_COLOR_ATTACHMENT31						0x8CFF
#define GL_DEPTH_ATTACHMENT						0x8D00
#define GL_STENCIL_ATTACHMENT						0x8D20
#define GL_FRAMEBUFFER							0x8D40
#define GL_RENDERBUFFER							0x8D41
#define GL_RENDERBUFFER_WIDTH						0x8D42
#define GL_RENDERBUFFER_HEIGHT						0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT					0x8D44
#define GL_STENCIL_INDEX1						0x8D46
#define GL_STENCIL_INDEX4						0x8D47
#define GL_STENCIL_INDEX8						0x8D48
#define GL_STENCIL_INDEX16						0x8D49
#define GL_RENDERBUFFER_RED_SIZE					0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE					0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE					0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE					0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE					0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE					0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE				0x8D56
#define GL_MAX_SAMPLES							0x8D57
#define GL_FRAMEBUFFER_SRGB						0x8DB9
#define GL_HALF_FLOAT							0x140B
#define GL_MAP_READ_BIT							0x0001
#define GL_MAP_WRITE_BIT						0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT					0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT					0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT					0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT					0x0020
#define GL_COMPRESSED_RED_RGTC1						0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1					0x8DBC
#define GL_COMPRESSED_RG_RGTC2						0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2					0x8DBE
#define GL_RG								0x8227
#define GL_RG_INTEGER							0x8228
#define GL_R8								0x8229
#define GL_R16								0x822A
#define GL_RG8								0x822B
#define GL_RG16								0x822C
#define GL_R16F								0x822D
#define GL_R32F								0x822E
#define GL_RG16F							0x822F
#define GL_RG32F							0x8230
#define GL_R8I								0x8231
#define GL_R8UI								0x8232
#define GL_R16I								0x8233
#define GL_R16UI							0x8234
#define GL_R32I								0x8235
#define GL_R32UI							0x8236
#define GL_RG8I								0x8237
#define GL_RG8UI							0x8238
#define GL_RG16I							0x8239
#define GL_RG16UI							0x823A
#define GL_RG32I							0x823B
#define GL_RG32UI							0x823C
#define GL_VERTEX_ARRAY_BINDING						0x85B5
#define GL_SAMPLER_2D_RECT						0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW					0x8B64
#define GL_SAMPLER_BUFFER						0x8DC2
#define GL_INT_SAMPLER_2D_RECT						0x8DCD
#define GL_INT_SAMPLER_BUFFER						0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT					0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER					0x8DD8
#define GL_TEXTURE_BUFFER						0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE					0x8C2B
#define GL_TEXTURE_BINDING_BUFFER					0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING				0x8C2D
#define GL_TEXTURE_RECTANGLE						0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE					0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE					0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE					0x84F8
#define GL_R8_SNORM							0x8F94
#define GL_RG8_SNORM							0x8F95
#define GL_RGB8_SNORM							0x8F96
#define GL_RGBA8_SNORM							0x8F97
#define GL_R16_SNORM							0x8F98
#define GL_RG16_SNORM							0x8F99
#define GL_RGB16_SNORM							0x8F9A
#define GL_RGBA16_SNORM							0x8F9B
#define GL_SIGNED_NORMALIZED						0x8F9C
#define GL_PRIMITIVE_RESTART						0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX					0x8F9E
#define GL_COPY_READ_BUFFER						0x8F36
#define GL_COPY_WRITE_BUFFER						0x8F37
#define GL_UNIFORM_BUFFER						0x8A11
#define GL_UNIFORM_BUFFER_BINDING					0x8A28
#define GL_UNIFORM_BUFFER_START						0x8A29
#define GL_UNIFORM_BUFFER_SIZE						0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS					0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS					0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS					0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS					0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS					0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE					0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS			0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS			0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS			0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT				0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH				0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS					0x8A36
#define GL_UNIFORM_TYPE							0x8A37
#define GL_UNIFORM_SIZE							0x8A38
#define GL_UNIFORM_NAME_LENGTH						0x8A39
#define GL_UNIFORM_BLOCK_INDEX						0x8A3A
#define GL_UNIFORM_OFFSET						0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE						0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE					0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR						0x8A3E
#define GL_UNIFORM_BLOCK_BINDING					0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE					0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH					0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS				0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES				0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER			0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER			0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER			0x8A46
#define GL_INVALID_INDEX						0xFFFFFFFF
#define GL_CONTEXT_CORE_PROFILE_BIT					0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT				0x00000002
#define GL_LINES_ADJACENCY						0x000A
#define GL_LINE_STRIP_ADJACENCY						0x000B
#define GL_TRIANGLES_ADJACENCY						0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY					0x000D
#define GL_PROGRAM_POINT_SIZE						0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS				0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED				0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS				0x8DA8
#define GL_GEOMETRY_SHADER						0x8DD9
#define GL_GEOMETRY_VERTICES_OUT					0x8916
#define GL_GEOMETRY_INPUT_TYPE						0x8917
#define GL_GEOMETRY_OUTPUT_TYPE						0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS				0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES					0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS				0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS					0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS				0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS				0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS				0x9125
#define GL_CONTEXT_PROFILE_MASK						0x9126
#define GL_DEPTH_CLAMP							0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION			0x8E4C
#define GL_FIRST_VERTEX_CONVENTION					0x8E4D
#define GL_LAST_VERTEX_CONVENTION					0x8E4E
#define GL_PROVOKING_VERTEX						0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS					0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT					0x9111
#define GL_OBJECT_TYPE							0x9112
#define GL_SYNC_CONDITION						0x9113
#define GL_SYNC_STATUS							0x9114
#define GL_SYNC_FLAGS							0x9115
#define GL_SYNC_FENCE							0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE					0x9117
#define GL_UNSIGNALED							0x9118
#define GL_SIGNALED							0x9119
#define GL_ALREADY_SIGNALED						0x911A
#define GL_TIMEOUT_EXPIRED						0x911B
#define GL_CONDITION_SATISFIED						0x911C
#define GL_WAIT_FAILED							0x911D
#define GL_TIMEOUT_IGNORED						0xFFFFFFFFFFFFFFFF
#define GL_SYNC_FLUSH_COMMANDS_BIT					0x00000001
#define GL_SAMPLE_POSITION						0x8E50
#define GL_SAMPLE_MASK							0x8E51
#define GL_SAMPLE_MASK_VALUE						0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS					0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE					0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE					0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY					0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY				0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE				0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY				0x9105
#define GL_TEXTURE_SAMPLES						0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS				0x9107
#define GL_SAMPLER_2D_MULTISAMPLE					0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE					0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE				0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY					0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY				0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY			0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES					0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES					0x910F
#define GL_MAX_INTEGER_SAMPLES						0x9110
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR					0x88FE
#define GL_SRC1_COLOR							0x88F9
#define GL_ONE_MINUS_SRC1_COLOR						0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA						0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS					0x88FC
#define GL_ANY_SAMPLES_PASSED						0x8C2F
#define GL_SAMPLER_BINDING						0x8919
#define GL_RGB10_A2UI							0x906F
#define GL_TEXTURE_SWIZZLE_R						0x8E42
#define GL_TEXTURE_SWIZZLE_G						0x8E43
#define GL_TEXTURE_SWIZZLE_B						0x8E44
#define GL_TEXTURE_SWIZZLE_A						0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA						0x8E46
#define GL_TIME_ELAPSED							0x88BF
#define GL_TIMESTAMP							0x8E28
#define GL_INT_2_10_10_10_REV						0x8D9F
#define GL_SAMPLE_SHADING						0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE					0x8C37
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET				0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET				0x8E5F
#define GL_TEXTURE_CUBE_MAP_ARRAY					0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY				0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY					0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY					0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW				0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY					0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY				0x900F
#define GL_DRAW_INDIRECT_BUFFER						0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING					0x8F43
#define GL_GEOMETRY_SHADER_INVOCATIONS					0x887F
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS				0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET				0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET				0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS				0x8E5D
#define GL_MAX_VERTEX_STREAMS						0x8E71
#define GL_DOUBLE_VEC2							0x8FFC
#define GL_DOUBLE_VEC3							0x8FFD
#define GL_DOUBLE_VEC4							0x8FFE
#define GL_DOUBLE_MAT2							0x8F46
#define GL_DOUBLE_MAT3							0x8F47
#define GL_DOUBLE_MAT4							0x8F48
#define GL_DOUBLE_MAT2x3						0x8F49
#define GL_DOUBLE_MAT2x4						0x8F4A
#define GL_DOUBLE_MAT3x2						0x8F4B
#define GL_DOUBLE_MAT3x4						0x8F4C
#define GL_DOUBLE_MAT4x2						0x8F4D
#define GL_DOUBLE_MAT4x3						0x8F4E
#define GL_ACTIVE_SUBROUTINES						0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS					0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS				0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH					0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH				0x8E49
#define GL_MAX_SUBROUTINES						0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS				0x8DE8
#define GL_NUM_COMPATIBLE_SUBROUTINES					0x8E4A
#define GL_COMPATIBLE_SUBROUTINES					0x8E4B
#define GL_PATCHES							0x000E
#define GL_PATCH_VERTICES						0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL					0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL					0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES					0x8E75
#define GL_TESS_GEN_MODE						0x8E76
#define GL_TESS_GEN_SPACING						0x8E77
#define GL_TESS_GEN_VERTEX_ORDER					0x8E78
#define GL_TESS_GEN_POINT_MODE						0x8E79
#define GL_ISOLINES							0x8E7A
#define GL_QUADS							0x0007
#define GL_FRACTIONAL_ODD						0x8E7B
#define GL_FRACTIONAL_EVEN						0x8E7C
#define GL_MAX_PATCH_VERTICES						0x8E7D
#define GL_MAX_TESS_GEN_LEVEL						0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS				0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS			0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS				0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS			0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS				0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS					0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS			0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS			0x8E86
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS				0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS				0x8E8A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS				0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS				0x886D
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS			0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS		0x8E1F
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER		0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER		0x84F1
#define GL_TESS_EVALUATION_SHADER					0x8E87
#define GL_TESS_CONTROL_SHADER						0x8E88
#define GL_TRANSFORM_FEEDBACK						0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED				0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE				0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING					0x8E25
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS				0x8E70
#define GL_FIXED							0x140C
#define GL_IMPLEMENTATION_COLOR_READ_TYPE				0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT				0x8B9B
#define GL_LOW_FLOAT							0x8DF0
#define GL_MEDIUM_FLOAT							0x8DF1
#define GL_HIGH_FLOAT							0x8DF2
#define GL_LOW_INT							0x8DF3
#define GL_MEDIUM_INT							0x8DF4
#define GL_HIGH_INT							0x8DF5
#define GL_SHADER_COMPILER						0x8DFA
#define GL_SHADER_BINARY_FORMATS					0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS					0x8DF9
#define GL_MAX_VERTEX_UNIFORM_VECTORS					0x8DFB
#define GL_MAX_VARYING_VECTORS						0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS					0x8DFD
#define GL_RGB565							0x8D62
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT				0x8257
#define GL_PROGRAM_BINARY_LENGTH					0x8741
#define GL_NUM_PROGRAM_BINARY_FORMATS					0x87FE
#define GL_PROGRAM_BINARY_FORMATS					0x87FF
#define GL_VERTEX_SHADER_BIT						0x00000001
#define GL_FRAGMENT_SHADER_BIT						0x00000002
#define GL_GEOMETRY_SHADER_BIT						0x00000004
#define GL_TESS_CONTROL_SHADER_BIT					0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT					0x00000010
#define GL_ALL_SHADER_BITS						0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE						0x8258
#define GL_ACTIVE_PROGRAM						0x8259
#define GL_PROGRAM_PIPELINE_BINDING					0x825A
#define GL_MAX_VIEWPORTS						0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS					0x825C
#define GL_VIEWPORT_BOUNDS_RANGE					0x825D
#define GL_LAYER_PROVOKING_VERTEX					0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX				0x825F
#define GL_UNDEFINED_VERTEX						0x8260
#define GL_COPY_READ_BUFFER_BINDING					0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING					0x8F37
#define GL_TRANSFORM_FEEDBACK_ACTIVE					0x8E24
#define GL_TRANSFORM_FEEDBACK_PAUSED					0x8E23
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH				0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT				0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH				0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE					0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH					0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT					0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH					0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE					0x912E
#define GL_NUM_SAMPLE_COUNTS						0x9380
#define GL_MIN_MAP_BUFFER_ALIGNMENT					0x90BC
#define GL_ATOMIC_COUNTER_BUFFER					0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING				0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START					0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE					0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE				0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS			0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES		0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER		0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER		0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER		0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS				0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS			0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS			0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS				0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS				0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS				0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS					0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS				0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS				0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS					0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS					0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS					0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE				0x92D8
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS				0x92DC
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS				0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX				0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER					0x92DB
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT				0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT					0x00000002
#define GL_UNIFORM_BARRIER_BIT						0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT					0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT				0x00000020
#define GL_COMMAND_BARRIER_BIT						0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT					0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT					0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT					0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT					0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT				0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT					0x00001000
#define GL_ALL_BARRIER_BITS						0xFFFFFFFF
#define GL_MAX_IMAGE_UNITS						0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS		0x8F39
#define GL_IMAGE_BINDING_NAME						0x8F3A
#define GL_IMAGE_BINDING_LEVEL						0x8F3B
#define GL_IMAGE_BINDING_LAYERED					0x8F3C
#define GL_IMAGE_BINDING_LAYER						0x8F3D
#define GL_IMAGE_BINDING_ACCESS						0x8F3E
#define GL_IMAGE_1D							0x904C
#define GL_IMAGE_2D							0x904D
#define GL_IMAGE_3D							0x904E
#define GL_IMAGE_2D_RECT						0x904F
#define GL_IMAGE_CUBE							0x9050
#define GL_IMAGE_BUFFER							0x9051
#define GL_IMAGE_1D_ARRAY						0x9052
#define GL_IMAGE_2D_ARRAY						0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY						0x9054
#define GL_IMAGE_2D_MULTISAMPLE						0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY					0x9056
#define GL_INT_IMAGE_1D							0x9057
#define GL_INT_IMAGE_2D							0x9058
#define GL_INT_IMAGE_3D							0x9059
#define GL_INT_IMAGE_2D_RECT						0x905A
#define GL_INT_IMAGE_CUBE						0x905B
#define GL_INT_IMAGE_BUFFER						0x905C
#define GL_INT_IMAGE_1D_ARRAY						0x905D
#define GL_INT_IMAGE_2D_ARRAY						0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY					0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE					0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY				0x9061
#define GL_UNSIGNED_INT_IMAGE_1D					0x9062
#define GL_UNSIGNED_INT_IMAGE_2D					0x9063
#define GL_UNSIGNED_INT_IMAGE_3D					0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT					0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE					0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER					0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY					0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY					0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY				0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE				0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY			0x906C
#define GL_MAX_IMAGE_SAMPLES						0x906D
#define GL_IMAGE_BINDING_FORMAT						0x906E
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE				0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE				0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS				0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS					0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS				0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS				0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS					0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS					0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS					0x90CF
#define GL_COMPRESSED_RGBA_BPTC_UNORM					0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM				0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT				0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT				0x8E8F
#define GL_TEXTURE_IMMUTABLE_FORMAT					0x912F
#define GL_NUM_SHADING_LANGUAGE_VERSIONS				0x82E9
#define GL_VERTEX_ATTRIB_ARRAY_LONG					0x874E
#define GL_COMPRESSED_RGB8_ETC2						0x9274
#define GL_COMPRESSED_SRGB8_ETC2					0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2			0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2			0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC					0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC				0x9279
#define GL_COMPRESSED_R11_EAC						0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC					0x9271
#define GL_COMPRESSED_RG11_EAC						0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC					0x9273
#define GL_PRIMITIVE_RESTART_FIXED_INDEX				0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE				0x8D6A
#define GL_MAX_ELEMENT_INDEX						0x8D6B
#define GL_COMPUTE_SHADER						0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS					0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS				0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS					0x91BD
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE				0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS				0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS				0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS					0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS			0x8266
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS				0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT					0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE					0x91BF
#define GL_COMPUTE_WORK_GROUP_SIZE					0x8267
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER			0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER		0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER					0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING				0x90EF
#define GL_COMPUTE_SHADER_BIT						0x00000020
#define GL_DEBUG_OUTPUT_SYNCHRONOUS					0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH				0x8243
#define GL_DEBUG_CALLBACK_FUNCTION					0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM					0x8245
#define GL_DEBUG_SOURCE_API						0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM					0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER					0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY					0x8249
#define GL_DEBUG_SOURCE_APPLICATION					0x824A
#define GL_DEBUG_SOURCE_OTHER						0x824B
#define GL_DEBUG_TYPE_ERROR						0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR				0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR				0x824E
#define GL_DEBUG_TYPE_PORTABILITY					0x824F
#define GL_DEBUG_TYPE_PERFORMANCE					0x8250
#define GL_DEBUG_TYPE_OTHER						0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH					0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES					0x9144
#define GL_DEBUG_LOGGED_MESSAGES					0x9145
#define GL_DEBUG_SEVERITY_HIGH						0x9146
#define GL_DEBUG_SEVERITY_MEDIUM					0x9147
#define GL_DEBUG_SEVERITY_LOW						0x9148
#define GL_DEBUG_TYPE_MARKER						0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP					0x8269
#define GL_DEBUG_TYPE_POP_GROUP						0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION					0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH					0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH					0x826D
#define GL_BUFFER							0x82E0
#define GL_SHADER							0x82E1
#define GL_PROGRAM							0x82E2
#define GL_VERTEX_ARRAY							0x8074
#define GL_QUERY							0x82E3
#define GL_PROGRAM_PIPELINE						0x82E4
#define GL_SAMPLER							0x82E6
#define GL_MAX_LABEL_LENGTH						0x82E8
#define GL_DEBUG_OUTPUT							0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT					0x00000002
#define GL_MAX_UNIFORM_LOCATIONS					0x826E
#define GL_FRAMEBUFFER_DEFAULT_WIDTH					0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT					0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS					0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES					0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS			0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH					0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT					0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS					0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES					0x9318
#define GL_INTERNALFORMAT_SUPPORTED					0x826F
#define GL_INTERNALFORMAT_PREFERRED					0x8270
#define GL_INTERNALFORMAT_RED_SIZE					0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE					0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE					0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE					0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE					0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE					0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE					0x8277
#define GL_INTERNALFORMAT_RED_TYPE					0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE					0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE					0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE					0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE					0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE					0x827D
#define GL_MAX_WIDTH							0x827E
#define GL_MAX_HEIGHT							0x827F
#define GL_MAX_DEPTH							0x8280
#define GL_MAX_LAYERS							0x8281
#define GL_MAX_COMBINED_DIMENSIONS					0x8282
#define GL_COLOR_COMPONENTS						0x8283
#define GL_DEPTH_COMPONENTS						0x8284
#define GL_STENCIL_COMPONENTS						0x8285
#define GL_COLOR_RENDERABLE						0x8286
#define GL_DEPTH_RENDERABLE						0x8287
#define GL_STENCIL_RENDERABLE						0x8288
#define GL_FRAMEBUFFER_RENDERABLE					0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED				0x828A
#define GL_FRAMEBUFFER_BLEND						0x828B
#define GL_READ_PIXELS							0x828C
#define GL_READ_PIXELS_FORMAT						0x828D
#define GL_READ_PIXELS_TYPE						0x828E
#define GL_TEXTURE_IMAGE_FORMAT						0x828F
#define GL_TEXTURE_IMAGE_TYPE						0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT					0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE					0x8292
#define GL_MIPMAP							0x8293
#define GL_MANUAL_GENERATE_MIPMAP					0x8294
#define GL_AUTO_GENERATE_MIPMAP						0x8295
#define GL_COLOR_ENCODING						0x8296
#define GL_SRGB_READ							0x8297
#define GL_SRGB_WRITE							0x8298
#define GL_FILTER							0x829A
#define GL_VERTEX_TEXTURE						0x829B
#define GL_TESS_CONTROL_TEXTURE						0x829C
#define GL_TESS_EVALUATION_TEXTURE					0x829D
#define GL_GEOMETRY_TEXTURE						0x829E
#define GL_FRAGMENT_TEXTURE						0x829F
#define GL_COMPUTE_TEXTURE						0x82A0
#define GL_TEXTURE_SHADOW						0x82A1
#define GL_TEXTURE_GATHER						0x82A2
#define GL_TEXTURE_GATHER_SHADOW					0x82A3
#define GL_SHADER_IMAGE_LOAD						0x82A4
#define GL_SHADER_IMAGE_STORE						0x82A5
#define GL_SHADER_IMAGE_ATOMIC						0x82A6
#define GL_IMAGE_TEXEL_SIZE						0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS					0x82A8
#define GL_IMAGE_PIXEL_FORMAT						0x82A9
#define GL_IMAGE_PIXEL_TYPE						0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST				0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST			0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE				0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE			0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH				0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT				0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE				0x82B3
#define GL_CLEAR_BUFFER							0x82B4
#define GL_TEXTURE_VIEW							0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS					0x82B6
#define GL_FULL_SUPPORT							0x82B7
#define GL_CAVEAT_SUPPORT						0x82B8
#define GL_IMAGE_CLASS_4_X_32						0x82B9
#define GL_IMAGE_CLASS_2_X_32						0x82BA
#define GL_IMAGE_CLASS_1_X_32						0x82BB
#define GL_IMAGE_CLASS_4_X_16						0x82BC
#define GL_IMAGE_CLASS_2_X_16						0x82BD
#define GL_IMAGE_CLASS_1_X_16						0x82BE
#define GL_IMAGE_CLASS_4_X_8						0x82BF
#define GL_IMAGE_CLASS_2_X_8						0x82C0
#define GL_IMAGE_CLASS_1_X_8						0x82C1
#define GL_IMAGE_CLASS_11_11_10						0x82C2
#define GL_IMAGE_CLASS_10_10_10_2					0x82C3
#define GL_VIEW_CLASS_128_BITS						0x82C4
#define GL_VIEW_CLASS_96_BITS						0x82C5
#define GL_VIEW_CLASS_64_BITS						0x82C6
#define GL_VIEW_CLASS_48_BITS						0x82C7
#define GL_VIEW_CLASS_32_BITS						0x82C8
#define GL_VIEW_CLASS_24_BITS						0x82C9
#define GL_VIEW_CLASS_16_BITS						0x82CA
#define GL_VIEW_CLASS_8_BITS						0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB					0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA					0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA					0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA					0x82CF
#define GL_VIEW_CLASS_RGTC1_RED						0x82D0
#define GL_VIEW_CLASS_RGTC2_RG						0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM					0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT					0x82D3
#define GL_UNIFORM							0x92E1
#define GL_UNIFORM_BLOCK						0x92E2
#define GL_PROGRAM_INPUT						0x92E3
#define GL_PROGRAM_OUTPUT						0x92E4
#define GL_BUFFER_VARIABLE						0x92E5
#define GL_SHADER_STORAGE_BLOCK						0x92E6
#define GL_VERTEX_SUBROUTINE						0x92E8
#define GL_TESS_CONTROL_SUBROUTINE					0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE					0x92EA
#define GL_GEOMETRY_SUBROUTINE						0x92EB
#define GL_FRAGMENT_SUBROUTINE						0x92EC
#define GL_COMPUTE_SUBROUTINE						0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM					0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM				0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM				0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM					0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM					0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM					0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING					0x92F4
#define GL_ACTIVE_RESOURCES						0x92F5
#define GL_MAX_NAME_LENGTH						0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES					0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES				0x92F8
#define GL_NAME_LENGTH							0x92F9
#define GL_TYPE								0x92FA
#define GL_ARRAY_SIZE							0x92FB
#define GL_OFFSET							0x92FC
#define GL_BLOCK_INDEX							0x92FD
#define GL_ARRAY_STRIDE							0x92FE
#define GL_MATRIX_STRIDE						0x92FF
#define GL_IS_ROW_MAJOR							0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX					0x9301
#define GL_BUFFER_BINDING						0x9302
#define GL_BUFFER_DATA_SIZE						0x9303
#define GL_NUM_ACTIVE_VARIABLES						0x9304
#define GL_ACTIVE_VARIABLES						0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER					0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER				0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER				0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER				0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER				0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER					0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE						0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE					0x930D
#define GL_LOCATION							0x930E
#define GL_LOCATION_INDEX						0x930F
#define GL_IS_PER_PATCH							0x92E7
#define GL_SHADER_STORAGE_BUFFER					0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING				0x90D3
#define GL_SHADER_STORAGE_BUFFER_START					0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE					0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS				0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS				0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS			0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS			0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS				0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS				0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS				0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS				0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE				0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT			0x90DF
#define GL_SHADER_STORAGE_BARRIER_BIT					0x00002000
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES				0x8F39
#define GL_DEPTH_STENCIL_TEXTURE_MODE					0x90EA
#define GL_TEXTURE_BUFFER_OFFSET					0x919D
#define GL_TEXTURE_BUFFER_SIZE						0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT				0x919F
#define GL_TEXTURE_VIEW_MIN_LEVEL					0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS					0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER					0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS					0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS					0x82DF
#define GL_VERTEX_ATTRIB_BINDING					0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET				0x82D5
#define GL_VERTEX_BINDING_DIVISOR					0x82D6
#define GL_VERTEX_BINDING_OFFSET					0x82D7
#define GL_VERTEX_BINDING_STRIDE					0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET				0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS					0x82DA
#define GL_VERTEX_BINDING_BUFFER					0x8F4F
#define GL_DISPLAY_LIST							0x82E7
#define GL_STACK_UNDERFLOW						0x0504
#define GL_STACK_OVERFLOW						0x0503
#define GL_MAX_VERTEX_ATTRIB_STRIDE					0x82E5
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED			0x8221
#define GL_TEXTURE_BUFFER_BINDING					0x8C2A
#define GL_MAP_PERSISTENT_BIT						0x0040
#define GL_MAP_COHERENT_BIT						0x0080
#define GL_DYNAMIC_STORAGE_BIT						0x0100
#define GL_CLIENT_STORAGE_BIT						0x0200
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT				0x00004000
#define GL_BUFFER_IMMUTABLE_STORAGE					0x821F
#define GL_BUFFER_STORAGE_FLAGS						0x8220
#define GL_CLEAR_TEXTURE						0x9365
#define GL_LOCATION_COMPONENT						0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX				0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE				0x934C
#define GL_QUERY_BUFFER							0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT					0x00008000
#define GL_QUERY_BUFFER_BINDING						0x9193
#define GL_QUERY_RESULT_NO_WAIT						0x9194
#define GL_MIRROR_CLAMP_TO_EDGE						0x8743
#define GL_CONTEXT_LOST							0x0507
#define GL_NEGATIVE_ONE_TO_ONE						0x935E
#define GL_ZERO_TO_ONE							0x935F
#define GL_CLIP_ORIGIN							0x935C
#define GL_CLIP_DEPTH_MODE						0x935D
#define GL_QUERY_WAIT_INVERTED						0x8E17
#define GL_QUERY_NO_WAIT_INVERTED					0x8E18
#define GL_QUERY_BY_REGION_WAIT_INVERTED				0x8E19
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED				0x8E1A
#define GL_MAX_CULL_DISTANCES						0x82F9
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES				0x82FA
#define GL_TEXTURE_TARGET						0x1006
#define GL_QUERY_TARGET							0x82EA
#define GL_GUILTY_CONTEXT_RESET						0x8253
#define GL_INNOCENT_CONTEXT_RESET					0x8254
#define GL_UNKNOWN_CONTEXT_RESET					0x8255
#define GL_RESET_NOTIFICATION_STRATEGY					0x8256
#define GL_LOSE_CONTEXT_ON_RESET					0x8252
#define GL_NO_RESET_NOTIFICATION					0x8261
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT				0x00000004
#define GL_COLOR_TABLE							0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE					0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE				0x80D2
#define GL_PROXY_COLOR_TABLE						0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE				0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE				0x80D5
#define GL_CONVOLUTION_1D						0x8010
#define GL_CONVOLUTION_2D						0x8011
#define GL_SEPARABLE_2D							0x8012
#define GL_HISTOGRAM							0x8024
#define GL_PROXY_HISTOGRAM						0x8025
#define GL_MINMAX							0x802E
#define GL_CONTEXT_RELEASE_BEHAVIOR					0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH				0x82FC
#define GL_SHADER_BINARY_FORMAT_SPIR_V					0x9551
#define GL_SPIR_V_BINARY						0x9552
#define GL_PARAMETER_BUFFER						0x80EE
#define GL_PARAMETER_BUFFER_BINDING					0x80EF
#define GL_CONTEXT_FLAG_NO_ERROR_BIT					0x00000008
#define GL_VERTICES_SUBMITTED						0x82EE
#define GL_PRIMITIVES_SUBMITTED						0x82EF
#define GL_VERTEX_SHADER_INVOCATIONS					0x82F0
#define GL_TESS_CONTROL_SHADER_PATCHES					0x82F1
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS				0x82F2
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED				0x82F3
#define GL_FRAGMENT_SHADER_INVOCATIONS					0x82F4
#define GL_COMPUTE_SHADER_INVOCATIONS					0x82F5
#define GL_CLIPPING_INPUT_PRIMITIVES					0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES					0x82F7
#define GL_POLYGON_OFFSET_CLAMP						0x8E1B
#define GL_SPIR_V_EXTENSIONS						0x9553
#define GL_NUM_SPIR_V_EXTENSIONS					0x9554
#define GL_TEXTURE_MAX_ANISOTROPY					0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY					0x84FF
#define GL_TRANSFORM_FEEDBACK_OVERFLOW					0x82EC
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW				0x82ED

// DATA TYPES
typedef char               GLchar;
typedef char               GLcharARB;
typedef char               GLbyte;
typedef unsigned char      GLubyte;
typedef unsigned char      GLboolean;
typedef unsigned short     GLhalfNV;
typedef unsigned short int GLhalf;
typedef unsigned short int GLhalfARB;
typedef unsigned short int GLushort;
typedef short int          GLshort;
typedef unsigned int       GLenum;
typedef unsigned int       GLbitfield;
typedef unsigned int       GLuint;
typedef unsigned int       GLhandleARB;
typedef int                GLint;
typedef int                GLsizei;
typedef long               GLclampx;
typedef long               GLfixed;
typedef long int           GLintptr;
typedef long int           GLintptrARB;
typedef long int           GLsizeiptr;
typedef long int           GLsizeiptrARB;
typedef long long          GLint64;
typedef long long          GLint64EXT;
typedef unsigned long long GLuint64;
typedef unsigned long long GLuint64EXT;
typedef float              GLfloat;
typedef float              GLclampf;
typedef double             GLdouble;
typedef double             GLclampd;
typedef void               GLvoid;
typedef void*              GLeglClientBufferEXT;
typedef void*              GLeglImageOES;
typedef GLintptr           GLvdpauSurfaceNV;
typedef struct __GLsync *GLsync;

typedef void (__stdcall *GLDEBUGPROC)    (GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
//typedef void (__stdcall *GLDEBUGPROCARB) (GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
//typedef void (WINAPI *GLDEBUGPROCKHR) (GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
//typedef void (WINAPI *GLDEBUGPROCAMD) (GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);

// 1.0
#define glCullFace			SharedGL_glCullFace
#define glFrontFace			SharedGL_glFrontFace
#define glHint				SharedGL_glHint
#define glLineWidth			SharedGL_glLineWidth
#define glPointSize			SharedGL_glPointSize
#define glPolygonMode			SharedGL_glPolygonMode
#define glScissor			SharedGL_glScissor
#define glTexParameterf			SharedGL_glTexParameterf
#define glTexParameterfv		SharedGL_glTexParameterfv
#define glTexParameteri			SharedGL_glTexParameteri
#define glTexParameteriv		SharedGL_glTexParameteriv
#define glTexImage1D			SharedGL_glTexImage1D
#define glTexImage2D			SharedGL_glTexImage2D
#define glDrawBuffer			SharedGL_glDrawBuffer
#define glClear				SharedGL_glClear
#define glClearColor			SharedGL_glClearColor
#define glClearStencil			SharedGL_glClearStencil
#define glClearDepth			SharedGL_glClearDepth
#define glStencilMask			SharedGL_glStencilMask
#define glColorMask			SharedGL_glColorMask
#define glDepthMask			SharedGL_glDepthMask
#define glDisable			SharedGL_glDisable
#define glEnable			SharedGL_glEnable
#define glFinish			SharedGL_glFinish
#define glFlush				SharedGL_glFlush
#define glBlendFunc			SharedGL_glBlendFunc
#define glLogicOp			SharedGL_glLogicOp
#define glStencilFunc			SharedGL_glStencilFunc
#define glStencilOp			SharedGL_glStencilOp
#define glDepthFunc			SharedGL_glDepthFunc
#define glPixelStoref			SharedGL_glPixelStoref
#define glPixelStorei			SharedGL_glPixelStorei
#define glReadBuffer			SharedGL_glReadBuffer
#define glReadPixels			SharedGL_glReadPixels
#define glGetBooleanv			SharedGL_glGetBooleanv
#define glGetDoublev			SharedGL_glGetDoublev
#define glGetError			SharedGL_glGetError
#define glGetFloatv			SharedGL_glGetFloatv
#define glGetIntegerv			SharedGL_glGetIntegerv
#define glGetString			SharedGL_glGetString
#define glGetTexImage			SharedGL_glGetTexImage
#define glGetTexParameterfv		SharedGL_glGetTexParameterfv
#define glGetTexParameteriv		SharedGL_glGetTexParameteriv
#define glGetTexLevelParameterfv	SharedGL_glGetTexLevelParameterfv
#define glGetTexLevelParameteriv	SharedGL_glGetTexLevelParameteriv
#define glIsEnabled			SharedGL_glIsEnabled
#define glDepthRange			SharedGL_glDepthRange
#define glViewport			SharedGL_glViewport

typedef void           (__stdcall *PFNGLCULLFACEPROC)               (GLenum mode);
typedef void           (__stdcall *PFNGLFRONTFACEPROC)              (GLenum mode);
typedef void           (__stdcall *PFNGLHINTPROC)                   (GLenum target, GLenum mode);
typedef void           (__stdcall *PFNGLLINEWIDTHPROC)              (GLfloat width);
typedef void           (__stdcall *PFNGLPOINTSIZEPROC)              (GLfloat size);
typedef void           (__stdcall *PFNGLPOLYGONMODEPROC)            (GLenum face, GLenum mode);
typedef void           (__stdcall *PFNGLSCISSORPROC)                (GLint x, GLint y, GLsizei width, GLsizei height);
typedef void           (__stdcall *PFNGLTEXPARAMETERFPROC)          (GLenum target, GLenum pname, GLfloat param);
typedef void           (__stdcall *PFNGLTEXPARAMETERFVPROC)         (GLenum target, GLenum pname, const GLfloat *params);
typedef void           (__stdcall *PFNGLTEXPARAMETERIPROC)          (GLenum target, GLenum pname, GLint param);
typedef void           (__stdcall *PFNGLTEXPARAMETERIVPROC)         (GLenum target, GLenum pname, const GLint *params);
typedef void           (__stdcall *PFNGLTEXIMAGE1DPROC)             (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void           (__stdcall *PFNGLTEXIMAGE2DPROC)             (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void           (__stdcall *PFNGLDRAWBUFFERPROC)             (GLenum buf);
typedef void           (__stdcall *PFNGLCLEARPROC)                  (GLbitfield mask);
typedef void           (__stdcall *PFNGLCLEARCOLORPROC)             (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void           (__stdcall *PFNGLCLEARSTENCILPROC)           (GLint s);
typedef void           (__stdcall *PFNGLCLEARDEPTHPROC)             (GLdouble depth);
typedef void           (__stdcall *PFNGLSTENCILMASKPROC)            (GLuint mask);
typedef void           (__stdcall *PFNGLCOLORMASKPROC)              (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void           (__stdcall *PFNGLDEPTHMASKPROC)              (GLboolean flag);
typedef void           (__stdcall *PFNGLDISABLEPROC)                (GLenum cap);
typedef void           (__stdcall *PFNGLENABLEPROC)                 (GLenum cap);
typedef void           (__stdcall *PFNGLFINISHPROC)                 (void);
typedef void           (__stdcall *PFNGLFLUSHPROC)                  (void);
typedef void           (__stdcall *PFNGLBLENDFUNCPROC)              (GLenum sfactor, GLenum dfactor);
typedef void           (__stdcall *PFNGLLOGICOPPROC)                (GLenum opcode);
typedef void           (__stdcall *PFNGLSTENCILFUNCPROC)            (GLenum func, GLint ref, GLuint mask);
typedef void           (__stdcall *PFNGLSTENCILOPPROC)              (GLenum fail, GLenum zfail, GLenum zpass);
typedef void           (__stdcall *PFNGLDEPTHFUNCPROC)              (GLenum func);
typedef void           (__stdcall *PFNGLPIXELSTOREFPROC)            (GLenum pname, GLfloat param);
typedef void           (__stdcall *PFNGLPIXELSTOREIPROC)            (GLenum pname, GLint param);
typedef void           (__stdcall *PFNGLREADBUFFERPROC)             (GLenum src);
typedef void           (__stdcall *PFNGLREADPIXELSPROC)             (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
typedef void           (__stdcall *PFNGLGETBOOLEANVPROC)            (GLenum pname, GLboolean *data);
typedef void           (__stdcall *PFNGLGETDOUBLEVPROC)             (GLenum pname, GLdouble *data);
typedef GLenum         (__stdcall *PFNGLGETERRORPROC)               (void);
typedef void           (__stdcall *PFNGLGETFLOATVPROC)              (GLenum pname, GLfloat *data);
typedef void           (__stdcall *PFNGLGETINTEGERVPROC)            (GLenum pname, GLint *data);
typedef const GLubyte* (__stdcall *PFNGLGETSTRINGPROC)              (GLenum name);
typedef void           (__stdcall *PFNGLGETTEXIMAGEPROC)            (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
typedef void           (__stdcall *PFNGLGETTEXPARAMETERFVPROC)      (GLenum target, GLenum pname, GLfloat *params);
typedef void           (__stdcall *PFNGLGETTEXPARAMETERIVPROC)      (GLenum target, GLenum pname, GLint *params);
typedef void           (__stdcall *PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);
typedef void           (__stdcall *PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);
typedef GLboolean      (__stdcall *PFNGLISENABLEDPROC)              (GLenum cap);
typedef void           (__stdcall *PFNGLDEPTHRANGEPROC)             (GLdouble n, GLdouble f);
typedef void           (__stdcall *PFNGLVIEWPORTPROC)               (GLint x, GLint y, GLsizei width, GLsizei height);

PFNGLCULLFACEPROC		SharedGL_glCullFace		     = 0;
PFNGLFRONTFACEPROC		SharedGL_glFrontFace		     = 0;
PFNGLHINTPROC			SharedGL_glHint		     = 0;
PFNGLLINEWIDTHPROC		SharedGL_glLineWidth		     = 0;
PFNGLPOINTSIZEPROC		SharedGL_glPointSize		     = 0;
PFNGLPOLYGONMODEPROC		SharedGL_glPolygonMode	     = 0;
PFNGLSCISSORPROC		SharedGL_glScissor		     = 0;
PFNGLTEXPARAMETERFPROC		SharedGL_glTexParameterf	     = 0;
PFNGLTEXPARAMETERFVPROC		SharedGL_glTexParameterfv	     = 0;
PFNGLTEXPARAMETERIPROC		SharedGL_glTexParameteri	     = 0;
PFNGLTEXPARAMETERIVPROC		SharedGL_glTexParameteriv	     = 0;
PFNGLTEXIMAGE1DPROC		SharedGL_glTexImage1D	     = 0;
PFNGLTEXIMAGE2DPROC		SharedGL_glTexImage2D	     = 0;
PFNGLDRAWBUFFERPROC		SharedGL_glDrawBuffer	     = 0;
PFNGLCLEARPROC			SharedGL_glClear		     = 0;
PFNGLCLEARCOLORPROC		SharedGL_glClearColor	     = 0;
PFNGLCLEARSTENCILPROC		SharedGL_glClearStencil	     = 0;
PFNGLCLEARDEPTHPROC		SharedGL_glClearDepth	     = 0;
PFNGLSTENCILMASKPROC		SharedGL_glStencilMask	     = 0;
PFNGLCOLORMASKPROC		SharedGL_glColorMask		     = 0;
PFNGLDEPTHMASKPROC		SharedGL_glDepthMask		     = 0;
PFNGLDISABLEPROC		SharedGL_glDisable		     = 0;
PFNGLENABLEPROC			SharedGL_glEnable		     = 0;
PFNGLFINISHPROC			SharedGL_glFinish		     = 0;
PFNGLFLUSHPROC			SharedGL_glFlush		     = 0;
PFNGLBLENDFUNCPROC		SharedGL_glBlendFunc		     = 0;
PFNGLLOGICOPPROC		SharedGL_glLogicOp		     = 0;
PFNGLSTENCILFUNCPROC		SharedGL_glStencilFunc	     = 0;
PFNGLSTENCILOPPROC		SharedGL_glStencilOp		     = 0;
PFNGLDEPTHFUNCPROC		SharedGL_glDepthFunc		     = 0;
PFNGLPIXELSTOREFPROC		SharedGL_glPixelStoref	     = 0;
PFNGLPIXELSTOREIPROC		SharedGL_glPixelStorei	     = 0;
PFNGLREADBUFFERPROC		SharedGL_glReadBuffer	     = 0;
PFNGLREADPIXELSPROC		SharedGL_glReadPixels	     = 0;
PFNGLGETBOOLEANVPROC		SharedGL_glGetBooleanv	     = 0;
PFNGLGETDOUBLEVPROC		SharedGL_glGetDoublev	     = 0;
PFNGLGETERRORPROC		SharedGL_glGetError		     = 0;
PFNGLGETFLOATVPROC		SharedGL_glGetFloatv		     = 0;
PFNGLGETINTEGERVPROC		SharedGL_glGetIntegerv	     = 0;
PFNGLGETSTRINGPROC		SharedGL_glGetString		     = 0;
PFNGLGETTEXIMAGEPROC		SharedGL_glGetTexImage	     = 0;
PFNGLGETTEXPARAMETERFVPROC	SharedGL_glGetTexParameterfv	     = 0;
PFNGLGETTEXPARAMETERIVPROC	SharedGL_glGetTexParameteriv	     = 0;
PFNGLGETTEXLEVELPARAMETERFVPROC SharedGL_glGetTexLevelParameterfv = 0;
PFNGLGETTEXLEVELPARAMETERIVPROC SharedGL_glGetTexLevelParameteriv = 0;
PFNGLISENABLEDPROC		SharedGL_glIsEnabled		     = 0;
PFNGLDEPTHRANGEPROC		SharedGL_glDepthRange	     = 0;
PFNGLVIEWPORTPROC		SharedGL_glViewport		     = 0;

// 1.1
#define glDrawArrays		SharedGL_glDrawArrays
#define glDrawElements		SharedGL_glDrawElements
#define glPolygonOffset		SharedGL_glPolygonOffset
#define glCopyTexImage1D	SharedGL_glCopyTexImage1D
#define glCopyTexImage2D	SharedGL_glCopyTexImage2D
#define glCopyTexSubImage1D	SharedGL_glCopyTexSubImage1D
#define glCopyTexSubImage2D	SharedGL_glCopyTexSubImage2D
#define glTexSubImage1D		SharedGL_glTexSubImage1D
#define glTexSubImage2D		SharedGL_glTexSubImage2D
#define glBindTexture		SharedGL_glBindTexture
#define glDeleteTextures	SharedGL_glDeleteTextures
#define glGenTextures		SharedGL_glGenTextures
#define glIsTexture		SharedGL_glIsTexture

typedef void       (__stdcall *PFNGLDRAWARRAYSPROC)        (GLenum mode, GLint first, GLsizei count);
typedef void       (__stdcall *PFNGLDRAWELEMENTSPROC)      (GLenum mode, GLsizei count, GLenum type, const void *indices);
typedef void       (__stdcall *PFNGLPOLYGONOFFSETPROC)     (GLfloat factor, GLfloat units);
typedef void       (__stdcall *PFNGLCOPYTEXIMAGE1DPROC)    (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void       (__stdcall *PFNGLCOPYTEXIMAGE2DPROC)    (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void       (__stdcall *PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void       (__stdcall *PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void       (__stdcall *PFNGLTEXSUBIMAGE1DPROC)     (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void       (__stdcall *PFNGLTEXSUBIMAGE2DPROC)     (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void       (__stdcall *PFNGLBINDTEXTUREPROC)       (GLenum target, GLuint texture);
typedef void       (__stdcall *PFNGLDELETETEXTURESPROC)    (GLsizei n, const GLuint *textures);
typedef void       (__stdcall *PFNGLGENTEXTURESPROC)       (GLsizei n, GLuint *textures);
typedef GLboolean  (__stdcall *PFNGLISTEXTUREPROC)         (GLuint texture);

PFNGLDRAWARRAYSPROC		SharedGL_glDrawArrays	= 0;
PFNGLDRAWELEMENTSPROC		SharedGL_glDrawElements	= 0;
PFNGLPOLYGONOFFSETPROC		SharedGL_glPolygonOffset	= 0;
PFNGLCOPYTEXIMAGE1DPROC		SharedGL_glCopyTexImage1D	= 0;
PFNGLCOPYTEXIMAGE2DPROC		SharedGL_glCopyTexImage2D	= 0;
PFNGLCOPYTEXSUBIMAGE1DPROC	SharedGL_glCopyTexSubImage1D = 0;
PFNGLCOPYTEXSUBIMAGE2DPROC	SharedGL_glCopyTexSubImage2D = 0;
PFNGLTEXSUBIMAGE1DPROC		SharedGL_glTexSubImage1D	= 0;
PFNGLTEXSUBIMAGE2DPROC		SharedGL_glTexSubImage2D	= 0;
PFNGLBINDTEXTUREPROC		SharedGL_glBindTexture	= 0;
PFNGLDELETETEXTURESPROC		SharedGL_glDeleteTextures	= 0;
PFNGLGENTEXTURESPROC		SharedGL_glGenTextures	= 0;
PFNGLISTEXTUREPROC		SharedGL_glIsTexture		= 0;

// 1.2 
#define glDrawRangeElements	SharedGL_glDrawRangeElements
#define glTexImage3D		SharedGL_glTexImage3D
#define glTexSubImage3D		SharedGL_glTexSubImage3D
#define glCopyTexSubImage3D	SharedGL_glCopyTexSubImage3D

typedef void (__stdcall *PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
typedef void (__stdcall *PFNGLTEXIMAGE3DPROC)        (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
typedef void (__stdcall *PFNGLTEXSUBIMAGE3DPROC)     (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void (__stdcall *PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

PFNGLDRAWRANGEELEMENTSPROC	SharedGL_glDrawRangeElements = 0;
PFNGLTEXIMAGE3DPROC		SharedGL_glTexImage3D	= 0;
PFNGLTEXSUBIMAGE3DPROC		SharedGL_glTexSubImage3D	= 0;
PFNGLCOPYTEXSUBIMAGE3DPROC	SharedGL_glCopyTexSubImage3D = 0;

// 1.3 
#define glActiveTexture			SharedGL_glActiveTexture
#define glSampleCoverage		SharedGL_glSampleCoverage
#define glCompressedTexImage3D		SharedGL_glCompressedTexImage3D
#define glCompressedTexImage2D		SharedGL_glCompressedTexImage2D
#define glCompressedTexImage1D		SharedGL_glCompressedTexImage1D
#define glCompressedTexSubImage3D	SharedGL_glCompressedTexSubImage3D
#define glCompressedTexSubImage2D	SharedGL_glCompressedTexSubImage2D
#define glCompressedTexSubImage1D	SharedGL_glCompressedTexSubImage1D
#define glGetCompressedTexImage		SharedGL_glGetCompressedTexImage

typedef void (__stdcall *PFNGLACTIVETEXTUREPROC)           (GLenum texture);
typedef void (__stdcall *PFNGLSASharedGLLECOVERAGEPROC)          (GLfloat value, GLboolean invert);
typedef void (__stdcall *PFNGLCOSharedGLRESSEDTEXIMAGE3DPROC)    (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
typedef void (__stdcall *PFNGLCOSharedGLRESSEDTEXIMAGE2DPROC)    (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
typedef void (__stdcall *PFNGLCOSharedGLRESSEDTEXIMAGE1DPROC)    (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
typedef void (__stdcall *PFNGLCOSharedGLRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void (__stdcall *PFNGLCOSharedGLRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void (__stdcall *PFNGLCOSharedGLRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void (__stdcall *PFNGLGETCOSharedGLRESSEDTEXIMAGEPROC)   (GLenum target, GLint level, void *img);

PFNGLACTIVETEXTUREPROC			SharedGL_glActiveTexture	      = 0;
PFNGLSASharedGLLECOVERAGEPROC			SharedGL_glSampleCoverage	      = 0;
PFNGLCOSharedGLRESSEDTEXIMAGE3DPROC		SharedGL_glCompressedTexImage3D    = 0;
PFNGLCOSharedGLRESSEDTEXIMAGE2DPROC		SharedGL_glCompressedTexImage2D    = 0;
PFNGLCOSharedGLRESSEDTEXIMAGE1DPROC		SharedGL_glCompressedTexImage1D    = 0;
PFNGLCOSharedGLRESSEDTEXSUBIMAGE3DPROC	SharedGL_glCompressedTexSubImage3D = 0;
PFNGLCOSharedGLRESSEDTEXSUBIMAGE2DPROC	SharedGL_glCompressedTexSubImage2D = 0;
PFNGLCOSharedGLRESSEDTEXSUBIMAGE1DPROC	SharedGL_glCompressedTexSubImage1D = 0;
PFNGLGETCOSharedGLRESSEDTEXIMAGEPROC		SharedGL_glGetCompressedTexImage   = 0;

// 1.4 
#define glBlendFuncSeparate	SharedGL_glBlendFuncSeparate
#define glMultiDrawArrays	SharedGL_glMultiDrawArrays
#define glMultiDrawElements	SharedGL_glMultiDrawElements
#define glPointParameterf	SharedGL_glPointParameterf
#define glPointParameterfv	SharedGL_glPointParameterfv
#define glPointParameteri	SharedGL_glPointParameteri
#define glPointParameteriv	SharedGL_glPointParameteriv
#define glBlendColor		SharedGL_glBlendColor
#define glBlendEquation		SharedGL_glBlendEquation

typedef void (__stdcall *PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (__stdcall *PFNGLMULTIDRAWARRAYSPROC)   (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
typedef void (__stdcall *PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
typedef void (__stdcall *PFNGLPOINTPARAMETERFPROC)   (GLenum pname, GLfloat param);
typedef void (__stdcall *PFNGLPOINTPARAMETERFVPROC)  (GLenum pname, const GLfloat *params);
typedef void (__stdcall *PFNGLPOINTPARAMETERIPROC)   (GLenum pname, GLint param);
typedef void (__stdcall *PFNGLPOINTPARAMETERIVPROC)  (GLenum pname, const GLint *params);
typedef void (__stdcall *PFNGLBLENDCOLORPROC)        (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (__stdcall *PFNGLBLENDEQUATIONPROC)     (GLenum mode);

PFNGLBLENDFUNCSEPARATEPROC	SharedGL_glBlendFuncSeparate = 0;
PFNGLMULTIDRAWARRAYSPROC	SharedGL_glMultiDrawArrays	= 0;
PFNGLMULTIDRAWELEMENTSPROC	SharedGL_glMultiDrawElements = 0;
PFNGLPOINTPARAMETERFPROC	SharedGL_glPointParameterf	= 0;
PFNGLPOINTPARAMETERFVPROC	SharedGL_glPointParameterfv	= 0;
PFNGLPOINTPARAMETERIPROC	SharedGL_glPointParameteri	= 0;
PFNGLPOINTPARAMETERIVPROC	SharedGL_glPointParameteriv	= 0;
PFNGLBLENDCOLORPROC		SharedGL_glBlendColor	= 0;
PFNGLBLENDEQUATIONPROC		SharedGL_glBlendEquation	= 0;

// 1.5 
#define glGenQueries		SharedGL_glGenQueries
#define glDeleteQueries		SharedGL_glDeleteQueries
#define glIsQuery		SharedGL_glIsQuery
#define glBeginQuery		SharedGL_glBeginQuery
#define glEndQuery		SharedGL_glEndQuery
#define glGetQueryiv		SharedGL_glGetQueryiv
#define glGetQueryObjectiv	SharedGL_glGetQueryObjectiv
#define glGetQueryObjectuiv	SharedGL_glGetQueryObjectuiv
#define glBindBuffer		SharedGL_glBindBuffer
#define glDeleteBuffers		SharedGL_glDeleteBuffers
#define glGenBuffers		SharedGL_glGenBuffers
#define glIsBuffer		SharedGL_glIsBuffer
#define glBufferData		SharedGL_glBufferData
#define glBufferSubData		SharedGL_glBufferSubData
#define glGetBufferSubData	SharedGL_glGetBufferSubData
#define glMapBuffer		SharedGL_glMapBuffer
#define glUnmapBuffer		SharedGL_glUnmapBuffer
#define glGetBufferParameteriv	SharedGL_glGetBufferParameteriv
#define glGetBufferPointerv	SharedGL_glGetBufferPointerv

typedef void      (__stdcall *PFNGLGENQUERIESPROC)           (GLsizei n, GLuint *ids);
typedef void      (__stdcall *PFNGLDELETEQUERIESPROC)        (GLsizei n, const GLuint *ids);
typedef GLboolean (__stdcall *PFNGLISQUERYPROC)              (GLuint id);
typedef void      (__stdcall *PFNGLBEGINQUERYPROC)           (GLenum target, GLuint id);
typedef void      (__stdcall *PFNGLENDQUERYPROC)             (GLenum target);
typedef void      (__stdcall *PFNGLGETQUERYIVPROC)           (GLenum target, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETQUERYOBJECTIVPROC)     (GLuint id, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETQUERYOBJECTUIVPROC)    (GLuint id, GLenum pname, GLuint *params);
typedef void      (__stdcall *PFNGLBINDBUFFERPROC)           (GLenum target, GLuint buffer);
typedef void      (__stdcall *PFNGLDELETEBUFFERSPROC)        (GLsizei n, const GLuint *buffers);
typedef void      (__stdcall *PFNGLGENBUFFERSPROC)           (GLsizei n, GLuint *buffers);
typedef GLboolean (__stdcall *PFNGLISBUFFERPROC)             (GLuint buffer);
typedef void      (__stdcall *PFNGLBUFFERDATAPROC)           (GLenum target, GLsizeiptr size, const void *data, GLenum usage);
typedef void      (__stdcall *PFNGLBUFFERSUBDATAPROC)        (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
typedef void      (__stdcall *PFNGLGETBUFFERSUBDATAPROC)     (GLenum target, GLintptr offset, GLsizeiptr size, void *data);
typedef void*     (__stdcall *PFNGLMAPBUFFERPROC)            (GLenum target, GLenum access);
typedef GLboolean (__stdcall *PFNGLUNMAPBUFFERPROC)          (GLenum target);
typedef void      (__stdcall *PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETBUFFERPOINTERVPROC)    (GLenum target, GLenum pname, void **params);

PFNGLGENQUERIESPROC		SharedGL_glGenQueries	   = 0;
PFNGLDELETEQUERIESPROC		SharedGL_glDeleteQueries	   = 0;
PFNGLISQUERYPROC		SharedGL_glIsQuery		   = 0;
PFNGLBEGINQUERYPROC		SharedGL_glBeginQuery	   = 0;
PFNGLENDQUERYPROC		SharedGL_glEndQuery		   = 0;
PFNGLGETQUERYIVPROC		SharedGL_glGetQueryiv	   = 0;
PFNGLGETQUERYOBJECTIVPROC	SharedGL_glGetQueryObjectiv	   = 0;
PFNGLGETQUERYOBJECTUIVPROC	SharedGL_glGetQueryObjectuiv	   = 0;
PFNGLBINDBUFFERPROC		SharedGL_glBindBuffer	   = 0;
PFNGLDELETEBUFFERSPROC		SharedGL_glDeleteBuffers	   = 0;
PFNGLGENBUFFERSPROC		SharedGL_glGenBuffers	   = 0;
PFNGLISBUFFERPROC		SharedGL_glIsBuffer		   = 0;
PFNGLBUFFERDATAPROC		SharedGL_glBufferData	   = 0;
PFNGLBUFFERSUBDATAPROC		SharedGL_glBufferSubData	   = 0;
PFNGLGETBUFFERSUBDATAPROC	SharedGL_glGetBufferSubData	   = 0;
PFNGLMAPBUFFERPROC		SharedGL_glMapBuffer		   = 0;
PFNGLUNMAPBUFFERPROC		SharedGL_glUnmapBuffer	   = 0;
PFNGLGETBUFFERPARAMETERIVPROC	SharedGL_glGetBufferParameteriv = 0;
PFNGLGETBUFFERPOINTERVPROC	SharedGL_glGetBufferPointerv	   = 0;

// 2.0
#define glBlendEquationSeparate		SharedGL_glBlendEquationSeparate
#define glDrawBuffers			SharedGL_glDrawBuffers
#define glStencilOpSeparate		SharedGL_glStencilOpSeparate
#define glStencilFuncSeparate		SharedGL_glStencilFuncSeparate
#define glStencilMaskSeparate		SharedGL_glStencilMaskSeparate
#define glAttachShader			SharedGL_glAttachShader
#define glBindAttribLocation		SharedGL_glBindAttribLocation
#define glCompileShader			SharedGL_glCompileShader
#define glCreateProgram			SharedGL_glCreateProgram
#define glCreateShader			SharedGL_glCreateShader
#define glDeleteProgram			SharedGL_glDeleteProgram
#define glDeleteShader			SharedGL_glDeleteShader
#define glDetachShader			SharedGL_glDetachShader
#define glDisableVertexAttribArray	SharedGL_glDisableVertexAttribArray
#define glEnableVertexAttribArray	SharedGL_glEnableVertexAttribArray
#define glGetActiveAttrib		SharedGL_glGetActiveAttrib
#define glGetActiveUniform		SharedGL_glGetActiveUniform
#define glGetAttachedShaders		SharedGL_glGetAttachedShaders
#define glGetAttribLocation		SharedGL_glGetAttribLocation
#define glGetProgramiv			SharedGL_glGetProgramiv
#define glGetProgramInfoLog		SharedGL_glGetProgramInfoLog
#define glGetShaderiv			SharedGL_glGetShaderiv
#define glGetShaderInfoLog		SharedGL_glGetShaderInfoLog
#define glGetShaderSource		SharedGL_glGetShaderSource
#define glGetUniformLocation		SharedGL_glGetUniformLocation
#define glGetUniformfv			SharedGL_glGetUniformfv
#define glGetUniformiv			SharedGL_glGetUniformiv
#define glGetVertexAttribdv		SharedGL_glGetVertexAttribdv
#define glGetVertexAttribfv		SharedGL_glGetVertexAttribfv
#define glGetVertexAttribiv		SharedGL_glGetVertexAttribiv
#define glGetVertexAttribPointerv	SharedGL_glGetVertexAttribPointerv
#define glIsProgram			SharedGL_glIsProgram
#define glIsShader			SharedGL_glIsShader
#define glLinkProgram			SharedGL_glLinkProgram
#define glShaderSource			SharedGL_glShaderSource
#define glUseProgram			SharedGL_glUseProgram
#define glUniform1f			SharedGL_glUniform1f
#define glUniform2f			SharedGL_glUniform2f
#define glUniform3f			SharedGL_glUniform3f
#define glUniform4f			SharedGL_glUniform4f
#define glUniform1i			SharedGL_glUniform1i
#define glUniform2i			SharedGL_glUniform2i
#define glUniform3i			SharedGL_glUniform3i
#define glUniform4i			SharedGL_glUniform4i
#define glUniform1fv			SharedGL_glUniform1fv
#define glUniform2fv			SharedGL_glUniform2fv
#define glUniform3fv			SharedGL_glUniform3fv
#define glUniform4fv			SharedGL_glUniform4fv
#define glUniform1iv			SharedGL_glUniform1iv
#define glUniform2iv			SharedGL_glUniform2iv
#define glUniform3iv			SharedGL_glUniform3iv
#define glUniform4iv			SharedGL_glUniform4iv
#define glUniformMatrix3fv		SharedGL_glUniformMatrix3fv
#define glUniformMatrix4fv		SharedGL_glUniformMatrix4fv
#define glValidateProgram		SharedGL_glValidateProgram
#define glVertexAttrib1d		SharedGL_glVertexAttrib1d
#define glVertexAttrib1dv		SharedGL_glVertexAttrib1dv
#define glVertexAttrib1f		SharedGL_glVertexAttrib1f
#define glVertexAttrib1fv		SharedGL_glVertexAttrib1fv
#define glVertexAttrib1s		SharedGL_glVertexAttrib1s
#define glVertexAttrib1sv		SharedGL_glVertexAttrib1sv
#define glVertexAttrib2d		SharedGL_glVertexAttrib2d
#define glVertexAttrib2dv		SharedGL_glVertexAttrib2dv
#define glVertexAttrib2f		SharedGL_glVertexAttrib2f
#define glVertexAttrib2fv		SharedGL_glVertexAttrib2fv
#define glVertexAttrib2s		SharedGL_glVertexAttrib2s
#define glVertexAttrib2sv		SharedGL_glVertexAttrib2sv
#define glVertexAttrib3d		SharedGL_glVertexAttrib3d
#define glVertexAttrib3dv		SharedGL_glVertexAttrib3dv
#define glVertexAttrib3f		SharedGL_glVertexAttrib3f
#define glVertexAttrib3fv		SharedGL_glVertexAttrib3fv
#define glVertexAttrib3s		SharedGL_glVertexAttrib3s
#define glVertexAttrib3sv		SharedGL_glVertexAttrib3sv
#define glVertexAttrib4Nbv		SharedGL_glVertexAttrib4Nbv
#define glVertexAttrib4Niv		SharedGL_glVertexAttrib4Niv
#define glVertexAttrib4Nsv		SharedGL_glVertexAttrib4Nsv
#define glVertexAttrib4Nub		SharedGL_glVertexAttrib4Nub
#define glVertexAttrib4Nubv		SharedGL_glVertexAttrib4Nubv
#define glVertexAttrib4Nuiv		SharedGL_glVertexAttrib4Nuiv
#define glVertexAttrib4Nusv		SharedGL_glVertexAttrib4Nusv
#define glVertexAttrib4bv		SharedGL_glVertexAttrib4bv
#define glVertexAttrib4d		SharedGL_glVertexAttrib4d
#define glVertexAttrib4dv		SharedGL_glVertexAttrib4dv
#define glVertexAttrib4f		SharedGL_glVertexAttrib4f
#define glVertexAttrib4fv		SharedGL_glVertexAttrib4fv
#define glVertexAttrib4iv		SharedGL_glVertexAttrib4iv
#define glVertexAttrib4s		SharedGL_glVertexAttrib4s
#define glVertexAttrib4sv		SharedGL_glVertexAttrib4sv
#define glVertexAttrib4ubv		SharedGL_glVertexAttrib4ubv
#define glVertexAttrib4uiv		SharedGL_glVertexAttrib4uiv
#define glVertexAttrib4usv		SharedGL_glVertexAttrib4usv
#define glVertexAttribPointer		SharedGL_glVertexAttribPointer

typedef void      (__stdcall *PFNGLBLENDEQUATIONSEPARATEPROC)    (GLenum modeRGB, GLenum modeAlpha);
typedef void      (__stdcall *PFNGLDRAWBUFFERSPROC)              (GLsizei n, const GLenum *bufs);
typedef void      (__stdcall *PFNGLSTENCILOPSEPARATEPROC)        (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void      (__stdcall *PFNGLSTENCILFUNCSEPARATEPROC)      (GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void      (__stdcall *PFNGLSTENCILMASKSEPARATEPROC)      (GLenum face, GLuint mask);
typedef void      (__stdcall *PFNGLATTACHSHADERPROC)             (GLuint program, GLuint shader);
typedef void      (__stdcall *PFNGLBINDATTRIBLOCATIONPROC)       (GLuint program, GLuint index, const GLchar *name);
typedef void      (__stdcall *PFNGLCOSharedGLILESHADERPROC)            (GLuint shader);
typedef GLuint    (__stdcall *PFNGLCREATEPROGRASharedGLROC)            (void);
typedef GLuint    (__stdcall *PFNGLCREATESHADERPROC)             (GLenum type);
typedef void      (__stdcall *PFNGLDELETEPROGRASharedGLROC)            (GLuint program);
typedef void      (__stdcall *PFNGLDELETESHADERPROC)             (GLuint shader);
typedef void      (__stdcall *PFNGLDETACHSHADERPROC)             (GLuint program, GLuint shader);
typedef void      (__stdcall *PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);
typedef void      (__stdcall *PFNGLENABLEVERTEXATTRIBARRAYPROC)  (GLuint index);
typedef void      (__stdcall *PFNGLGETACTIVEATTRIBPROC)          (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void      (__stdcall *PFNGLGETACTIVEUNIFORSharedGLROC)         (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
typedef void      (__stdcall *PFNGLGETATTACHEDSHADERSPROC)       (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
typedef GLint     (__stdcall *PFNGLGETATTRIBLOCATIONPROC)        (GLuint program, const GLchar *name);
typedef void      (__stdcall *PFNGLGETPROGRAMIVPROC)             (GLuint program, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETPROGRAMINFOLOGPROC)        (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void      (__stdcall *PFNGLGETSHADERIVPROC)              (GLuint shader, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETSHADERINFOLOGPROC)         (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void      (__stdcall *PFNGLGETSHADERSOURCEPROC)          (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
typedef GLint     (__stdcall *PFNGLGETUNIFORMLOCATIONPROC)       (GLuint program, const GLchar *name);
typedef void      (__stdcall *PFNGLGETUNIFORMFVPROC)             (GLuint program, GLint location, GLfloat *params);
typedef void      (__stdcall *PFNGLGETUNIFORMIVPROC)             (GLuint program, GLint location, GLint *params);
typedef void      (__stdcall *PFNGLGETVERTEXATTRIBDVPROC)        (GLuint index, GLenum pname, GLdouble *params);
typedef void      (__stdcall *PFNGLGETVERTEXATTRIBFVPROC)        (GLuint index, GLenum pname, GLfloat *params);
typedef void      (__stdcall *PFNGLGETVERTEXATTRIBIVPROC)        (GLuint index, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETVERTEXATTRIBPOINTERVPROC)  (GLuint index, GLenum pname, void **pointer);
typedef GLboolean (__stdcall *PFNGLISPROGRASharedGLROC)                (GLuint program);
typedef GLboolean (__stdcall *PFNGLISSHADERPROC)                 (GLuint shader);
typedef void      (__stdcall *PFNGLLINKPROGRASharedGLROC)              (GLuint program);
typedef void      (__stdcall *PFNGLSHADERSOURCEPROC)             (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
typedef void      (__stdcall *PFNGLUSEPROGRASharedGLROC)               (GLuint program);
typedef void      (__stdcall *PFNGLUNIFORM1FPROC)                (GLint location, GLfloat v0);
typedef void      (__stdcall *PFNGLUNIFORM2FPROC)                (GLint location, GLfloat v0, GLfloat v1);
typedef void      (__stdcall *PFNGLUNIFORM3FPROC)                (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void      (__stdcall *PFNGLUNIFORM4FPROC)                (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void      (__stdcall *PFNGLUNIFORM1IPROC)                (GLint location, GLint v0);
typedef void      (__stdcall *PFNGLUNIFORM2IPROC)                (GLint location, GLint v0, GLint v1);
typedef void      (__stdcall *PFNGLUNIFORM3IPROC)                (GLint location, GLint v0, GLint v1, GLint v2);
typedef void      (__stdcall *PFNGLUNIFORM4IPROC)                (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void      (__stdcall *PFNGLUNIFORM1FVPROC)               (GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLUNIFORM2FVPROC)               (GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLUNIFORM3FVPROC)               (GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLUNIFORM4FVPROC)               (GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLUNIFORM1IVPROC)               (GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLUNIFORM2IVPROC)               (GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLUNIFORM3IVPROC)               (GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLUNIFORM4IVPROC)               (GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX2FVPROC)         (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX3FVPROC)         (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX4FVPROC)         (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLVALIDATEPROGRASharedGLROC)          (GLuint program);
typedef void      (__stdcall *PFNGLVERTEXATTRIB1DPROC)           (GLuint index, GLdouble x);
typedef void      (__stdcall *PFNGLVERTEXATTRIB1DVPROC)          (GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB1FPROC)           (GLuint index, GLfloat x);
typedef void      (__stdcall *PFNGLVERTEXATTRIB1FVPROC)          (GLuint index, const GLfloat *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB1SPROC)           (GLuint index, GLshort x);
typedef void      (__stdcall *PFNGLVERTEXATTRIB1SVPROC)          (GLuint index, const GLshort *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB2DPROC)           (GLuint index, GLdouble x, GLdouble y);
typedef void      (__stdcall *PFNGLVERTEXATTRIB2DVPROC)          (GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB2FPROC)           (GLuint index, GLfloat x, GLfloat y);
typedef void      (__stdcall *PFNGLVERTEXATTRIB2FVPROC)          (GLuint index, const GLfloat *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB2SPROC)           (GLuint index, GLshort x, GLshort y);
typedef void      (__stdcall *PFNGLVERTEXATTRIB2SVPROC)          (GLuint index, const GLshort *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB3DPROC)           (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void      (__stdcall *PFNGLVERTEXATTRIB3DVPROC)          (GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB3FPROC)           (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void      (__stdcall *PFNGLVERTEXATTRIB3FVPROC)          (GLuint index, const GLfloat *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB3SPROC)           (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void      (__stdcall *PFNGLVERTEXATTRIB3SVPROC)          (GLuint index, const GLshort *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4NBVPROC)         (GLuint index, const GLbyte *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4NIVPROC)         (GLuint index, const GLint *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4NSVPROC)         (GLuint index, const GLshort *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4NUBPROC)         (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4NUBVPROC)        (GLuint index, const GLubyte *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4NUIVPROC)        (GLuint index, const GLuint *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4NUSVPROC)        (GLuint index, const GLushort *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4BVPROC)          (GLuint index, const GLbyte *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4DPROC)           (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4DVPROC)          (GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4FPROC)           (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4FVPROC)          (GLuint index, const GLfloat *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4IVPROC)          (GLuint index, const GLint *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4SPROC)           (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4SVPROC)          (GLuint index, const GLshort *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4UBVPROC)         (GLuint index, const GLubyte *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4UIVPROC)         (GLuint index, const GLuint *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIB4USVPROC)         (GLuint index, const GLushort *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIBPOINTERPROC)      (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);

PFNGLBLENDEQUATIONSEPARATEPROC		SharedGL_glBlendEquationSeparate    = 0;
PFNGLDRAWBUFFERSPROC			SharedGL_glDrawBuffers	       = 0;
PFNGLSTENCILOPSEPARATEPROC		SharedGL_glStencilOpSeparate	       = 0;
PFNGLSTENCILFUNCSEPARATEPROC		SharedGL_glStencilFuncSeparate      = 0;
PFNGLSTENCILMASKSEPARATEPROC		SharedGL_glStencilMaskSeparate      = 0;
PFNGLATTACHSHADERPROC			SharedGL_glAttachShader	       = 0;
PFNGLBINDATTRIBLOCATIONPROC		SharedGL_glBindAttribLocation       = 0;
PFNGLCOSharedGLILESHADERPROC			SharedGL_glCompileShader	       = 0;
PFNGLCREATEPROGRASharedGLROC			SharedGL_glCreateProgram	       = 0;
PFNGLCREATESHADERPROC			SharedGL_glCreateShader	       = 0;
PFNGLDELETEPROGRASharedGLROC			SharedGL_glDeleteProgram	       = 0;
PFNGLDELETESHADERPROC			SharedGL_glDeleteShader	       = 0;
PFNGLDETACHSHADERPROC			SharedGL_glDetachShader	       = 0;
PFNGLDISABLEVERTEXATTRIBARRAYPROC	SharedGL_glDisableVertexAttribArray = 0;
PFNGLENABLEVERTEXATTRIBARRAYPROC	SharedGL_glEnableVertexAttribArray  = 0;
PFNGLGETACTIVEATTRIBPROC		SharedGL_glGetActiveAttrib	       = 0;
PFNGLGETACTIVEUNIFORSharedGLROC		SharedGL_glGetActiveUniform	       = 0;
PFNGLGETATTACHEDSHADERSPROC		SharedGL_glGetAttachedShaders       = 0;
PFNGLGETATTRIBLOCATIONPROC		SharedGL_glGetAttribLocation	       = 0;
PFNGLGETPROGRAMIVPROC			SharedGL_glGetProgramiv	       = 0;
PFNGLGETPROGRAMINFOLOGPROC		SharedGL_glGetProgramInfoLog	       = 0;
PFNGLGETSHADERIVPROC			SharedGL_glGetShaderiv	       = 0;
PFNGLGETSHADERINFOLOGPROC		SharedGL_glGetShaderInfoLog	       = 0;
PFNGLGETSHADERSOURCEPROC		SharedGL_glGetShaderSource	       = 0;
PFNGLGETUNIFORMLOCATIONPROC		SharedGL_glGetUniformLocation       = 0;
PFNGLGETUNIFORMFVPROC			SharedGL_glGetUniformfv	       = 0;
PFNGLGETUNIFORMIVPROC			SharedGL_glGetUniformiv	       = 0;
PFNGLGETVERTEXATTRIBDVPROC		SharedGL_glGetVertexAttribdv	       = 0;
PFNGLGETVERTEXATTRIBFVPROC		SharedGL_glGetVertexAttribfv	       = 0;
PFNGLGETVERTEXATTRIBIVPROC		SharedGL_glGetVertexAttribiv	       = 0;
PFNGLGETVERTEXATTRIBPOINTERVPROC	SharedGL_glGetVertexAttribPointerv  = 0;
PFNGLISPROGRASharedGLROC			SharedGL_glIsProgram		       = 0;
PFNGLISSHADERPROC			SharedGL_glIsShader		       = 0;
PFNGLLINKPROGRASharedGLROC			SharedGL_glLinkProgram	       = 0;
PFNGLSHADERSOURCEPROC			SharedGL_glShaderSource	       = 0;
PFNGLUSEPROGRASharedGLROC			SharedGL_glUseProgram	       = 0;
PFNGLUNIFORM1FPROC			SharedGL_glUniform1f		       = 0;
PFNGLUNIFORM2FPROC			SharedGL_glUniform2f		       = 0;
PFNGLUNIFORM3FPROC			SharedGL_glUniform3f		       = 0;
PFNGLUNIFORM4FPROC			SharedGL_glUniform4f		       = 0;
PFNGLUNIFORM1IPROC			SharedGL_glUniform1i		       = 0;
PFNGLUNIFORM2IPROC			SharedGL_glUniform2i		       = 0;
PFNGLUNIFORM3IPROC			SharedGL_glUniform3i		       = 0;
PFNGLUNIFORM4IPROC			SharedGL_glUniform4i		       = 0;
PFNGLUNIFORM1FVPROC			SharedGL_glUniform1fv	       = 0;
PFNGLUNIFORM2FVPROC			SharedGL_glUniform2fv	       = 0;
PFNGLUNIFORM3FVPROC			SharedGL_glUniform3fv	       = 0;
PFNGLUNIFORM4FVPROC			SharedGL_glUniform4fv	       = 0;
PFNGLUNIFORM1IVPROC			SharedGL_glUniform1iv	       = 0;
PFNGLUNIFORM2IVPROC			SharedGL_glUniform2iv	       = 0;
PFNGLUNIFORM3IVPROC			SharedGL_glUniform3iv	       = 0;
PFNGLUNIFORM4IVPROC			SharedGL_glUniform4iv	       = 0;
PFNGLUNIFORMMATRIX2FVPROC		SharedGL_glUniformMatrix2fv	       = 0;
PFNGLUNIFORMMATRIX3FVPROC		SharedGL_glUniformMatrix3fv	       = 0;
PFNGLUNIFORMMATRIX4FVPROC		SharedGL_glUniformMatrix4fv	       = 0;
PFNGLVALIDATEPROGRASharedGLROC		SharedGL_glValidateProgram	       = 0;
PFNGLVERTEXATTRIB1DPROC			SharedGL_glVertexAttrib1d	       = 0;
PFNGLVERTEXATTRIB1DVPROC		SharedGL_glVertexAttrib1dv	       = 0;
PFNGLVERTEXATTRIB1FPROC			SharedGL_glVertexAttrib1f	       = 0;
PFNGLVERTEXATTRIB1FVPROC		SharedGL_glVertexAttrib1fv	       = 0;
PFNGLVERTEXATTRIB1SPROC			SharedGL_glVertexAttrib1s	       = 0;
PFNGLVERTEXATTRIB1SVPROC		SharedGL_glVertexAttrib1sv	       = 0;
PFNGLVERTEXATTRIB2DPROC			SharedGL_glVertexAttrib2d	       = 0;
PFNGLVERTEXATTRIB2DVPROC		SharedGL_glVertexAttrib2dv	       = 0;
PFNGLVERTEXATTRIB2FPROC			SharedGL_glVertexAttrib2f	       = 0;
PFNGLVERTEXATTRIB2FVPROC		SharedGL_glVertexAttrib2fv	       = 0;
PFNGLVERTEXATTRIB2SPROC			SharedGL_glVertexAttrib2s	       = 0;
PFNGLVERTEXATTRIB2SVPROC		SharedGL_glVertexAttrib2sv	       = 0;
PFNGLVERTEXATTRIB3DPROC			SharedGL_glVertexAttrib3d	       = 0;
PFNGLVERTEXATTRIB3DVPROC		SharedGL_glVertexAttrib3dv	       = 0;
PFNGLVERTEXATTRIB3FPROC			SharedGL_glVertexAttrib3f	       = 0;
PFNGLVERTEXATTRIB3FVPROC		SharedGL_glVertexAttrib3fv	       = 0;
PFNGLVERTEXATTRIB3SPROC			SharedGL_glVertexAttrib3s	       = 0;
PFNGLVERTEXATTRIB3SVPROC		SharedGL_glVertexAttrib3sv	       = 0;
PFNGLVERTEXATTRIB4NBVPROC		SharedGL_glVertexAttrib4Nbv	       = 0;
PFNGLVERTEXATTRIB4NIVPROC		SharedGL_glVertexAttrib4Niv	       = 0;
PFNGLVERTEXATTRIB4NSVPROC		SharedGL_glVertexAttrib4Nsv	       = 0;
PFNGLVERTEXATTRIB4NUBPROC		SharedGL_glVertexAttrib4Nub	       = 0;
PFNGLVERTEXATTRIB4NUBVPROC		SharedGL_glVertexAttrib4Nubv	       = 0;
PFNGLVERTEXATTRIB4NUIVPROC		SharedGL_glVertexAttrib4Nuiv	       = 0;
PFNGLVERTEXATTRIB4NUSVPROC		SharedGL_glVertexAttrib4Nusv	       = 0;
PFNGLVERTEXATTRIB4BVPROC		SharedGL_glVertexAttrib4bv	       = 0;
PFNGLVERTEXATTRIB4DPROC			SharedGL_glVertexAttrib4d	       = 0;
PFNGLVERTEXATTRIB4DVPROC		SharedGL_glVertexAttrib4dv	       = 0;
PFNGLVERTEXATTRIB4FPROC			SharedGL_glVertexAttrib4f	       = 0;
PFNGLVERTEXATTRIB4FVPROC		SharedGL_glVertexAttrib4fv	       = 0;
PFNGLVERTEXATTRIB4IVPROC		SharedGL_glVertexAttrib4iv	       = 0;
PFNGLVERTEXATTRIB4SPROC			SharedGL_glVertexAttrib4s	       = 0;
PFNGLVERTEXATTRIB4SVPROC		SharedGL_glVertexAttrib4sv	       = 0;
PFNGLVERTEXATTRIB4UBVPROC		SharedGL_glVertexAttrib4ubv	       = 0;
PFNGLVERTEXATTRIB4UIVPROC		SharedGL_glVertexAttrib4uiv	       = 0;
PFNGLVERTEXATTRIB4USVPROC		SharedGL_glVertexAttrib4usv	       = 0;
PFNGLVERTEXATTRIBPOINTERPROC		SharedGL_glVertexAttribPointer      = 0;

// 2.1
#define glUniformMatrix2x3fv SharedGL_glUniformMatrix2x3fv
#define glUniformMatrix3x2fv SharedGL_glUniformMatrix3x2fv
#define glUniformMatrix2x4fv SharedGL_glUniformMatrix2x4fv
#define glUniformMatrix4x2fv SharedGL_glUniformMatrix4x2fv
#define glUniformMatrix3x4fv SharedGL_glUniformMatrix3x4fv
#define glUniformMatrix4x3fv SharedGL_glUniformMatrix4x3fv

typedef void (__stdcall *PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (__stdcall *PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (__stdcall *PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (__stdcall *PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (__stdcall *PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (__stdcall *PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

PFNGLUNIFORMMATRIX2X3FVPROC SharedGL_glUniformMatrix2x3fv = 0;
PFNGLUNIFORMMATRIX3X2FVPROC SharedGL_glUniformMatrix3x2fv = 0;
PFNGLUNIFORMMATRIX2X4FVPROC SharedGL_glUniformMatrix2x4fv = 0;
PFNGLUNIFORMMATRIX4X2FVPROC SharedGL_glUniformMatrix4x2fv = 0;
PFNGLUNIFORMMATRIX3X4FVPROC SharedGL_glUniformMatrix3x4fv = 0;
PFNGLUNIFORMMATRIX4X3FVPROC SharedGL_glUniformMatrix4x3fv = 0;

// 3.0 
#define glColorMaski				SharedGL_glColorMaski
#define glGetBooleani_v				SharedGL_glGetBooleani_v
#define glGetIntegeri_v				SharedGL_glGetIntegeri_v
#define glEnablei				SharedGL_glEnablei
#define glDisablei				SharedGL_glDisablei
#define glIsEnabledi				SharedGL_glIsEnabledi
#define glEndTransformFeedback			SharedGL_glEndTransformFeedback
#define glBindBufferRange			SharedGL_glBindBufferRange
#define glBindBufferBase			SharedGL_glBindBufferBase
#define glTransformFeedbackVaryings		SharedGL_glTransformFeedbackVaryings
#define glGetTransformFeedbackVarying		SharedGL_glGetTransformFeedbackVarying
#define glClampColor				SharedGL_glClampColor
#define glBeginConditionalRender		SharedGL_glBeginConditionalRender
#define glEndConditionalRender			SharedGL_glEndConditionalRender
#define glVertexAttribIPointer			SharedGL_glVertexAttribIPointer
#define glGetVertexAttribIiv			SharedGL_glGetVertexAttribIiv
#define glGetVertexAttribIuiv			SharedGL_glGetVertexAttribIuiv
#define glVertexAttribI1i			SharedGL_glVertexAttribI1i
#define glVertexAttribI2i			SharedGL_glVertexAttribI2i
#define glVertexAttribI3i			SharedGL_glVertexAttribI3i
#define glVertexAttribI4i			SharedGL_glVertexAttribI4i
#define glVertexAttribI1ui			SharedGL_glVertexAttribI1ui
#define glVertexAttribI2ui			SharedGL_glVertexAttribI2ui
#define glVertexAttribI3ui			SharedGL_glVertexAttribI3ui
#define glVertexAttribI4ui			SharedGL_glVertexAttribI4ui
#define glVertexAttribI1iv			SharedGL_glVertexAttribI1iv
#define glVertexAttribI2iv			SharedGL_glVertexAttribI2iv
#define glVertexAttribI3iv			SharedGL_glVertexAttribI3iv
#define glVertexAttribI4iv			SharedGL_glVertexAttribI4iv
#define glVertexAttribI1uiv			SharedGL_glVertexAttribI1uiv
#define glVertexAttribI2uiv			SharedGL_glVertexAttribI2uiv
#define glVertexAttribI3uiv			SharedGL_glVertexAttribI3uiv
#define glVertexAttribI4uiv			SharedGL_glVertexAttribI4uiv
#define glVertexAttribI4bv			SharedGL_glVertexAttribI4bv
#define glVertexAttribI4sv			SharedGL_glVertexAttribI4sv
#define glVertexAttribI4ubv			SharedGL_glVertexAttribI4ubv
#define glVertexAttribI4usv			SharedGL_glVertexAttribI4usv
#define glGetUniformuiv				SharedGL_glGetUniformuiv
#define glBindFragDataLocation			SharedGL_glBindFragDataLocation
#define glGetFragDataLocation			SharedGL_glGetFragDataLocation
#define glUniform1ui				SharedGL_glUniform1ui
#define glUniform2ui				SharedGL_glUniform2ui
#define glUniform3ui				SharedGL_glUniform3ui
#define glUniform4ui				SharedGL_glUniform4ui
#define glUniform1uiv				SharedGL_glUniform1uiv
#define glUniform2uiv				SharedGL_glUniform2uiv
#define glUniform3uiv				SharedGL_glUniform3uiv
#define glUniform4uiv				SharedGL_glUniform4uiv
#define glTexParameterIiv			SharedGL_glTexParameterIiv
#define glTexParameterIuiv			SharedGL_glTexParameterIuiv
#define glGetTexParameterIiv			SharedGL_glGetTexParameterIiv
#define glGetTexParameterIuiv			SharedGL_glGetTexParameterIuiv
#define glClearBufferiv				SharedGL_glClearBufferiv
#define glClearBufferuiv			SharedGL_glClearBufferuiv
#define glClearBufferfv				SharedGL_glClearBufferfv
#define glClearBufferfi				SharedGL_glClearBufferfi
#define glGetStringi				SharedGL_glGetStringi
#define glIsRenderbuffer			SharedGL_glIsRenderbuffer
#define glBindRenderbuffer			SharedGL_glBindRenderbuffer
#define glDeleteRenderbuffers			SharedGL_glDeleteRenderbuffers
#define glGenRenderbuffers			SharedGL_glGenRenderbuffers
#define glRenderbufferStorage			SharedGL_glRenderbufferStorage
#define glGetRenderbufferParameteriv		SharedGL_glGetRenderbufferParameteriv
#define glIsFramebuffer				SharedGL_glIsFramebuffer
#define glBindFramebuffer			SharedGL_glBindFramebuffer
#define glDeleteFramebuffers			SharedGL_glDeleteFramebuffers
#define glGenFramebuffers			SharedGL_glGenFramebuffers
#define glCheckFramebufferStatus		SharedGL_glCheckFramebufferStatus
#define glFramebufferTexture1D			SharedGL_glFramebufferTexture1D
#define glFramebufferTexture2D			SharedGL_glFramebufferTexture2D
#define glFramebufferTexture3D			SharedGL_glFramebufferTexture3D
#define glFramebufferRenderbuffer		SharedGL_glFramebufferRenderbuffer
#define glGetFramebufferAttachmentParameteriv	SharedGL_glGetFramebufferAttachmentParameteriv
#define glGenerateMipmap			SharedGL_glGenerateMipmap
#define glBlitFramebuffer			SharedGL_glBlitFramebuffer
#define glRenderbufferStorageMultisample	SharedGL_glRenderbufferStorageMultisample
#define glFramebufferTextureLayer		SharedGL_glFramebufferTextureLayer
#define glMapBufferRange			SharedGL_glMapBufferRange
#define glFlushMappedBufferRange		SharedGL_glFlushMappedBufferRange
#define glBindVertexArray			SharedGL_glBindVertexArray
#define glDeleteVertexArrays			SharedGL_glDeleteVertexArrays
#define glGenVertexArrays			SharedGL_glGenVertexArrays
#define glIsVertexArray				SharedGL_glIsVertexArray

typedef void            (__stdcall *PFNGLCOLORMASKIPROC)			   (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void            (__stdcall *PFNGLGETBOOLEANI_VPROC)			   (GLenum target, GLuint index, GLboolean *data);
typedef void            (__stdcall *PFNGLGETINTEGERI_VPROC)			   (GLenum target, GLuint index, GLint *data);
typedef void            (__stdcall *PFNGLENABLEIPROC)				   (GLenum target, GLuint index);
typedef void            (__stdcall *PFNGLDISABLEIPROC)				   (GLenum target, GLuint index);
typedef GLboolean       (__stdcall *PFNGLISENABLEDIPROC)			   (GLenum target, GLuint index);
typedef void            (__stdcall *PFNGLBEGINTRANSFORMFEEDBACKPROC)		   (GLenum primitiveMode);
typedef void            (__stdcall *PFNGLENDTRANSFORMFEEDBACKPROC)		   (void);
typedef void            (__stdcall *PFNGLBINDBUFFERRANGEPROC)			   (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void            (__stdcall *PFNGLBINDBUFFERBASEPROC)			   (GLenum target, GLuint index, GLuint buffer);
typedef void            (__stdcall *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)	           (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
typedef void            (__stdcall *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)	   (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
typedef void            (__stdcall *PFNGLCLASharedGLCOLORPROC)			   (GLenum target, GLenum clamp);
typedef void            (__stdcall *PFNGLBEGINCONDITIONALRENDERPROC)		   (GLuint id, GLenum mode);
typedef void            (__stdcall *PFNGLENDCONDITIONALRENDERPROC)		   (void);
typedef void            (__stdcall *PFNGLVERTEXATTRIBIPOINTERPROC)		   (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void            (__stdcall *PFNGLGETVERTEXATTRIBIIVPROC)		   (GLuint index, GLenum pname, GLint *params);
typedef void            (__stdcall *PFNGLGETVERTEXATTRIBIUIVPROC)		   (GLuint index, GLenum pname, GLuint *params);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI1IPROC)			   (GLuint index, GLint x);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI2IPROC)			   (GLuint index, GLint x, GLint y);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI3IPROC)			   (GLuint index, GLint x, GLint y, GLint z);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4IPROC)			   (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI1UIPROC)			   (GLuint index, GLuint x);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI2UIPROC)			   (GLuint index, GLuint x, GLuint y);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI3UIPROC)			   (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4UIPROC)			   (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI1IVPROC)			   (GLuint index, const GLint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI2IVPROC)			   (GLuint index, const GLint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI3IVPROC)			   (GLuint index, const GLint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4IVPROC)			   (GLuint index, const GLint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI1UIVPROC)		           (GLuint index, const GLuint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI2UIVPROC)		           (GLuint index, const GLuint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI3UIVPROC)		           (GLuint index, const GLuint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4UIVPROC)		           (GLuint index, const GLuint *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4BVPROC)			   (GLuint index, const GLbyte *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4SVPROC)			   (GLuint index, const GLshort *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4UBVPROC)		           (GLuint index, const GLubyte *v);
typedef void            (__stdcall *PFNGLVERTEXATTRIBI4USVPROC)		           (GLuint index, const GLushort *v);
typedef void            (__stdcall *PFNGLGETUNIFORMUIVPROC)			   (GLuint program, GLint location, GLuint *params);
typedef void            (__stdcall *PFNGLBINDFRAGDATALOCATIONPROC)		   (GLuint program, GLuint color, const GLchar *name);
typedef GLint           (__stdcall *PFNGLGETFRAGDATALOCATIONPROC)		   (GLuint program, const GLchar *name);
typedef void            (__stdcall *PFNGLUNIFORM1UIPROC)			   (GLint location, GLuint v0);
typedef void            (__stdcall *PFNGLUNIFORM2UIPROC)			   (GLint location, GLuint v0, GLuint v1);
typedef void            (__stdcall *PFNGLUNIFORM3UIPROC)			   (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void            (__stdcall *PFNGLUNIFORM4UIPROC)			   (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void            (__stdcall *PFNGLUNIFORM1UIVPROC)			   (GLint location, GLsizei count, const GLuint *value);
typedef void            (__stdcall *PFNGLUNIFORM2UIVPROC)			   (GLint location, GLsizei count, const GLuint *value);
typedef void            (__stdcall *PFNGLUNIFORM3UIVPROC)			   (GLint location, GLsizei count, const GLuint *value);
typedef void            (__stdcall *PFNGLUNIFORM4UIVPROC)			   (GLint location, GLsizei count, const GLuint *value);
typedef void            (__stdcall *PFNGLTEXPARAMETERIIVPROC)			   (GLenum target, GLenum pname, const GLint *params);
typedef void            (__stdcall *PFNGLTEXPARAMETERIUIVPROC)			   (GLenum target, GLenum pname, const GLuint *params);
typedef void            (__stdcall *PFNGLGETTEXPARAMETERIIVPROC)		   (GLenum target, GLenum pname, GLint *params);
typedef void            (__stdcall *PFNGLGETTEXPARAMETERIUIVPROC)		   (GLenum target, GLenum pname, GLuint *params);
typedef void            (__stdcall *PFNGLCLEARBUFFERIVPROC)			   (GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void            (__stdcall *PFNGLCLEARBUFFERUIVPROC)			   (GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void            (__stdcall *PFNGLCLEARBUFFERFVPROC)			   (GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void            (__stdcall *PFNGLCLEARBUFFERFIPROC)			   (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte*  (__stdcall *PFNGLGETSTRINGIPROC)			   (GLenum name, GLuint index);
typedef GLboolean       (__stdcall *PFNGLISRENDERBUFFERPROC)			   (GLuint renderbuffer);
typedef void            (__stdcall *PFNGLBINDRENDERBUFFERPROC)			   (GLenum target, GLuint renderbuffer);
typedef void            (__stdcall *PFNGLDELETERENDERBUFFERSPROC)		   (GLsizei n, const GLuint *renderbuffers);
typedef void            (__stdcall *PFNGLGENRENDERBUFFERSPROC)			   (GLsizei n, GLuint *renderbuffers);
typedef void            (__stdcall *PFNGLRENDERBUFFERSTORAGEPROC)		   (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void            (__stdcall *PFNGLGETRENDERBUFFERPARAMETERIVPROC)	   (GLenum target, GLenum pname, GLint *params);
typedef GLboolean       (__stdcall *PFNGLISFRAMEBUFFERPROC)			   (GLuint framebuffer);
typedef void            (__stdcall *PFNGLBINDFRAMEBUFFERPROC)			   (GLenum target, GLuint framebuffer);
typedef void            (__stdcall *PFNGLDELETEFRAMEBUFFERSPROC)		   (GLsizei n, const GLuint *framebuffers);
typedef void            (__stdcall *PFNGLGENFRAMEBUFFERSPROC)			   (GLsizei n, GLuint *framebuffers);
typedef GLenum          (__stdcall *PFNGLCHECKFRAMEBUFFERSTATUSPROC)		   (GLenum target);
typedef void            (__stdcall *PFNGLFRAMEBUFFERTEXTURE1DPROC)		   (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void            (__stdcall *PFNGLFRAMEBUFFERTEXTURE2DPROC)		   (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void            (__stdcall *PFNGLFRAMEBUFFERTEXTURE3DPROC)		   (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void            (__stdcall *PFNGLFRAMEBUFFERRENDERBUFFERPROC)		   (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void            (__stdcall *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)  (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void            (__stdcall *PFNGLGENERATEMIPMAPPROC)			   (GLenum target);
typedef void            (__stdcall *PFNGLBLITFRAMEBUFFERPROC)			   (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void            (__stdcall *PFNGLRENDERBUFFERSTORAGEMULTISASharedGLLEPROC)	   (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void            (__stdcall *PFNGLFRAMEBUFFERTEXTURELAYERPROC)              (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void*           (__stdcall *PFNGLMAPBUFFERRANGEPROC)			   (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void            (__stdcall *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)		   (GLenum target, GLintptr offset, GLsizeiptr length);
typedef void            (__stdcall *PFNGLBINDVERTEXARRAYPROC)                      (GLuint array);
typedef void            (__stdcall *PFNGLDELETEVERTEXARRAYSPROC)                   (GLsizei n, const GLuint *arrays);
typedef void            (__stdcall *PFNGLGENVERTEXARRAYSPROC)                      (GLsizei n, GLuint *arrays);
typedef GLboolean       (__stdcall *PFNGLISVERTEXARRAYPROC)                        (GLuint array);

PFNGLCOLORMASKIPROC				SharedGL_glColorMaski			  = 0;
PFNGLGETBOOLEANI_VPROC				SharedGL_glGetBooleani_v			  = 0;
PFNGLGETINTEGERI_VPROC				SharedGL_glGetIntegeri_v			  = 0;
PFNGLENABLEIPROC				SharedGL_glEnablei				  = 0;
PFNGLDISABLEIPROC				SharedGL_glDisablei				  = 0;
PFNGLISENABLEDIPROC				SharedGL_glIsEnabledi			  = 0;
PFNGLBEGINTRANSFORMFEEDBACKPROC			SharedGL_glBeginTransformFeedback		  = 0;
PFNGLENDTRANSFORMFEEDBACKPROC			SharedGL_glEndTransformFeedback		  = 0;
PFNGLBINDBUFFERRANGEPROC			SharedGL_glBindBufferRange			  = 0;
PFNGLBINDBUFFERBASEPROC				SharedGL_glBindBufferBase			  = 0;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC		SharedGL_glTransformFeedbackVaryings		  = 0;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC		SharedGL_glGetTransformFeedbackVarying	  = 0;
PFNGLCLASharedGLCOLORPROC				SharedGL_glClampColor			  = 0;
PFNGLBEGINCONDITIONALRENDERPROC			SharedGL_glBeginConditionalRender		  = 0;
PFNGLENDCONDITIONALRENDERPROC			SharedGL_glEndConditionalRender		  = 0;
PFNGLVERTEXATTRIBIPOINTERPROC			SharedGL_glVertexAttribIPointer		  = 0;
PFNGLGETVERTEXATTRIBIIVPROC			SharedGL_glGetVertexAttribIiv		  = 0;
PFNGLGETVERTEXATTRIBIUIVPROC			SharedGL_glGetVertexAttribIuiv		  = 0;
PFNGLVERTEXATTRIBI1IPROC			SharedGL_glVertexAttribI1i			  = 0;
PFNGLVERTEXATTRIBI2IPROC			SharedGL_glVertexAttribI2i			  = 0;
PFNGLVERTEXATTRIBI3IPROC			SharedGL_glVertexAttribI3i			  = 0;
PFNGLVERTEXATTRIBI4IPROC			SharedGL_glVertexAttribI4i			  = 0;
PFNGLVERTEXATTRIBI1UIPROC			SharedGL_glVertexAttribI1ui			  = 0;
PFNGLVERTEXATTRIBI2UIPROC			SharedGL_glVertexAttribI2ui			  = 0;
PFNGLVERTEXATTRIBI3UIPROC			SharedGL_glVertexAttribI3ui			  = 0;
PFNGLVERTEXATTRIBI4UIPROC			SharedGL_glVertexAttribI4ui			  = 0;
PFNGLVERTEXATTRIBI1IVPROC			SharedGL_glVertexAttribI1iv			  = 0;
PFNGLVERTEXATTRIBI2IVPROC			SharedGL_glVertexAttribI2iv			  = 0;
PFNGLVERTEXATTRIBI3IVPROC			SharedGL_glVertexAttribI3iv			  = 0;
PFNGLVERTEXATTRIBI4IVPROC			SharedGL_glVertexAttribI4iv			  = 0;
PFNGLVERTEXATTRIBI1UIVPROC			SharedGL_glVertexAttribI1uiv			  = 0;
PFNGLVERTEXATTRIBI2UIVPROC			SharedGL_glVertexAttribI2uiv			  = 0;
PFNGLVERTEXATTRIBI3UIVPROC			SharedGL_glVertexAttribI3uiv			  = 0;
PFNGLVERTEXATTRIBI4UIVPROC			SharedGL_glVertexAttribI4uiv			  = 0;
PFNGLVERTEXATTRIBI4BVPROC			SharedGL_glVertexAttribI4bv			  = 0;
PFNGLVERTEXATTRIBI4SVPROC			SharedGL_glVertexAttribI4sv			  = 0;
PFNGLVERTEXATTRIBI4UBVPROC			SharedGL_glVertexAttribI4ubv			  = 0;
PFNGLVERTEXATTRIBI4USVPROC			SharedGL_glVertexAttribI4usv			  = 0;
PFNGLGETUNIFORMUIVPROC				SharedGL_glGetUniformuiv			  = 0;
PFNGLBINDFRAGDATALOCATIONPROC			SharedGL_glBindFragDataLocation		  = 0;
PFNGLGETFRAGDATALOCATIONPROC			SharedGL_glGetFragDataLocation		  = 0;
PFNGLUNIFORM1UIPROC				SharedGL_glUniform1ui			  = 0;
PFNGLUNIFORM2UIPROC				SharedGL_glUniform2ui			  = 0;
PFNGLUNIFORM3UIPROC				SharedGL_glUniform3ui			  = 0;
PFNGLUNIFORM4UIPROC				SharedGL_glUniform4ui			  = 0;
PFNGLUNIFORM1UIVPROC				SharedGL_glUniform1uiv			  = 0;
PFNGLUNIFORM2UIVPROC				SharedGL_glUniform2uiv			  = 0;
PFNGLUNIFORM3UIVPROC				SharedGL_glUniform3uiv			  = 0;
PFNGLUNIFORM4UIVPROC				SharedGL_glUniform4uiv			  = 0;
PFNGLTEXPARAMETERIIVPROC			SharedGL_glTexParameterIiv			  = 0;
PFNGLTEXPARAMETERIUIVPROC			SharedGL_glTexParameterIuiv			  = 0;
PFNGLGETTEXPARAMETERIIVPROC			SharedGL_glGetTexParameterIiv		  = 0;
PFNGLGETTEXPARAMETERIUIVPROC			SharedGL_glGetTexParameterIuiv		  = 0;
PFNGLCLEARBUFFERIVPROC				SharedGL_glClearBufferiv			  = 0;
PFNGLCLEARBUFFERUIVPROC				SharedGL_glClearBufferuiv			  = 0;
PFNGLCLEARBUFFERFVPROC				SharedGL_glClearBufferfv			  = 0;
PFNGLCLEARBUFFERFIPROC				SharedGL_glClearBufferfi			  = 0;
PFNGLGETSTRINGIPROC				SharedGL_glGetStringi			  = 0;
PFNGLISRENDERBUFFERPROC				SharedGL_glIsRenderbuffer			  = 0;
PFNGLBINDRENDERBUFFERPROC			SharedGL_glBindRenderbuffer			  = 0;
PFNGLDELETERENDERBUFFERSPROC			SharedGL_glDeleteRenderbuffers		  = 0;
PFNGLGENRENDERBUFFERSPROC			SharedGL_glGenRenderbuffers			  = 0;
PFNGLRENDERBUFFERSTORAGEPROC			SharedGL_glRenderbufferStorage		  = 0;
PFNGLGETRENDERBUFFERPARAMETERIVPROC		SharedGL_glGetRenderbufferParameteriv	  = 0;
PFNGLISFRAMEBUFFERPROC				SharedGL_glIsFramebuffer			  = 0;
PFNGLBINDFRAMEBUFFERPROC			SharedGL_glBindFramebuffer			  = 0;
PFNGLDELETEFRAMEBUFFERSPROC			SharedGL_glDeleteFramebuffers		  = 0;
PFNGLGENFRAMEBUFFERSPROC			SharedGL_glGenFramebuffers			  = 0;
PFNGLCHECKFRAMEBUFFERSTATUSPROC			SharedGL_glCheckFramebufferStatus		  = 0;
PFNGLFRAMEBUFFERTEXTURE1DPROC			SharedGL_glFramebufferTexture1D		  = 0;
PFNGLFRAMEBUFFERTEXTURE2DPROC			SharedGL_glFramebufferTexture2D		  = 0;
PFNGLFRAMEBUFFERTEXTURE3DPROC			SharedGL_glFramebufferTexture3D		  = 0;
PFNGLFRAMEBUFFERRENDERBUFFERPROC		SharedGL_glFramebufferRenderbuffer		  = 0;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	SharedGL_glGetFramebufferAttachmentParameteriv = 0;
PFNGLGENERATEMIPMAPPROC				SharedGL_glGenerateMipmap			  = 0;
PFNGLBLITFRAMEBUFFERPROC			SharedGL_glBlitFramebuffer			  = 0;
PFNGLRENDERBUFFERSTORAGEMULTISASharedGLLEPROC		SharedGL_glRenderbufferStorageMultisample	  = 0;
PFNGLFRAMEBUFFERTEXTURELAYERPROC		SharedGL_glFramebufferTextureLayer		  = 0;
PFNGLMAPBUFFERRANGEPROC				SharedGL_glMapBufferRange			  = 0;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC			SharedGL_glFlushMappedBufferRange		  = 0;
PFNGLBINDVERTEXARRAYPROC			SharedGL_glBindVertexArray			  = 0;
PFNGLDELETEVERTEXARRAYSPROC			SharedGL_glDeleteVertexArrays		  = 0;
PFNGLGENVERTEXARRAYSPROC			SharedGL_glGenVertexArrays			  = 0;
PFNGLISVERTEXARRAYPROC				SharedGL_glIsVertexArray			  = 0;

// 3.1
#define glDrawArraysInstanced		SharedGL_glDrawArraysInstanced
#define glDrawElementsInstanced		SharedGL_glDrawElementsInstanced
#define glTexBuffer			SharedGL_glTexBuffer
#define glPrimitiveRestartIndex		SharedGL_glPrimitiveRestartIndex
#define glCopyBufferSubData		SharedGL_glCopyBufferSubData
#define glGetUniformIndices		SharedGL_glGetUniformIndices
#define glGetActiveUniformsiv		SharedGL_glGetActiveUniformsiv
#define glGetActiveUniformName		SharedGL_glGetActiveUniformName
#define glGetUniformBlockIndex		SharedGL_glGetUniformBlockIndex
#define glGetActiveUniformBlockiv	SharedGL_glGetActiveUniformBlockiv
#define glGetActiveUniformBlockName	SharedGL_glGetActiveUniformBlockName
#define glUniformBlockBinding		SharedGL_glUniformBlockBinding

typedef void   (__stdcall *PFNGLDRAWARRAYSINSTANCEDPROC)    	(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void   (__stdcall *PFNGLDRAWELEMENTSINSTANCEDPROC)  	(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
typedef void   (__stdcall *PFNGLTEXBUFFERPROC)			(GLenum target, GLenum internalformat, GLuint buffer);
typedef void   (__stdcall *PFNGLPRIMITIVERESTARTINDEXPROC)	(GLuint index);
typedef void   (__stdcall *PFNGLCOPYBUFFERSUBDATAPROC)		(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void   (__stdcall *PFNGLGETUNIFORMINDICESPROC)		(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
typedef void   (__stdcall *PFNGLGETACTIVEUNIFORMSIVPROC)	(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
typedef void   (__stdcall *PFNGLGETACTIVEUNIFORMNAMEPROC)	(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
typedef GLuint (__stdcall *PFNGLGETUNIFORMBLOCKINDEXPROC)	(GLuint program, const GLchar* uniformBlockName);
typedef void   (__stdcall *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)	(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
typedef void   (__stdcall *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)	(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
typedef void   (__stdcall *PFNGLUNIFORMBLOCKBINDINGPROC)	(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

PFNGLDRAWARRAYSINSTANCEDPROC		SharedGL_glDrawArraysInstanced	= 0;
PFNGLDRAWELEMENTSINSTANCEDPROC		SharedGL_glDrawElementsInstanced	= 0;
PFNGLTEXBUFFERPROC			SharedGL_glTexBuffer			= 0;
PFNGLPRIMITIVERESTARTINDEXPROC		SharedGL_glPrimitiveRestartIndex	= 0;
PFNGLCOPYBUFFERSUBDATAPROC		SharedGL_glCopyBufferSubData		= 0;
PFNGLGETUNIFORMINDICESPROC		SharedGL_glGetUniformIndices		= 0;
PFNGLGETACTIVEUNIFORMSIVPROC		SharedGL_glGetActiveUniformsiv	= 0;
PFNGLGETACTIVEUNIFORMNAMEPROC		SharedGL_glGetActiveUniformName	= 0;
PFNGLGETUNIFORMBLOCKINDEXPROC		SharedGL_glGetUniformBlockIndex	= 0;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	SharedGL_glGetActiveUniformBlockiv	= 0;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	SharedGL_glGetActiveUniformBlockName = 0;
PFNGLUNIFORMBLOCKBINDINGPROC		SharedGL_glUniformBlockBinding	= 0;

// 3.2
#define glDrawElementsBaseVertex		SharedGL_glDrawElementsBaseVertex
#define glDrawRangeElementsBaseVertex		SharedGL_glDrawRangeElementsBaseVertex
#define glDrawElementsInstancedBaseVertex	SharedGL_glDrawElementsInstancedBaseVertex
#define glMultiDrawElementsBaseVertex		SharedGL_glMultiDrawElementsBaseVertex
#define glProvokingVertex			SharedGL_glProvokingVertex
#define glFenceSync				SharedGL_glFenceSync
#define glIsSync				SharedGL_glIsSync
#define glDeleteSync				SharedGL_glDeleteSync
#define glClientWaitSync			SharedGL_glClientWaitSync
#define glWaitSync				SharedGL_glWaitSync
#define glGetInteger64v				SharedGL_glGetInteger64v
#define glGetSynciv				SharedGL_glGetSynciv
#define glGetInteger64i_v			SharedGL_glGetInteger64i_v
#define glGetBufferParameteri64v		SharedGL_glGetBufferParameteri64v
#define glFramebufferTexture			SharedGL_glFramebufferTexture
#define glTexImage2DMultisample			SharedGL_glTexImage2DMultisample
#define glTexImage3DMultisample			SharedGL_glTexImage3DMultisample
#define glGetMultisamplefv			SharedGL_glGetMultisamplefv
#define glSampleMaski				SharedGL_glSampleMaski

typedef void      (__stdcall*PFNGLDRAWELEMENTSBASEVERTEXPROC)		(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void      (__stdcall*PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)	(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
typedef void      (__stdcall*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)	(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
typedef void      (__stdcall*PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)	(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
typedef void      (__stdcall*PFNGLPROVOKINGVERTEXPROC)			(GLenum mode);
typedef GLsync    (__stdcall*PFNGLFENCESYNCPROC)			(GLenum condition, GLbitfield flags);
typedef GLboolean (__stdcall*PFNGLISSYNCPROC)				(GLsync sync);
typedef void      (__stdcall*PFNGLDELETESYNCPROC)			(GLsync sync);
typedef GLenum    (__stdcall*PFNGLCLIENTWAITSYNCPROC)			(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void      (__stdcall*PFNGLWAITSYNCPROC)			(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void      (__stdcall*PFNGLGETINTEGER64VPROC)			(GLenum pname, GLint64 *data);
typedef void      (__stdcall*PFNGLGETSYNCIVPROC)			(GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
typedef void      (__stdcall*PFNGLGETINTEGER64I_VPROC)			(GLenum target, GLuint index, GLint64 *data);
typedef void      (__stdcall*PFNGLGETBUFFERPARAMETERI64VPROC)		(GLenum target, GLenum pname, GLint64 *params);
typedef void      (__stdcall*PFNGLFRAMEBUFFERTEXTUREPROC)		(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void      (__stdcall*PFNGLTEXIMAGE2DMULTISASharedGLLEPROC)		(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void      (__stdcall*PFNGLTEXIMAGE3DMULTISASharedGLLEPROC)		(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void      (__stdcall*PFNGLGETMULTISASharedGLLEFVPROC)		(GLenum pname, GLuint index, GLfloat *val);
typedef void      (__stdcall*PFNGLSASharedGLLEMASKIPROC)			(GLuint maskNumber, GLbitfield mask);

PFNGLDRAWELEMENTSBASEVERTEXPROC			SharedGL_glDrawElementsBaseVertex	      = 0;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC		SharedGL_glDrawRangeElementsBaseVertex     = 0;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	SharedGL_glDrawElementsInstancedBaseVertex = 0;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC		SharedGL_glMultiDrawElementsBaseVertex     = 0;
PFNGLPROVOKINGVERTEXPROC			SharedGL_glProvokingVertex		      = 0;
PFNGLFENCESYNCPROC				SharedGL_glFenceSync			      = 0;
PFNGLISSYNCPROC					SharedGL_glIsSync			      = 0;
PFNGLDELETESYNCPROC				SharedGL_glDeleteSync		      = 0;
PFNGLCLIENTWAITSYNCPROC				SharedGL_glClientWaitSync		      = 0;
PFNGLWAITSYNCPROC				SharedGL_glWaitSync			      = 0;
PFNGLGETINTEGER64VPROC				SharedGL_glGetInteger64v		      = 0;
PFNGLGETSYNCIVPROC				SharedGL_glGetSynciv			      = 0;
PFNGLGETINTEGER64I_VPROC			SharedGL_glGetInteger64i_v		      = 0;
PFNGLGETBUFFERPARAMETERI64VPROC			SharedGL_glGetBufferParameteri64v	      = 0;
PFNGLFRAMEBUFFERTEXTUREPROC			SharedGL_glFramebufferTexture	      = 0;
PFNGLTEXIMAGE2DMULTISASharedGLLEPROC			SharedGL_glTexImage2DMultisample	      = 0;
PFNGLTEXIMAGE3DMULTISASharedGLLEPROC			SharedGL_glTexImage3DMultisample	      = 0;
PFNGLGETMULTISASharedGLLEFVPROC			SharedGL_glGetMultisamplefv		      = 0;
PFNGLSASharedGLLEMASKIPROC				SharedGL_glSampleMaski		      = 0;

// 3.3
#define glBindFragDataLocationIndexed	SharedGL_glBindFragDataLocationIndexed
#define glGetFragDataIndex		SharedGL_glGetFragDataIndex
#define glGenSamplers			SharedGL_glGenSamplers
#define glDeleteSamplers		SharedGL_glDeleteSamplers
#define glIsSampler			SharedGL_glIsSampler
#define glBindSampler			SharedGL_glBindSampler
#define glSamplerParameteri		SharedGL_glSamplerParameteri
#define glSamplerParameteriv		SharedGL_glSamplerParameteriv
#define glSamplerParameterf		SharedGL_glSamplerParameterf
#define glSamplerParameterfv		SharedGL_glSamplerParameterfv
#define glSamplerParameterIiv		SharedGL_glSamplerParameterIiv
#define glSamplerParameterIuiv		SharedGL_glSamplerParameterIuiv
#define glGetSamplerParameteriv		SharedGL_glGetSamplerParameteriv
#define glGetSamplerParameterIiv	SharedGL_glGetSamplerParameterIiv
#define glGetSamplerParameterfv		SharedGL_glGetSamplerParameterfv
#define glGetSamplerParameterIuiv	SharedGL_glGetSamplerParameterIuiv
#define glQueryCounter			SharedGL_glQueryCounter
#define glGetQueryObjecti64v		SharedGL_glGetQueryObjecti64v
#define glGetQueryObjectui64v		SharedGL_glGetQueryObjectui64v
#define glVertexAttribDivisor		SharedGL_glVertexAttribDivisor
#define glVertexAttribP1ui		SharedGL_glVertexAttribP1ui
#define glVertexAttribP1uiv		SharedGL_glVertexAttribP1uiv
#define glVertexAttribP2ui		SharedGL_glVertexAttribP2ui
#define glVertexAttribP2uiv		SharedGL_glVertexAttribP2uiv
#define glVertexAttribP3ui		SharedGL_glVertexAttribP3ui
#define glVertexAttribP3uiv		SharedGL_glVertexAttribP3uiv
#define glVertexAttribP4ui		SharedGL_glVertexAttribP4ui
#define glVertexAttribP4uiv		SharedGL_glVertexAttribP4uiv
#define glVertexP2ui			SharedGL_glVertexP2ui
#define glVertexP2uiv			SharedGL_glVertexP2uiv
#define glVertexP3ui			SharedGL_glVertexP3ui
#define glVertexP3uiv			SharedGL_glVertexP3uiv
#define glVertexP4ui			SharedGL_glVertexP4ui
#define glVertexP4uiv			SharedGL_glVertexP4uiv
#define glTexCoordP1ui			SharedGL_glTexCoordP1ui
#define glTexCoordP1uiv			SharedGL_glTexCoordP1uiv
#define glTexCoordP2ui			SharedGL_glTexCoordP2ui
#define glTexCoordP2uiv			SharedGL_glTexCoordP2uiv
#define glTexCoordP3ui			SharedGL_glTexCoordP3ui
#define glTexCoordP3uiv			SharedGL_glTexCoordP3uiv
#define glTexCoordP4ui			SharedGL_glTexCoordP4ui
#define glTexCoordP4uiv			SharedGL_glTexCoordP4uiv
#define glMultiTexCoordP1ui		SharedGL_glMultiTexCoordP1ui
#define glMultiTexCoordP1uiv		SharedGL_glMultiTexCoordP1uiv
#define glMultiTexCoordP2ui		SharedGL_glMultiTexCoordP2ui
#define glMultiTexCoordP2uiv		SharedGL_glMultiTexCoordP2uiv
#define glMultiTexCoordP3ui		SharedGL_glMultiTexCoordP3ui
#define glMultiTexCoordP3uiv		SharedGL_glMultiTexCoordP3uiv
#define glMultiTexCoordP4ui		SharedGL_glMultiTexCoordP4ui
#define glMultiTexCoordP4uiv		SharedGL_glMultiTexCoordP4uiv
#define glNormalP3ui			SharedGL_glNormalP3ui
#define glNormalP3uiv			SharedGL_glNormalP3uiv
#define glColorP3ui			SharedGL_glColorP3ui
#define glColorP3uiv			SharedGL_glColorP3uiv
#define glColorP4ui			SharedGL_glColorP4ui
#define glColorP4uiv			SharedGL_glColorP4uiv
#define glSecondaryColorP3ui		SharedGL_glSecondaryColorP3ui
#define glSecondaryColorP3uiv		SharedGL_glSecondaryColorP3uiv

typedef void      (__stdcall *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)	(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
typedef GLint     (__stdcall *PFNGLGETFRAGDATAINDEXPROC)		(GLuint program, const GLchar *name);
typedef void      (__stdcall *PFNGLGENSASharedGLLERSPROC)			(GLsizei count, GLuint *samplers);
typedef void      (__stdcall *PFNGLDELETESASharedGLLERSPROC)			(GLsizei count, const GLuint *samplers);
typedef GLboolean (__stdcall *PFNGLISSASharedGLLERPROC)			(GLuint sampler);
typedef void      (__stdcall *PFNGLBINDSASharedGLLERPROC)			(GLuint unit, GLuint sampler);
typedef void      (__stdcall *PFNGLSASharedGLLERPARAMETERIPROC)		(GLuint sampler, GLenum pname, GLint param);
typedef void      (__stdcall *PFNGLSASharedGLLERPARAMETERIVPROC)		(GLuint sampler, GLenum pname, const GLint *param);
typedef void      (__stdcall *PFNGLSASharedGLLERPARAMETERFPROC)		(GLuint sampler, GLenum pname, GLfloat param);
typedef void      (__stdcall *PFNGLSASharedGLLERPARAMETERFVPROC)		(GLuint sampler, GLenum pname, const GLfloat *param);
typedef void      (__stdcall *PFNGLSASharedGLLERPARAMETERIIVPROC)		(GLuint sampler, GLenum pname, const GLint *param);
typedef void      (__stdcall *PFNGLSASharedGLLERPARAMETERIUIVPROC)		(GLuint sampler, GLenum pname, const GLuint *param);
typedef void      (__stdcall *PFNGLGETSASharedGLLERPARAMETERIVPROC)		(GLuint sampler, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETSASharedGLLERPARAMETERIIVPROC)		(GLuint sampler, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETSASharedGLLERPARAMETERFVPROC)		(GLuint sampler, GLenum pname, GLfloat *params);
typedef void      (__stdcall *PFNGLGETSASharedGLLERPARAMETERIUIVPROC)		(GLuint sampler, GLenum pname, GLuint *params);
typedef void      (__stdcall *PFNGLQUERYCOUNTERPROC)			(GLuint id, GLenum target);
typedef void      (__stdcall *PFNGLGETQUERYOBJECTI64VPROC)		(GLuint id, GLenum pname, GLint64 *params);
typedef void      (__stdcall *PFNGLGETQUERYOBJECTUI64VPROC)		(GLuint id, GLenum pname, GLuint64 *params);
typedef void      (__stdcall *PFNGLVERTEXATTRIBDIVISORPROC)		(GLuint index, GLuint divisor);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP1UIPROC)		(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP1UIVPROC)		(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP2UIPROC)		(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP2UIVPROC)		(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP3UIPROC)		(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP3UIVPROC)		(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP4UIPROC)		(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void      (__stdcall *PFNGLVERTEXATTRIBP4UIVPROC)		(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
typedef void      (__stdcall *PFNGLVERTEXP2UIPROC)			(GLenum type, GLuint value);
typedef void      (__stdcall *PFNGLVERTEXP2UIVPROC)			(GLenum type, const GLuint *value);
typedef void      (__stdcall *PFNGLVERTEXP3UIPROC)			(GLenum type, GLuint value);
typedef void      (__stdcall *PFNGLVERTEXP3UIVPROC)			(GLenum type, const GLuint *value);
typedef void      (__stdcall *PFNGLVERTEXP4UIPROC)			(GLenum type, GLuint value);
typedef void      (__stdcall *PFNGLVERTEXP4UIVPROC)			(GLenum type, const GLuint *value);
typedef void      (__stdcall *PFNGLTEXCOORDP1UIPROC)			(GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLTEXCOORDP1UIVPROC)			(GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLTEXCOORDP2UIPROC)			(GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLTEXCOORDP2UIVPROC)			(GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLTEXCOORDP3UIPROC)			(GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLTEXCOORDP3UIVPROC)			(GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLTEXCOORDP4UIPROC)			(GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLTEXCOORDP4UIVPROC)			(GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP1UIPROC)		(GLenum texture, GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP1UIVPROC)		(GLenum texture, GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP2UIPROC)		(GLenum texture, GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP2UIVPROC)		(GLenum texture, GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP3UIPROC)		(GLenum texture, GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP3UIVPROC)		(GLenum texture, GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP4UIPROC)		(GLenum texture, GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLMULTITEXCOORDP4UIVPROC)		(GLenum texture, GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLNORMALP3UIPROC)			(GLenum type, GLuint coords);
typedef void      (__stdcall *PFNGLNORMALP3UIVPROC)			(GLenum type, const GLuint *coords);
typedef void      (__stdcall *PFNGLCOLORP3UIPROC)			(GLenum type, GLuint color);
typedef void      (__stdcall *PFNGLCOLORP3UIVPROC)			(GLenum type, const GLuint *color);
typedef void      (__stdcall *PFNGLCOLORP4UIPROC)			(GLenum type, GLuint color);
typedef void      (__stdcall *PFNGLCOLORP4UIVPROC)			(GLenum type, const GLuint *color);
typedef void      (__stdcall *PFNGLSECONDARYCOLORP3UIPROC)		(GLenum type, GLuint color);
typedef void      (__stdcall *PFNGLSECONDARYCOLORP3UIVPROC)		(GLenum type, const GLuint *color);

PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	SharedGL_glBindFragDataLocationIndexed = 0;
PFNGLGETFRAGDATAINDEXPROC		SharedGL_glGetFragDataIndex		  = 0;
PFNGLGENSASharedGLLERSPROC			SharedGL_glGenSamplers		  = 0;
PFNGLDELETESASharedGLLERSPROC			SharedGL_glDeleteSamplers		  = 0;
PFNGLISSASharedGLLERPROC			SharedGL_glIsSampler			  = 0;
PFNGLBINDSASharedGLLERPROC			SharedGL_glBindSampler		  = 0;
PFNGLSASharedGLLERPARAMETERIPROC		SharedGL_glSamplerParameteri		  = 0;
PFNGLSASharedGLLERPARAMETERIVPROC		SharedGL_glSamplerParameteriv	  = 0;
PFNGLSASharedGLLERPARAMETERFPROC		SharedGL_glSamplerParameterf		  = 0;
PFNGLSASharedGLLERPARAMETERFVPROC		SharedGL_glSamplerParameterfv	  = 0;
PFNGLSASharedGLLERPARAMETERIIVPROC		SharedGL_glSamplerParameterIiv	  = 0;
PFNGLSASharedGLLERPARAMETERIUIVPROC		SharedGL_glSamplerParameterIuiv	  = 0;
PFNGLGETSASharedGLLERPARAMETERIVPROC		SharedGL_glGetSamplerParameteriv	  = 0;
PFNGLGETSASharedGLLERPARAMETERIIVPROC		SharedGL_glGetSamplerParameterIiv	  = 0;
PFNGLGETSASharedGLLERPARAMETERFVPROC		SharedGL_glGetSamplerParameterfv	  = 0;
PFNGLGETSASharedGLLERPARAMETERIUIVPROC	SharedGL_glGetSamplerParameterIuiv	  = 0;
PFNGLQUERYCOUNTERPROC			SharedGL_glQueryCounter		  = 0;
PFNGLGETQUERYOBJECTI64VPROC		SharedGL_glGetQueryObjecti64v	  = 0;
PFNGLGETQUERYOBJECTUI64VPROC		SharedGL_glGetQueryObjectui64v	  = 0;
PFNGLVERTEXATTRIBDIVISORPROC		SharedGL_glVertexAttribDivisor	  = 0;
PFNGLVERTEXATTRIBP1UIPROC		SharedGL_glVertexAttribP1ui		  = 0;
PFNGLVERTEXATTRIBP1UIVPROC		SharedGL_glVertexAttribP1uiv		  = 0;
PFNGLVERTEXATTRIBP2UIPROC		SharedGL_glVertexAttribP2ui		  = 0;
PFNGLVERTEXATTRIBP2UIVPROC		SharedGL_glVertexAttribP2uiv		  = 0;
PFNGLVERTEXATTRIBP3UIPROC		SharedGL_glVertexAttribP3ui		  = 0;
PFNGLVERTEXATTRIBP3UIVPROC		SharedGL_glVertexAttribP3uiv		  = 0;
PFNGLVERTEXATTRIBP4UIPROC		SharedGL_glVertexAttribP4ui		  = 0;
PFNGLVERTEXATTRIBP4UIVPROC		SharedGL_glVertexAttribP4uiv		  = 0;
PFNGLVERTEXP2UIPROC			SharedGL_glVertexP2ui		  = 0;
PFNGLVERTEXP2UIVPROC			SharedGL_glVertexP2uiv		  = 0;
PFNGLVERTEXP3UIPROC			SharedGL_glVertexP3ui		  = 0;
PFNGLVERTEXP3UIVPROC			SharedGL_glVertexP3uiv		  = 0;
PFNGLVERTEXP4UIPROC			SharedGL_glVertexP4ui		  = 0;
PFNGLVERTEXP4UIVPROC			SharedGL_glVertexP4uiv		  = 0;
PFNGLTEXCOORDP1UIPROC			SharedGL_glTexCoordP1ui		  = 0;
PFNGLTEXCOORDP1UIVPROC			SharedGL_glTexCoordP1uiv		  = 0;
PFNGLTEXCOORDP2UIPROC			SharedGL_glTexCoordP2ui		  = 0;
PFNGLTEXCOORDP2UIVPROC			SharedGL_glTexCoordP2uiv		  = 0;
PFNGLTEXCOORDP3UIPROC			SharedGL_glTexCoordP3ui		  = 0;
PFNGLTEXCOORDP3UIVPROC			SharedGL_glTexCoordP3uiv		  = 0;
PFNGLTEXCOORDP4UIPROC			SharedGL_glTexCoordP4ui		  = 0;
PFNGLTEXCOORDP4UIVPROC			SharedGL_glTexCoordP4uiv		  = 0;
PFNGLMULTITEXCOORDP1UIPROC		SharedGL_glMultiTexCoordP1ui		  = 0;
PFNGLMULTITEXCOORDP1UIVPROC		SharedGL_glMultiTexCoordP1uiv	  = 0;
PFNGLMULTITEXCOORDP2UIPROC		SharedGL_glMultiTexCoordP2ui		  = 0;
PFNGLMULTITEXCOORDP2UIVPROC		SharedGL_glMultiTexCoordP2uiv	  = 0;
PFNGLMULTITEXCOORDP3UIPROC		SharedGL_glMultiTexCoordP3ui		  = 0;
PFNGLMULTITEXCOORDP3UIVPROC		SharedGL_glMultiTexCoordP3uiv	  = 0;
PFNGLMULTITEXCOORDP4UIPROC		SharedGL_glMultiTexCoordP4ui		  = 0;
PFNGLMULTITEXCOORDP4UIVPROC		SharedGL_glMultiTexCoordP4uiv	  = 0;
PFNGLNORMALP3UIPROC			SharedGL_glNormalP3ui		  = 0;
PFNGLNORMALP3UIVPROC			SharedGL_glNormalP3uiv		  = 0;
PFNGLCOLORP3UIPROC			SharedGL_glColorP3ui			  = 0;
PFNGLCOLORP3UIVPROC			SharedGL_glColorP3uiv		  = 0;
PFNGLCOLORP4UIPROC			SharedGL_glColorP4ui			  = 0;
PFNGLCOLORP4UIVPROC			SharedGL_glColorP4uiv		  = 0;
PFNGLSECONDARYCOLORP3UIPROC		SharedGL_glSecondaryColorP3ui	  = 0;
PFNGLSECONDARYCOLORP3UIVPROC		SharedGL_glSecondaryColorP3uiv	  = 0;

// 4.0
#define glMinSampleShading			SharedGL_glMinSampleShading
#define glBlendEquationi			SharedGL_glBlendEquationi
#define glBlendEquationSeparatei		SharedGL_glBlendEquationSeparatei
#define glBlendFunci				SharedGL_glBlendFunci
#define glBlendFuncSeparatei			SharedGL_glBlendFuncSeparatei
#define glDrawArraysIndirect			SharedGL_glDrawArraysIndirect
#define glDrawElementsIndirect			SharedGL_glDrawElementsIndirect
#define glUniform1d				SharedGL_glUniform1d
#define glUniform2d				SharedGL_glUniform2d
#define glUniform3d				SharedGL_glUniform3d
#define glUniform4d				SharedGL_glUniform4d
#define glUniform1dv				SharedGL_glUniform1dv
#define glUniform2dv				SharedGL_glUniform2dv
#define glUniform3dv				SharedGL_glUniform3dv
#define glUniform4dv				SharedGL_glUniform4dv
#define glUniformMatrix2dv			SharedGL_glUniformMatrix2dv
#define glUniformMatrix3dv			SharedGL_glUniformMatrix3dv
#define glUniformMatrix4dv			SharedGL_glUniformMatrix4dv
#define glUniformMatrix2x3dv			SharedGL_glUniformMatrix2x3dv
#define glUniformMatrix2x4dv			SharedGL_glUniformMatrix2x4dv
#define glUniformMatrix3x2dv			SharedGL_glUniformMatrix3x2dv
#define glUniformMatrix3x4dv			SharedGL_glUniformMatrix3x4dv
#define glUniformMatrix4x2dv			SharedGL_glUniformMatrix4x2dv
#define glUniformMatrix4x3dv			SharedGL_glUniformMatrix4x3dv
#define glGetUniformdv				SharedGL_glGetUniformdv
#define glGetSubroutineUniformLocation		SharedGL_glGetSubroutineUniformLocation
#define glGetSubroutineIndex			SharedGL_glGetSubroutineIndex
#define glGetActiveSubroutineUniformiv		SharedGL_glGetActiveSubroutineUniformiv
#define glGetActiveSubroutineUniformName	SharedGL_glGetActiveSubroutineUniformName
#define glGetActiveSubroutineName		SharedGL_glGetActiveSubroutineName
#define glUniformSubroutinesuiv			SharedGL_glUniformSubroutinesuiv
#define glGetUniformSubroutineuiv		SharedGL_glGetUniformSubroutineuiv
#define glGetProgramStageiv			SharedGL_glGetProgramStageiv
#define glPatchParameteri			SharedGL_glPatchParameteri
#define glPatchParameterfv			SharedGL_glPatchParameterfv
#define glBindTransformFeedback			SharedGL_glBindTransformFeedback
#define glDeleteTransformFeedbacks		SharedGL_glDeleteTransformFeedbacks
#define glGenTransformFeedbacks			SharedGL_glGenTransformFeedbacks
#define glIsTransformFeedback			SharedGL_glIsTransformFeedback
#define glPauseTransformFeedback		SharedGL_glPauseTransformFeedback
#define glResumeTransformFeedback		SharedGL_glResumeTransformFeedback
#define glDrawTransformFeedback			SharedGL_glDrawTransformFeedback
#define glDrawTransformFeedbackStream		SharedGL_glDrawTransformFeedbackStream
#define glBeginQueryIndexed			SharedGL_glBeginQueryIndexed
#define glEndQueryIndexed			SharedGL_glEndQueryIndexed
#define glGetQueryIndexediv			SharedGL_glGetQueryIndexediv

typedef void      (__stdcall *PFNGLMINSASharedGLLESHADINGPROC)	        (GLfloat value);
typedef void      (__stdcall *PFNGLBLENDEQUATIONIPROC)		        (GLuint buf, GLenum mode);
typedef void      (__stdcall *PFNGLBLENDEQUATIONSEPARATEIPROC)	        (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void      (__stdcall *PFNGLBLENDFUNCIPROC)		        (GLuint buf, GLenum src, GLenum dst);
typedef void      (__stdcall *PFNGLBLENDFUNCSEPARATEIPROC)	        (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void      (__stdcall *PFNGLDRAWARRAYSINDIRECTPROC)	        (GLenum mode, const void *indirect);
typedef void      (__stdcall *PFNGLDRAWELEMENTSINDIRECTPROC)	        (GLenum mode, GLenum type, const void *indirect);
typedef void      (__stdcall *PFNGLUNIFORM1DPROC)		        (GLint location, GLdouble x);
typedef void      (__stdcall *PFNGLUNIFORM2DPROC)		        (GLint location, GLdouble x, GLdouble y);
typedef void      (__stdcall *PFNGLUNIFORM3DPROC)		        (GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void      (__stdcall *PFNGLUNIFORM4DPROC)		        (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void      (__stdcall *PFNGLUNIFORM1DVPROC)		        (GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORM2DVPROC)		        (GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORM3DVPROC)		        (GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORM4DVPROC)		        (GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX2DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX3DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX4DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX2X3DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX2X4DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX3X2DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX3X4DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX4X2DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLUNIFORMMATRIX4X3DVPROC)	        (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLGETUNIFORMDVPROC)		        (GLuint program, GLint location, GLdouble *params);
typedef GLint     (__stdcall *PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)	(GLuint program, GLenum shadertype, const GLchar *name);
typedef GLuint    (__stdcall *PFNGLGETSUBROUTINEINDEXPROC)		(GLuint program, GLenum shadertype, const GLchar *name);
typedef void      (__stdcall *PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)	(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
typedef void      (__stdcall *PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)	(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
typedef void      (__stdcall *PFNGLGETACTIVESUBROUTINENAMEPROC)		(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
typedef void      (__stdcall *PFNGLUNIFORMSUBROUTINESUIVPROC)		(GLenum shadertype, GLsizei count, const GLuint *indices);
typedef void      (__stdcall *PFNGLGETUNIFORMSUBROUTINEUIVPROC)		(GLenum shadertype, GLint location, GLuint *params);
typedef void      (__stdcall *PFNGLGETPROGRAMSTAGEIVPROC)		(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
typedef void      (__stdcall *PFNGLPATCHPARAMETERIPROC)			(GLenum pname, GLint value);
typedef void      (__stdcall *PFNGLPATCHPARAMETERFVPROC)		(GLenum pname, const GLfloat *values);
typedef void      (__stdcall *PFNGLBINDTRANSFORMFEEDBACKPROC)		(GLenum target, GLuint id);
typedef void      (__stdcall *PFNGLDELETETRANSFORMFEEDBACKSPROC)	(GLsizei n, const GLuint *ids);
typedef void      (__stdcall *PFNGLGENTRANSFORMFEEDBACKSPROC)		(GLsizei n, GLuint *ids);
typedef GLboolean (__stdcall *PFNGLISTRANSFORMFEEDBACKPROC)		(GLuint id);
typedef void      (__stdcall *PFNGLPAUSETRANSFORMFEEDBACKPROC)		(void);
typedef void      (__stdcall *PFNGLRESUMETRANSFORMFEEDBACKPROC)		(void);
typedef void      (__stdcall *PFNGLDRAWTRANSFORMFEEDBACKPROC)		(GLenum mode, GLuint id);
typedef void      (__stdcall *PFNGLDRAWTRANSFORMFEEDBACKSTREASharedGLROC)	(GLenum mode, GLuint id, GLuint stream);
typedef void      (__stdcall *PFNGLBEGINQUERYINDEXEDPROC)		(GLenum target, GLuint index, GLuint id);
typedef void      (__stdcall *PFNGLENDQUERYINDEXEDPROC)			(GLenum target, GLuint index);
typedef void      (__stdcall *PFNGLGETQUERYINDEXEDIVPROC)		(GLenum target, GLuint index, GLenum pname, GLint *params);

PFNGLMINSASharedGLLESHADINGPROC		SharedGL_glMinSampleShading		     = 0;
PFNGLBLENDEQUATIONIPROC			SharedGL_glBlendEquationi		     = 0;
PFNGLBLENDEQUATIONSEPARATEIPROC		SharedGL_glBlendEquationSeparatei	     = 0;
PFNGLBLENDFUNCIPROC			SharedGL_glBlendFunci		     = 0;
PFNGLBLENDFUNCSEPARATEIPROC		SharedGL_glBlendFuncSeparatei	     = 0;
PFNGLDRAWARRAYSINDIRECTPROC		SharedGL_glDrawArraysIndirect	     = 0;
PFNGLDRAWELEMENTSINDIRECTPROC		SharedGL_glDrawElementsIndirect	     = 0;
PFNGLUNIFORM1DPROC			SharedGL_glUniform1d			     = 0;
PFNGLUNIFORM2DPROC			SharedGL_glUniform2d			     = 0;
PFNGLUNIFORM3DPROC			SharedGL_glUniform3d			     = 0;
PFNGLUNIFORM4DPROC			SharedGL_glUniform4d			     = 0;
PFNGLUNIFORM1DVPROC			SharedGL_glUniform1dv		     = 0;
PFNGLUNIFORM2DVPROC			SharedGL_glUniform2dv		     = 0;
PFNGLUNIFORM3DVPROC			SharedGL_glUniform3dv		     = 0;
PFNGLUNIFORM4DVPROC			SharedGL_glUniform4dv		     = 0;
PFNGLUNIFORMMATRIX2DVPROC		SharedGL_glUniformMatrix2dv		     = 0;
PFNGLUNIFORMMATRIX3DVPROC		SharedGL_glUniformMatrix3dv		     = 0;
PFNGLUNIFORMMATRIX4DVPROC		SharedGL_glUniformMatrix4dv		     = 0;
PFNGLUNIFORMMATRIX2X3DVPROC		SharedGL_glUniformMatrix2x3dv	     = 0;
PFNGLUNIFORMMATRIX2X4DVPROC		SharedGL_glUniformMatrix2x4dv	     = 0;
PFNGLUNIFORMMATRIX3X2DVPROC		SharedGL_glUniformMatrix3x2dv	     = 0;
PFNGLUNIFORMMATRIX3X4DVPROC		SharedGL_glUniformMatrix3x4dv	     = 0;
PFNGLUNIFORMMATRIX4X2DVPROC		SharedGL_glUniformMatrix4x2dv	     = 0;
PFNGLUNIFORMMATRIX4X3DVPROC		SharedGL_glUniformMatrix4x3dv	     = 0;
PFNGLGETUNIFORMDVPROC			SharedGL_glGetUniformdv		     = 0;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	SharedGL_glGetSubroutineUniformLocation   = 0;
PFNGLGETSUBROUTINEINDEXPROC		SharedGL_glGetSubroutineIndex	     = 0;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	SharedGL_glGetActiveSubroutineUniformiv   = 0;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	SharedGL_glGetActiveSubroutineUniformName = 0;
PFNGLGETACTIVESUBROUTINENAMEPROC	SharedGL_glGetActiveSubroutineName	     = 0;
PFNGLUNIFORMSUBROUTINESUIVPROC		SharedGL_glUniformSubroutinesuiv	     = 0;
PFNGLGETUNIFORMSUBROUTINEUIVPROC	SharedGL_glGetUniformSubroutineuiv	     = 0;
PFNGLGETPROGRAMSTAGEIVPROC		SharedGL_glGetProgramStageiv		     = 0;
PFNGLPATCHPARAMETERIPROC		SharedGL_glPatchParameteri		     = 0;
PFNGLPATCHPARAMETERFVPROC		SharedGL_glPatchParameterfv		     = 0;
PFNGLBINDTRANSFORMFEEDBACKPROC		SharedGL_glBindTransformFeedback	     = 0;
PFNGLDELETETRANSFORMFEEDBACKSPROC	SharedGL_glDeleteTransformFeedbacks	     = 0;
PFNGLGENTRANSFORMFEEDBACKSPROC		SharedGL_glGenTransformFeedbacks	     = 0;
PFNGLISTRANSFORMFEEDBACKPROC		SharedGL_glIsTransformFeedback	     = 0;
PFNGLPAUSETRANSFORMFEEDBACKPROC		SharedGL_glPauseTransformFeedback	     = 0;
PFNGLRESUMETRANSFORMFEEDBACKPROC	SharedGL_glResumeTransformFeedback	     = 0;
PFNGLDRAWTRANSFORMFEEDBACKPROC		SharedGL_glDrawTransformFeedback	     = 0;
PFNGLDRAWTRANSFORMFEEDBACKSTREASharedGLROC	SharedGL_glDrawTransformFeedbackStream    = 0;
PFNGLBEGINQUERYINDEXEDPROC		SharedGL_glBeginQueryIndexed		     = 0;
PFNGLENDQUERYINDEXEDPROC		SharedGL_glEndQueryIndexed		     = 0;
PFNGLGETQUERYINDEXEDIVPROC		SharedGL_glGetQueryIndexediv		     = 0;

// 4.1
#define glReleaseShaderCompiler		SharedGL_glReleaseShaderCompiler
#define glShaderBinary			SharedGL_glShaderBinary
#define glGetShaderPrecisionFormat	SharedGL_glGetShaderPrecisionFormat
#define glDepthRangef			SharedGL_glDepthRangef
#define glClearDepthf			SharedGL_glClearDepthf
#define glGetProgramBinary		SharedGL_glGetProgramBinary
#define glProgramBinary			SharedGL_glProgramBinary
#define glProgramParameteri		SharedGL_glProgramParameteri
#define glUseProgramStages		SharedGL_glUseProgramStages
#define glActiveShaderProgram		SharedGL_glActiveShaderProgram
#define glCreateShaderProgramv		SharedGL_glCreateShaderProgramv
#define glBindProgramPipeline		SharedGL_glBindProgramPipeline
#define glDeleteProgramPipelines	SharedGL_glDeleteProgramPipelines
#define glGenProgramPipelines		SharedGL_glGenProgramPipelines
#define glIsProgramPipeline		SharedGL_glIsProgramPipeline
#define glGetProgramPipelineiv		SharedGL_glGetProgramPipelineiv
#define glProgramUniform1i		SharedGL_glProgramUniform1i
#define glProgramUniform1iv		SharedGL_glProgramUniform1iv
#define glProgramUniform1f		SharedGL_glProgramUniform1f
#define glProgramUniform1fv		SharedGL_glProgramUniform1fv
#define glProgramUniform1d		SharedGL_glProgramUniform1d
#define glProgramUniform1dv		SharedGL_glProgramUniform1dv
#define glProgramUniform1ui		SharedGL_glProgramUniform1ui
#define glProgramUniform1uiv		SharedGL_glProgramUniform1uiv
#define glProgramUniform2i		SharedGL_glProgramUniform2i
#define glProgramUniform2iv		SharedGL_glProgramUniform2iv
#define glProgramUniform2f		SharedGL_glProgramUniform2f
#define glProgramUniform2fv		SharedGL_glProgramUniform2fv
#define glProgramUniform2d		SharedGL_glProgramUniform2d
#define glProgramUniform2dv		SharedGL_glProgramUniform2dv
#define glProgramUniform2ui		SharedGL_glProgramUniform2ui
#define glProgramUniform2uiv		SharedGL_glProgramUniform2uiv
#define glProgramUniform3i		SharedGL_glProgramUniform3i
#define glProgramUniform3iv		SharedGL_glProgramUniform3iv
#define glProgramUniform3f		SharedGL_glProgramUniform3f
#define glProgramUniform3fv		SharedGL_glProgramUniform3fv
#define glProgramUniform3d		SharedGL_glProgramUniform3d
#define glProgramUniform3dv		SharedGL_glProgramUniform3dv
#define glProgramUniform3ui		SharedGL_glProgramUniform3ui
#define glProgramUniform3uiv		SharedGL_glProgramUniform3uiv
#define glProgramUniform4i		SharedGL_glProgramUniform4i
#define glProgramUniform4iv		SharedGL_glProgramUniform4iv
#define glProgramUniform4f		SharedGL_glProgramUniform4f
#define glProgramUniform4fv		SharedGL_glProgramUniform4fv
#define glProgramUniform4d		SharedGL_glProgramUniform4d
#define glProgramUniform4dv		SharedGL_glProgramUniform4dv
#define glProgramUniform4ui		SharedGL_glProgramUniform4ui
#define glProgramUniform4uiv		SharedGL_glProgramUniform4uiv
#define glProgramUniformMatrix2fv	SharedGL_glProgramUniformMatrix2fv
#define glProgramUniformMatrix3fv	SharedGL_glProgramUniformMatrix3fv
#define glProgramUniformMatrix4fv	SharedGL_glProgramUniformMatrix4fv
#define glProgramUniformMatrix2dv	SharedGL_glProgramUniformMatrix2dv
#define glProgramUniformMatrix3dv	SharedGL_glProgramUniformMatrix3dv
#define glProgramUniformMatrix4dv	SharedGL_glProgramUniformMatrix4dv
#define glProgramUniformMatrix2x3fv	SharedGL_glProgramUniformMatrix2x3fv
#define glProgramUniformMatrix3x2fv	SharedGL_glProgramUniformMatrix3x2fv
#define glProgramUniformMatrix2x4fv	SharedGL_glProgramUniformMatrix2x4fv
#define glProgramUniformMatrix4x2fv	SharedGL_glProgramUniformMatrix4x2fv
#define glProgramUniformMatrix3x4fv	SharedGL_glProgramUniformMatrix3x4fvx
#define glProgramUniformMatrix4x3fv	SharedGL_glProgramUniformMatrix4x3fv
#define glProgramUniformMatrix2x3dv	SharedGL_glProgramUniformMatrix2x3dv
#define glProgramUniformMatrix3x2dv	SharedGL_glProgramUniformMatrix3x2dv
#define glProgramUniformMatrix2x4dv	SharedGL_glProgramUniformMatrix2x4dv
#define glProgramUniformMatrix4x2dv	SharedGL_glProgramUniformMatrix4x2dv
#define glProgramUniformMatrix3x4dv	SharedGL_glProgramUniformMatrix3x4dv
#define glProgramUniformMatrix4x3dv	SharedGL_glProgramUniformMatrix4x3dv
#define glValidateProgramPipeline	SharedGL_glValidateProgramPipeline
#define glGetProgramPipelineInfoLog	SharedGL_glGetProgramPipelineInfoLog
#define glVertexAttribL1d		SharedGL_glVertexAttribL1d
#define glVertexAttribL2d		SharedGL_glVertexAttribL2d
#define glVertexAttribL3d		SharedGL_glVertexAttribL3d
#define glVertexAttribL4d		SharedGL_glVertexAttribL4d
#define glVertexAttribL1dv		SharedGL_glVertexAttribL1dv
#define glVertexAttribL2dv		SharedGL_glVertexAttribL2dv
#define glVertexAttribL3dv		SharedGL_glVertexAttribL3dv
#define glVertexAttribL4dv		SharedGL_glVertexAttribL4dv
#define glVertexAttribLPointer		SharedGL_glVertexAttribLPointer
#define glGetVertexAttribLdv		SharedGL_glGetVertexAttribLdv
#define glViewportArrayv		SharedGL_glViewportArrayv
#define glViewportIndexedf		SharedGL_glViewportIndexedf
#define glViewportIndexedfv		SharedGL_glViewportIndexedfv
#define glScissorArrayv			SharedGL_glScissorArrayv
#define glScissorIndexed		SharedGL_glScissorIndexed
#define glScissorIndexedv		SharedGL_glScissorIndexedv
#define glDepthRangeArrayv		SharedGL_glDepthRangeArrayv
#define glDepthRangeIndexed		SharedGL_glDepthRangeIndexed
#define glGetFloati_v			SharedGL_glGetFloati_v
#define glGetDoublei_v			SharedGL_glGetDoublei_v

typedef void      (__stdcall *PFNGLVERTEXATTRIBLPOINTERPROC)	        (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
typedef void      (__stdcall *PFNGLRELEASESHADERCOSharedGLILERPROC)	        (void);
typedef void      (__stdcall *PFNGLSHADERBINARYPROC)		        (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
typedef void      (__stdcall *PFNGLGETSHADERPRECISIONFORMATPROC)        (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
typedef void      (__stdcall *PFNGLDEPTHRANGEFPROC)		        (GLfloat n, GLfloat f);
typedef void      (__stdcall *PFNGLCLEARDEPTHFPROC)		        (GLfloat d);
typedef void      (__stdcall *PFNGLGETPROGRAMBINARYPROC)	        (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
typedef void      (__stdcall *PFNGLPROGRAMBINARYPROC)		        (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
typedef void      (__stdcall *PFNGLPROGRASharedGLARAMETERIPROC)	        (GLuint program, GLenum pname, GLint value);
typedef void      (__stdcall *PFNGLUSEPROGRAMSTAGESPROC)	        (GLuint pipeline, GLbitfield stages, GLuint program);
typedef void      (__stdcall *PFNGLACTIVESHADERPROGRASharedGLROC)	        (GLuint pipeline, GLuint program);
typedef GLuint    (__stdcall *PFNGLCREATESHADERPROGRAMVPROC)	        (GLenum type, GLsizei count, const GLchar *const*strings);
typedef void      (__stdcall *PFNGLBINDPROGRASharedGLIPELINEPROC)	        (GLuint pipeline);
typedef void      (__stdcall *PFNGLDELETEPROGRASharedGLIPELINESPROC)	        (GLsizei n, const GLuint *pipelines);
typedef void      (__stdcall *PFNGLGENPROGRASharedGLIPELINESPROC)	        (GLsizei n, GLuint *pipelines);
typedef GLboolean (__stdcall *PFNGLISPROGRASharedGLIPELINEPROC)	        (GLuint pipeline);
typedef void      (__stdcall *PFNGLGETPROGRASharedGLIPELINEIVPROC)	        (GLuint pipeline, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1IPROC)	        (GLuint program, GLint location, GLint v0);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1IVPROC)	        (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1FPROC)	        (GLuint program, GLint location, GLfloat v0);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1FVPROC)	        (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1DPROC)	        (GLuint program, GLint location, GLdouble v0);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1DVPROC)	        (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1UIPROC)	        (GLuint program, GLint location, GLuint v0);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM1UIVPROC)	        (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2IPROC)	        (GLuint program, GLint location, GLint v0, GLint v1);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2IVPROC)	        (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2FPROC)	        (GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2FVPROC)	        (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2DPROC)	        (GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2DVPROC)	        (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2UIPROC)	        (GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM2UIVPROC)	        (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3IPROC)	        (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3IVPROC)	        (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3FPROC)	        (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3FVPROC)	        (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3DPROC)	        (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3DVPROC)	        (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3UIPROC)	        (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM3UIVPROC)	        (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4IPROC)	        (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4IVPROC)	        (GLuint program, GLint location, GLsizei count, const GLint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4FPROC)	        (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4FVPROC)	        (GLuint program, GLint location, GLsizei count, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4DPROC)	        (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4DVPROC)	        (GLuint program, GLint location, GLsizei count, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4UIPROC)	        (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORM4UIVPROC)	        (GLuint program, GLint location, GLsizei count, const GLuint *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)	        (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)	        (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)	        (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX2DVPROC)	        (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX3DVPROC)	        (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX4DVPROC)	        (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)	(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
typedef void      (__stdcall *PFNGLVALIDATEPROGRASharedGLIPELINEPROC)		(GLuint pipeline);
typedef void      (__stdcall *PFNGLGETPROGRASharedGLIPELINEINFOLOGPROC)	(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL1DPROC)			(GLuint index, GLdouble x);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL2DPROC)			(GLuint index, GLdouble x, GLdouble y);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL3DPROC)			(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL4DPROC)			(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL1DVPROC)		(GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL2DVPROC)		(GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL3DVPROC)		(GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLVERTEXATTRIBL4DVPROC)		(GLuint index, const GLdouble *v);
typedef void      (__stdcall *PFNGLGETVERTEXATTRIBLDVPROC)		(GLuint index, GLenum pname, GLdouble *params);
typedef void      (__stdcall *PFNGLVIEWPORTARRAYVPROC)			(GLuint first, GLsizei count, const GLfloat *v);
typedef void      (__stdcall *PFNGLVIEWPORTINDEXEDFPROC)		(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void      (__stdcall *PFNGLVIEWPORTINDEXEDFVPROC)		(GLuint index, const GLfloat *v);
typedef void      (__stdcall *PFNGLSCISSORARRAYVPROC)			(GLuint first, GLsizei count, const GLint *v);
typedef void      (__stdcall *PFNGLSCISSORINDEXEDPROC)			(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void      (__stdcall *PFNGLSCISSORINDEXEDVPROC)			(GLuint index, const GLint *v);
typedef void      (__stdcall *PFNGLDEPTHRANGEARRAYVPROC)		(GLuint first, GLsizei count, const GLdouble *v);
typedef void      (__stdcall *PFNGLDEPTHRANGEINDEXEDPROC)		(GLuint index, GLdouble n, GLdouble f);
typedef void      (__stdcall *PFNGLGETFLOATI_VPROC)			(GLenum target, GLuint index, GLfloat *data);
typedef void      (__stdcall *PFNGLGETDOUBLEI_VPROC)			(GLenum target, GLuint index, GLdouble *data);

PFNGLRELEASESHADERCOSharedGLILERPROC		SharedGL_glReleaseShaderCompiler	= 0;
PFNGLSHADERBINARYPROC			SharedGL_glShaderBinary		= 0;
PFNGLGETSHADERPRECISIONFORMATPROC	SharedGL_glGetShaderPrecisionFormat	= 0;
PFNGLDEPTHRANGEFPROC			SharedGL_glDepthRangef		= 0;
PFNGLCLEARDEPTHFPROC			SharedGL_glClearDepthf		= 0;
PFNGLGETPROGRAMBINARYPROC		SharedGL_glGetProgramBinary		= 0;
PFNGLPROGRAMBINARYPROC			SharedGL_glProgramBinary		= 0;
PFNGLPROGRASharedGLARAMETERIPROC		SharedGL_glProgramParameteri		= 0;
PFNGLUSEPROGRAMSTAGESPROC		SharedGL_glUseProgramStages		= 0;
PFNGLACTIVESHADERPROGRASharedGLROC		SharedGL_glActiveShaderProgram	= 0;
PFNGLCREATESHADERPROGRAMVPROC		SharedGL_glCreateShaderProgramv	= 0;
PFNGLBINDPROGRASharedGLIPELINEPROC		SharedGL_glBindProgramPipeline	= 0;
PFNGLDELETEPROGRASharedGLIPELINESPROC		SharedGL_glDeleteProgramPipelines	= 0;
PFNGLGENPROGRASharedGLIPELINESPROC		SharedGL_glGenProgramPipelines	= 0;
PFNGLISPROGRASharedGLIPELINEPROC		SharedGL_glIsProgramPipeline		= 0;
PFNGLGETPROGRASharedGLIPELINEIVPROC		SharedGL_glGetProgramPipelineiv	= 0;
PFNGLPROGRAMUNIFORM1IPROC		SharedGL_glProgramUniform1i		= 0;
PFNGLPROGRAMUNIFORM1IVPROC		SharedGL_glProgramUniform1iv		= 0;
PFNGLPROGRAMUNIFORM1FPROC		SharedGL_glProgramUniform1f		= 0;
PFNGLPROGRAMUNIFORM1FVPROC		SharedGL_glProgramUniform1fv		= 0;
PFNGLPROGRAMUNIFORM1DPROC		SharedGL_glProgramUniform1d		= 0;
PFNGLPROGRAMUNIFORM1DVPROC		SharedGL_glProgramUniform1dv		= 0;
PFNGLPROGRAMUNIFORM1UIPROC		SharedGL_glProgramUniform1ui		= 0;
PFNGLPROGRAMUNIFORM1UIVPROC		SharedGL_glProgramUniform1uiv	= 0;
PFNGLPROGRAMUNIFORM2IPROC		SharedGL_glProgramUniform2i		= 0;
PFNGLPROGRAMUNIFORM2IVPROC		SharedGL_glProgramUniform2iv		= 0;
PFNGLPROGRAMUNIFORM2FPROC		SharedGL_glProgramUniform2f		= 0;
PFNGLPROGRAMUNIFORM2FVPROC		SharedGL_glProgramUniform2fv		= 0;
PFNGLPROGRAMUNIFORM2DPROC		SharedGL_glProgramUniform2d		= 0;
PFNGLPROGRAMUNIFORM2DVPROC		SharedGL_glProgramUniform2dv		= 0;
PFNGLPROGRAMUNIFORM2UIPROC		SharedGL_glProgramUniform2ui		= 0;
PFNGLPROGRAMUNIFORM2UIVPROC		SharedGL_glProgramUniform2uiv	= 0;
PFNGLPROGRAMUNIFORM3IPROC		SharedGL_glProgramUniform3i		= 0;
PFNGLPROGRAMUNIFORM3IVPROC		SharedGL_glProgramUniform3iv		= 0;
PFNGLPROGRAMUNIFORM3FPROC		SharedGL_glProgramUniform3f		= 0;
PFNGLPROGRAMUNIFORM3FVPROC		SharedGL_glProgramUniform3fv		= 0;
PFNGLPROGRAMUNIFORM3DPROC		SharedGL_glProgramUniform3d		= 0;
PFNGLPROGRAMUNIFORM3DVPROC		SharedGL_glProgramUniform3dv		= 0;
PFNGLPROGRAMUNIFORM3UIPROC		SharedGL_glProgramUniform3ui		= 0;
PFNGLPROGRAMUNIFORM3UIVPROC		SharedGL_glProgramUniform3uiv	= 0;
PFNGLPROGRAMUNIFORM4IPROC		SharedGL_glProgramUniform4i		= 0;
PFNGLPROGRAMUNIFORM4IVPROC		SharedGL_glProgramUniform4iv		= 0;
PFNGLPROGRAMUNIFORM4FPROC		SharedGL_glProgramUniform4f		= 0;
PFNGLPROGRAMUNIFORM4FVPROC		SharedGL_glProgramUniform4fv		= 0;
PFNGLPROGRAMUNIFORM4DPROC		SharedGL_glProgramUniform4d		= 0;
PFNGLPROGRAMUNIFORM4DVPROC		SharedGL_glProgramUniform4dv		= 0;
PFNGLPROGRAMUNIFORM4UIPROC		SharedGL_glProgramUniform4ui		= 0;
PFNGLPROGRAMUNIFORM4UIVPROC		SharedGL_glProgramUniform4uiv	= 0;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	SharedGL_glProgramUniformMatrix2fv	= 0;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	SharedGL_glProgramUniformMatrix3fv	= 0;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	SharedGL_glProgramUniformMatrix4fv	= 0;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	SharedGL_glProgramUniformMatrix2dv	= 0;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	SharedGL_glProgramUniformMatrix3dv	= 0;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	SharedGL_glProgramUniformMatrix4dv	= 0;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	SharedGL_glProgramUniformMatrix2x3fv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	SharedGL_glProgramUniformMatrix3x2fv = 0;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	SharedGL_glProgramUniformMatrix2x4fv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	SharedGL_glProgramUniformMatrix4x2fv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	SharedGL_glProgramUniformMatrix3x4fv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	SharedGL_glProgramUniformMatrix4x3fv = 0;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	SharedGL_glProgramUniformMatrix2x3dv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	SharedGL_glProgramUniformMatrix3x2dv = 0;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	SharedGL_glProgramUniformMatrix2x4dv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	SharedGL_glProgramUniformMatrix4x2dv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	SharedGL_glProgramUniformMatrix3x4dv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	SharedGL_glProgramUniformMatrix4x3dv = 0;
PFNGLVALIDATEPROGRASharedGLIPELINEPROC	SharedGL_glValidateProgramPipeline	= 0;
PFNGLGETPROGRASharedGLIPELINEINFOLOGPROC	SharedGL_glGetProgramPipelineInfoLog = 0;
PFNGLVERTEXATTRIBL1DPROC		SharedGL_glVertexAttribL1d		= 0;
PFNGLVERTEXATTRIBL2DPROC		SharedGL_glVertexAttribL2d		= 0;
PFNGLVERTEXATTRIBL3DPROC		SharedGL_glVertexAttribL3d		= 0;
PFNGLVERTEXATTRIBL4DPROC		SharedGL_glVertexAttribL4d		= 0;
PFNGLVERTEXATTRIBL1DVPROC		SharedGL_glVertexAttribL1dv		= 0;
PFNGLVERTEXATTRIBL2DVPROC		SharedGL_glVertexAttribL2dv		= 0;
PFNGLVERTEXATTRIBL3DVPROC		SharedGL_glVertexAttribL3dv		= 0;
PFNGLVERTEXATTRIBL4DVPROC		SharedGL_glVertexAttribL4dv		= 0;
PFNGLVERTEXATTRIBLPOINTERPROC		SharedGL_glVertexAttribLPointer	= 0;
PFNGLGETVERTEXATTRIBLDVPROC		SharedGL_glGetVertexAttribLdv	= 0;
PFNGLVIEWPORTARRAYVPROC			SharedGL_glViewportArrayv		= 0;
PFNGLVIEWPORTINDEXEDFPROC		SharedGL_glViewportIndexedf		= 0;
PFNGLVIEWPORTINDEXEDFVPROC		SharedGL_glViewportIndexedfv		= 0;
PFNGLSCISSORARRAYVPROC			SharedGL_glScissorArrayv		= 0;
PFNGLSCISSORINDEXEDPROC			SharedGL_glScissorIndexed		= 0;
PFNGLSCISSORINDEXEDVPROC		SharedGL_glScissorIndexedv		= 0;
PFNGLDEPTHRANGEARRAYVPROC		SharedGL_glDepthRangeArrayv		= 0;
PFNGLDEPTHRANGEINDEXEDPROC		SharedGL_glDepthRangeIndexed		= 0;
PFNGLGETFLOATI_VPROC			SharedGL_glGetFloati_v		= 0;
PFNGLGETDOUBLEI_VPROC			SharedGL_glGetDoublei_v		= 0;

// 4.2
#define glDrawArraysInstancedBaseInstance		SharedGL_glDrawArraysInstancedBaseInstance
#define glDrawElementsInstancedBaseInstance		SharedGL_glDrawElementsInstancedBaseInstance
#define glDrawElementsInstancedBaseVertexBaseInstance	SharedGL_glDrawElementsInstancedBaseVertexBaseInstance
#define glGetInternalformativ				SharedGL_glGetInternalformativ
#define glGetActiveAtomicCounterBufferiv		SharedGL_glGetActiveAtomicCounterBufferiv
#define glBindImageTexture				SharedGL_glBindImageTexture
#define glMemoryBarrier					SharedGL_glMemoryBarrier
#define glTexStorage1D					SharedGL_glTexStorage1D
#define glTexStorage2D					SharedGL_glTexStorage2D
#define glTexStorage3D					SharedGL_glTexStorage3D
#define glDrawTransformFeedbackInstanced		SharedGL_glDrawTransformFeedbackInstanced
#define glDrawTransformFeedbackStreamInstanced		SharedGL_glDrawTransformFeedbackStreamInstanced

typedef void (__stdcall *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)             (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (__stdcall *PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)           (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
typedef void (__stdcall *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (__stdcall *PFNGLGETINTERNALFORMATIVPROC)                         (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
typedef void (__stdcall *PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)              (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
typedef void (__stdcall *PFNGLBINDIMAGETEXTUREPROC)                            (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (__stdcall *PFNGLMEMORYBARRIERPROC)                               (GLbitfield barriers);
typedef void (__stdcall *PFNGLTEXSTORAGE1DPROC)                                (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (__stdcall *PFNGLTEXSTORAGE2DPROC)                                (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (__stdcall *PFNGLTEXSTORAGE3DPROC)                                (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (__stdcall *PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)              (GLenum mode, GLuint id, GLsizei instancecount);
typedef void (__stdcall *PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)        (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);

PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC		SharedGL_glDrawArraysInstancedBaseInstance		  = 0;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC		SharedGL_glDrawElementsInstancedBaseInstance		  = 0;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	SharedGL_glDrawElementsInstancedBaseVertexBaseInstance = 0;
PFNGLGETINTERNALFORMATIVPROC				SharedGL_glGetInternalformativ			  = 0;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC			SharedGL_glGetActiveAtomicCounterBufferiv		  = 0;
PFNGLBINDIMAGETEXTUREPROC				SharedGL_glBindImageTexture				  = 0;
PFNGLMEMORYBARRIERPROC					SharedGL_glMemoryBarrier				  = 0;
PFNGLTEXSTORAGE1DPROC					SharedGL_glTexStorage1D				  = 0;
PFNGLTEXSTORAGE2DPROC					SharedGL_glTexStorage2D				  = 0;
PFNGLTEXSTORAGE3DPROC					SharedGL_glTexStorage3D				  = 0;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC			SharedGL_glDrawTransformFeedbackInstanced		  = 0;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC		SharedGL_glDrawTransformFeedbackStreamInstanced	  = 0;

// 4.3 
#define glClearBufferData			SharedGL_glClearBufferData
#define glClearBufferSubData			SharedGL_glClearBufferSubData
#define glDispatchCompute			SharedGL_glDispatchCompute
#define glDispatchComputeIndirect		SharedGL_glDispatchComputeIndirect
#define glCopyImageSubData			SharedGL_glCopyImageSubData
#define glFramebufferParameteri			SharedGL_glFramebufferParameteri
#define glGetFramebufferParameteriv		SharedGL_glGetFramebufferParameteriv
#define glGetInternalformati64v			SharedGL_glGetInternalformati64v
#define glInvalidateTexSubImage			SharedGL_glInvalidateTexSubImage
#define glInvalidateTexImage			SharedGL_glInvalidateTexImage
#define glInvalidateBufferSubData		SharedGL_glInvalidateBufferSubData
#define glInvalidateBufferData			SharedGL_glInvalidateBufferData
#define glInvalidateFramebuffer			SharedGL_glInvalidateFramebuffer
#define glInvalidateSubFramebuffer		SharedGL_glInvalidateSubFramebuffer
#define glMultiDrawArraysIndirect		SharedGL_glMultiDrawArraysIndirect
#define glMultiDrawElementsIndirect		SharedGL_glMultiDrawElementsIndirect
#define glGetProgramInterfaceiv			SharedGL_glGetProgramInterfaceiv
#define glGetProgramResourceIndex		SharedGL_glGetProgramResourceIndex
#define glGetProgramResourceName		SharedGL_glGetProgramResourceName
#define glGetProgramResourceiv			SharedGL_glGetProgramResourceiv
#define glGetProgramResourceLocation		SharedGL_glGetProgramResourceLocation
#define glGetProgramResourceLocationIndex	SharedGL_glGetProgramResourceLocationIndex
#define glShaderStorageBlockBinding		SharedGL_glShaderStorageBlockBinding
#define glTexBufferRange			SharedGL_glTexBufferRange
#define glTexStorage2DMultisample		SharedGL_glTexStorage2DMultisample
#define glTexStorage3DMultisample		SharedGL_glTexStorage3DMultisample
#define glTextureView				SharedGL_glTextureView
#define glBindVertexBuffer			SharedGL_glBindVertexBuffer
#define glVertexAttribFormat			SharedGL_glVertexAttribFormat
#define glVertexAttribIFormat			SharedGL_glVertexAttribIFormat
#define glVertexAttribLFormat			SharedGL_glVertexAttribLFormat
#define glVertexAttribBinding			SharedGL_glVertexAttribBinding
#define glVertexBindingDivisor			SharedGL_glVertexBindingDivisor
#define glDebugMessageControl			SharedGL_glDebugMessageControl
#define glDebugMessageInsert			SharedGL_glDebugMessageInsert
#define glDebugMessageCallback			SharedGL_glDebugMessageCallback
#define glGetDebugMessageLog			SharedGL_glGetDebugMessageLog
#define glPushDebugGroup			SharedGL_glPushDebugGroup
#define glPopDebugGroup				SharedGL_glPopDebugGroup
#define glObjectLabel				SharedGL_glObjectLabel
#define glGetObjectLabel			SharedGL_glGetObjectLabel
#define glObjectPtrLabel			SharedGL_glObjectPtrLabel
#define glGetObjectPtrLabel			SharedGL_glGetObjectPtrLabel
#define glGetPointerv				SharedGL_glGetPointerv

typedef void   (__stdcall *PFNGLCLEARBUFFERDATAPROC)                 (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void   (__stdcall *PFNGLCLEARBUFFERSUBDATAPROC)              (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void   (__stdcall *PFNGLDISPATCHCOSharedGLUTEPROC)                 (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void   (__stdcall *PFNGLDISPATCHCOSharedGLUTEINDIRECTPROC)         (GLintptr indirect);
typedef void   (__stdcall *PFNGLCOPYIMAGESUBDATAPROC)                (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void   (__stdcall *PFNGLFRAMEBUFFERPARAMETERIPROC)           (GLenum target, GLenum pname, GLint param);
typedef void   (__stdcall *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)       (GLenum target, GLenum pname, GLint *params);
typedef void   (__stdcall *PFNGLGETINTERNALFORMATI64VPROC)           (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
typedef void   (__stdcall *PFNGLINVALIDATETEXSUBIMAGEPROC)           (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void   (__stdcall *PFNGLINVALIDATETEXIMAGEPROC)              (GLuint texture, GLint level);
typedef void   (__stdcall *PFNGLINVALIDATEBUFFERSUBDATAPROC)         (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void   (__stdcall *PFNGLINVALIDATEBUFFERDATAPROC)            (GLuint buffer);
typedef void   (__stdcall *PFNGLINVALIDATEFRAMEBUFFERPROC)           (GLenum target, GLsizei numAttachments, const GLenum *attachments);
typedef void   (__stdcall *PFNGLINVALIDATESUBFRAMEBUFFERPROC)        (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void   (__stdcall *PFNGLMULTIDRAWARRAYSINDIRECTPROC)         (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
typedef void   (__stdcall *PFNGLMULTIDRAWELEMENTSINDIRECTPROC)       (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
typedef void   (__stdcall *PFNGLGETPROGRAMINTERFACEIVPROC)           (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
typedef GLuint (__stdcall *PFNGLGETPROGRAMRESOURCEINDEXPROC)         (GLuint program, GLenum programInterface, const GLchar *name);
typedef void   (__stdcall *PFNGLGETPROGRAMRESOURCENAMEPROC)          (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
typedef void   (__stdcall *PFNGLGETPROGRAMRESOURCEIVPROC)            (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
typedef GLint  (__stdcall *PFNGLGETPROGRAMRESOURCELOCATIONPROC)      (GLuint program, GLenum programInterface, const GLchar *name);
typedef GLint  (__stdcall *PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
typedef void   (__stdcall *PFNGLSHADERSTORAGEBLOCKBINDINGPROC)       (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void   (__stdcall *PFNGLTEXBUFFERRANGEPROC)                  (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void   (__stdcall *PFNGLTEXSTORAGE2DMULTISASharedGLLEPROC)         (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void   (__stdcall *PFNGLTEXSTORAGE3DMULTISASharedGLLEPROC)         (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void   (__stdcall *PFNGLTEXTUREVIEWPROC)                     (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void   (__stdcall *PFNGLBINDVERTEXBUFFERPROC)                (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void   (__stdcall *PFNGLVERTEXATTRIBFORMATPROC)              (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void   (__stdcall *PFNGLVERTEXATTRIBIFORMATPROC)             (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void   (__stdcall *PFNGLVERTEXATTRIBLFORMATPROC)             (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void   (__stdcall *PFNGLVERTEXATTRIBBINDINGPROC)             (GLuint attribindex, GLuint bindingindex);
typedef void   (__stdcall *PFNGLVERTEXBINDINGDIVISORPROC)            (GLuint bindingindex, GLuint divisor);
typedef void   (__stdcall *PFNGLDEBUGMESSAGECONTROLPROC)             (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
typedef void   (__stdcall *PFNGLDEBUGMESSAGEINSERTPROC)              (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
typedef void   (__stdcall *PFNGLDEBUGMESSAGECALLBACKPROC)            (GLDEBUGPROC callback, const void *userParam);
typedef GLuint (__stdcall *PFNGLGETDEBUGMESSAGELOGPROC)              (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
typedef void   (__stdcall *PFNGLPUSHDEBUGGROUPPROC)                  (GLenum source, GLuint id, GLsizei length, const GLchar *message);
typedef void   (__stdcall *PFNGLPOPDEBUGGROUPPROC)                   (void);
typedef void   (__stdcall *PFNGLOBJECTLABELPROC)                     (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
typedef void   (__stdcall *PFNGLGETOBJECTLABELPROC)                  (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
typedef void   (__stdcall *PFNGLOBJECTPTRLABELPROC)                  (const void *ptr, GLsizei length, const GLchar *label);
typedef void   (__stdcall *PFNGLGETOBJECTPTRLABELPROC)               (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
typedef void   (__stdcall *PFNGLGETPOINTERVPROC)                     (GLenum pname, void **params);

PFNGLCLEARBUFFERDATAPROC			SharedGL_glClearBufferData		      = 0;
PFNGLCLEARBUFFERSUBDATAPROC			SharedGL_glClearBufferSubData	      = 0;
PFNGLDISPATCHCOSharedGLUTEPROC			SharedGL_glDispatchCompute		      = 0;
PFNGLDISPATCHCOSharedGLUTEINDIRECTPROC		SharedGL_glDispatchComputeIndirect	      = 0;
PFNGLCOPYIMAGESUBDATAPROC			SharedGL_glCopyImageSubData		      = 0;
PFNGLFRAMEBUFFERPARAMETERIPROC			SharedGL_glFramebufferParameteri	      = 0;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC		SharedGL_glGetFramebufferParameteriv	      = 0;
PFNGLGETINTERNALFORMATI64VPROC			SharedGL_glGetInternalformati64v	      = 0;
PFNGLINVALIDATETEXSUBIMAGEPROC			SharedGL_glInvalidateTexSubImage	      = 0;
PFNGLINVALIDATETEXIMAGEPROC			SharedGL_glInvalidateTexImage	      = 0;
PFNGLINVALIDATEBUFFERSUBDATAPROC		SharedGL_glInvalidateBufferSubData	      = 0;
PFNGLINVALIDATEBUFFERDATAPROC			SharedGL_glInvalidateBufferData	      = 0;
PFNGLINVALIDATEFRAMEBUFFERPROC			SharedGL_glInvalidateFramebuffer	      = 0;
PFNGLINVALIDATESUBFRAMEBUFFERPROC		SharedGL_glInvalidateSubFramebuffer	      = 0;
PFNGLMULTIDRAWARRAYSINDIRECTPROC		SharedGL_glMultiDrawArraysIndirect	      = 0;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC		SharedGL_glMultiDrawElementsIndirect	      = 0;
PFNGLGETPROGRAMINTERFACEIVPROC			SharedGL_glGetProgramInterfaceiv	      = 0;
PFNGLGETPROGRAMRESOURCEINDEXPROC		SharedGL_glGetProgramResourceIndex	      = 0;
PFNGLGETPROGRAMRESOURCENAMEPROC			SharedGL_glGetProgramResourceName	      = 0;
PFNGLGETPROGRAMRESOURCEIVPROC			SharedGL_glGetProgramResourceiv	      = 0;
PFNGLGETPROGRAMRESOURCELOCATIONPROC		SharedGL_glGetProgramResourceLocation      = 0;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	SharedGL_glGetProgramResourceLocationIndex = 0;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC		SharedGL_glShaderStorageBlockBinding	      = 0;
PFNGLTEXBUFFERRANGEPROC				SharedGL_glTexBufferRange		      = 0;
PFNGLTEXSTORAGE2DMULTISASharedGLLEPROC		SharedGL_glTexStorage2DMultisample	      = 0;
PFNGLTEXSTORAGE3DMULTISASharedGLLEPROC		SharedGL_glTexStorage3DMultisample	      = 0;
PFNGLTEXTUREVIEWPROC				SharedGL_glTextureView		      = 0;
PFNGLBINDVERTEXBUFFERPROC			SharedGL_glBindVertexBuffer		      = 0;
PFNGLVERTEXATTRIBFORMATPROC			SharedGL_glVertexAttribFormat	      = 0;
PFNGLVERTEXATTRIBIFORMATPROC			SharedGL_glVertexAttribIFormat	      = 0;
PFNGLVERTEXATTRIBLFORMATPROC			SharedGL_glVertexAttribLFormat	      = 0;
PFNGLVERTEXATTRIBBINDINGPROC			SharedGL_glVertexAttribBinding	      = 0;
PFNGLVERTEXBINDINGDIVISORPROC			SharedGL_glVertexBindingDivisor	      = 0;
PFNGLDEBUGMESSAGECONTROLPROC			SharedGL_glDebugMessageControl	      = 0;
PFNGLDEBUGMESSAGEINSERTPROC			SharedGL_glDebugMessageInsert	      = 0;
PFNGLDEBUGMESSAGECALLBACKPROC			SharedGL_glDebugMessageCallback	      = 0;
PFNGLGETDEBUGMESSAGELOGPROC			SharedGL_glGetDebugMessageLog	      = 0;
PFNGLPUSHDEBUGGROUPPROC				SharedGL_glPushDebugGroup		      = 0;
PFNGLPOPDEBUGGROUPPROC				SharedGL_glPopDebugGroup		      = 0;
PFNGLOBJECTLABELPROC				SharedGL_glObjectLabel		      = 0;
PFNGLGETOBJECTLABELPROC				SharedGL_glGetObjectLabel		      = 0;
PFNGLOBJECTPTRLABELPROC				SharedGL_glObjectPtrLabel		      = 0;
PFNGLGETOBJECTPTRLABELPROC			SharedGL_glGetObjectPtrLabel		      = 0;
PFNGLGETPOINTERVPROC				SharedGL_glGetPointerv		      = 0;

// note: 4.4
#define glBufferStorage		SharedGL_glBufferStorage
#define glClearTexImage		SharedGL_glClearTexImage
#define glClearTexSubImage	SharedGL_glClearTexSubImage
#define glBindBuffersRange	SharedGL_glBindBuffersRange
#define glBindTextures		SharedGL_glBindTextures
#define glBindSamplers		SharedGL_glBindSamplers
#define glBindImageTextures	SharedGL_glBindImageTextures
#define glBindVertexBuffers	SharedGL_glBindVertexBuffers

typedef void (__stdcall *PFNGLBUFFERSTORAGEPROC)     (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void (__stdcall *PFNGLCLEARTEXIMAGEPROC)     (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
typedef void (__stdcall *PFNGLCLEARTEXSUBIMAGEPROC)  (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
typedef void (__stdcall *PFNGLBINDBUFFERSBASEPROC)   (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
typedef void (__stdcall *PFNGLBINDBUFFERSRANGEPROC)  (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
typedef void (__stdcall *PFNGLBINDTEXTURESPROC)      (GLuint first, GLsizei count, const GLuint *textures);
typedef void (__stdcall *PFNGLBINDSASharedGLLERSPROC)      (GLuint first, GLsizei count, const GLuint *samplers);
typedef void (__stdcall *PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);
typedef void (__stdcall *PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);

PFNGLBUFFERSTORAGEPROC		SharedGL_glBufferStorage	= 0;
PFNGLCLEARTEXIMAGEPROC		SharedGL_glClearTexImage	= 0;
PFNGLCLEARTEXSUBIMAGEPROC	SharedGL_glClearTexSubImage	= 0;
PFNGLBINDBUFFERSBASEPROC	SharedGL_glBindBuffersBase	= 0;
PFNGLBINDBUFFERSRANGEPROC	SharedGL_glBindBuffersRange	= 0;
PFNGLBINDTEXTURESPROC		SharedGL_glBindTextures	= 0;
PFNGLBINDSASharedGLLERSPROC		SharedGL_glBindSamplers	= 0;
PFNGLBINDIMAGETEXTURESPROC	SharedGL_glBindImageTextures = 0;
PFNGLBINDVERTEXBUFFERSPROC	SharedGL_glBindVertexBuffers = 0;

// 4.5 
#define glClipControl					SharedGL_glClipControl
#define glCreateTransformFeedbacks			SharedGL_glCreateTransformFeedbacks
#define glTransformFeedbackBufferBase			SharedGL_glTransformFeedbackBufferBase
#define glTransformFeedbackBufferRange			SharedGL_glTransformFeedbackBufferRange
#define glGetTransformFeedbackiv			SharedGL_glGetTransformFeedbackiv
#define glGetTransformFeedbacki_v			SharedGL_glGetTransformFeedbacki_v
#define glGetTransformFeedbacki64_v			SharedGL_glGetTransformFeedbacki64_v
#define glCreateBuffers					SharedGL_glCreateBuffers
#define glNamedBufferStorage				SharedGL_glNamedBufferStorage
#define glNamedBufferData				SharedGL_glNamedBufferData
#define glNamedBufferSubData				SharedGL_glNamedBufferSubData
#define glCopyNamedBufferSubData			SharedGL_glCopyNamedBufferSubData
#define glClearNamedBufferData				SharedGL_glClearNamedBufferData
#define glClearNamedBufferSubData			SharedGL_glClearNamedBufferSubData
#define glMapNamedBuffer				SharedGL_glMapNamedBuffer
#define glMapNamedBufferRange				SharedGL_glMapNamedBufferRange
#define glUnmapNamedBuffer				SharedGL_glUnmapNamedBuffer
#define glFlushMappedNamedBufferRange			SharedGL_glFlushMappedNamedBufferRange
#define glGetNamedBufferParameteriv			SharedGL_glGetNamedBufferParameteriv
#define glGetNamedBufferParameteri64v			SharedGL_glGetNamedBufferParameteri64v
#define glGetNamedBufferPointerv			SharedGL_glGetNamedBufferPointerv
#define glGetNamedBufferSubData				SharedGL_glGetNamedBufferSubData
#define glCreateFramebuffers				SharedGL_glCreateFramebuffers
#define glNamedFramebufferRenderbuffer			SharedGL_glNamedFramebufferRenderbuffer
#define glNamedFramebufferParameteri			SharedGL_glNamedFramebufferParameteri
#define glNamedFramebufferTexture			SharedGL_glNamedFramebufferTexture
#define glNamedFramebufferTextureLayer			SharedGL_glNamedFramebufferTextureLayer
#define glNamedFramebufferDrawBuffer			SharedGL_glNamedFramebufferDrawBuffer
#define glNamedFramebufferDrawBuffers			SharedGL_glNamedFramebufferDrawBuffers
#define glNamedFramebufferReadBuffer			SharedGL_glNamedFramebufferReadBuffer
#define glInvalidateNamedFramebufferData		SharedGL_glInvalidateNamedFramebufferData
#define glInvalidateNamedFramebufferSubData		SharedGL_glInvalidateNamedFramebufferSubData
#define glClearNamedFramebufferiv			SharedGL_glClearNamedFramebufferiv
#define glClearNamedFramebufferuiv			SharedGL_glClearNamedFramebufferuiv
#define glClearNamedFramebufferfv			SharedGL_glClearNamedFramebufferfv
#define glClearNamedFramebufferfi			SharedGL_glClearNamedFramebufferfi
#define glBlitNamedFramebuffer				SharedGL_glBlitNamedFramebuffer
#define glCheckNamedFramebufferStatus			SharedGL_glCheckNamedFramebufferStatus
#define glGetNamedFramebufferParameteriv		SharedGL_glGetNamedFramebufferParameteriv
#define glGetNamedFramebufferAttachmentParameteriv	SharedGL_glGetNamedFramebufferAttachmentParameteriv
#define glCreateRenderbuffers				SharedGL_glCreateRenderbuffers
#define glNamedRenderbufferStorage			SharedGL_glNamedRenderbufferStorage
#define glNamedRenderbufferStorageMultisample		SharedGL_glNamedRenderbufferStorageMultisample
#define glGetNamedRenderbufferParameteriv		SharedGL_glGetNamedRenderbufferParameteriv
#define glCreateTextures				SharedGL_glCreateTextures
#define glTextureBuffer					SharedGL_glTextureBuffer
#define glTextureBufferRange				SharedGL_glTextureBufferRange
#define glTextureStorage1D				SharedGL_glTextureStorage1D
#define glTextureStorage2D				SharedGL_glTextureStorage2D
#define glTextureStorage3D				SharedGL_glTextureStorage3D
#define glTextureStorage2DMultisample			SharedGL_glTextureStorage2DMultisample
#define glTextureStorage3DMultisample			SharedGL_glTextureStorage3DMultisample
#define glTextureSubImage1D				SharedGL_glTextureSubImage1D
#define glTextureSubImage2D				SharedGL_glTextureSubImage2D
#define glTextureSubImage3D				SharedGL_glTextureSubImage3D
#define glCompressedTextureSubImage1D			SharedGL_glCompressedTextureSubImage1D
#define glCompressedTextureSubImage2D			SharedGL_glCompressedTextureSubImage2D
#define glCompressedTextureSubImage3D			SharedGL_glCompressedTextureSubImage3D
#define glCopyTextureSubImage1D				SharedGL_glCopyTextureSubImage1D
#define glCopyTextureSubImage2D				SharedGL_glCopyTextureSubImage2D
#define glCopyTextureSubImage3D				SharedGL_glCopyTextureSubImage3D
#define glTextureParameterf				SharedGL_glTextureParameterf
#define glTextureParameterfv				SharedGL_glTextureParameterfv
#define glTextureParameteri				SharedGL_glTextureParameteri
#define glTextureParameterIiv				SharedGL_glTextureParameterIiv
#define glTextureParameterIuiv				SharedGL_glTextureParameterIuiv
#define glTextureParameteriv				SharedGL_glTextureParameteriv
#define glGenerateTextureMipmap				SharedGL_glGenerateTextureMipmap
#define glBindTextureUnit				SharedGL_glBindTextureUnit
#define glGetTextureImage				SharedGL_glGetTextureImage
#define glGetCompressedTextureImage			SharedGL_glGetCompressedTextureImage
#define glGetTextureLevelParameterfv			SharedGL_glGetTextureLevelParameterfv
#define glGetTextureLevelParameteriv			SharedGL_glGetTextureLevelParameteriv
#define glGetTextureParameterfv				SharedGL_glGetTextureParameterfv
#define glGetTextureParameterIiv			SharedGL_glGetTextureParameterIiv
#define glGetTextureParameterIuiv			SharedGL_glGetTextureParameterIuiv
#define glGetTextureParameteriv				SharedGL_glGetTextureParameteriv
#define glCreateVertexArrays				SharedGL_glCreateVertexArrays
#define glDisableVertexArrayAttrib			SharedGL_glDisableVertexArrayAttrib
#define glEnableVertexArrayAttrib			SharedGL_glEnableVertexArrayAttrib
#define glVertexArrayElementBuffer			SharedGL_glVertexArrayElementBuffer
#define glVertexArrayVertexBuffer			SharedGL_glVertexArrayVertexBuffer
#define glVertexArrayVertexBuffers			SharedGL_glVertexArrayVertexBuffers
#define glVertexArrayAttribBinding			SharedGL_glVertexArrayAttribBinding
#define glVertexArrayAttribFormat			SharedGL_glVertexArrayAttribFormat
#define glVertexArrayAttribIFormat			SharedGL_glVertexArrayAttribIFormat
#define glVertexArrayAttribLFormat			SharedGL_glVertexArrayAttribLFormat
#define glVertexArrayBindingDivisor			SharedGL_glVertexArrayBindingDivisor
#define glGetVertexArrayiv				SharedGL_glGetVertexArrayiv
#define glGetVertexArrayIndexediv			SharedGL_glGetVertexArrayIndexediv
#define glGetVertexArrayIndexed64iv			SharedGL_glGetVertexArrayIndexed64iv
#define glCreateSamplers				SharedGL_glCreateSamplers
#define glCreateProgramPipelines			SharedGL_glCreateProgramPipelines
#define glCreateQueries					SharedGL_glCreateQueries
#define glGetQueryBufferObjecti64v			SharedGL_glGetQueryBufferObjecti64v
#define glGetQueryBufferObjectiv			SharedGL_glGetQueryBufferObjectiv
#define glGetQueryBufferObjectui64v			SharedGL_glGetQueryBufferObjectui64v
#define glGetQueryBufferObjectuiv			SharedGL_glGetQueryBufferObjectuiv
#define glMemoryBarrierByRegion				SharedGL_glMemoryBarrierByRegion
#define glGetTextureSubImage				SharedGL_glGetTextureSubImage
#define glGetCompressedTextureSubImage			SharedGL_glGetCompressedTextureSubImage
#define glGetGraphicsResetStatus			SharedGL_glGetGraphicsResetStatus
#define glGetnCompressedTexImage			SharedGL_glGetnCompressedTexImage
#define glGetnTexImage					SharedGL_glGetnTexImage
#define glGetnUniformdv					SharedGL_glGetnUniformdv
#define glGetnUniformfv					SharedGL_glGetnUniformfv
#define glGetnUniformiv					SharedGL_glGetnUniformiv
#define glGetnUniformuiv				SharedGL_glGetnUniformuiv
#define glReadnPixels					SharedGL_glReadnPixels
#define glGetnMapdv					SharedGL_glGetnMapdv
#define glGetnMapfv					SharedGL_glGetnMapfv
#define glGetnMapiv					SharedGL_glGetnMapiv
#define glGetnPixelMapfv				SharedGL_glGetnPixelMapfv
#define glGetnPixelMapuiv				SharedGL_glGetnPixelMapuiv
#define glGetnPixelMapusv				SharedGL_glGetnPixelMapusv
#define glGetnPolygonStipple				SharedGL_glGetnPolygonStipple
#define glGetnColorTable				SharedGL_glGetnColorTable
#define glGetnConvolutionFilter				SharedGL_glGetnConvolutionFilter
#define glGetnSeparableFilter				SharedGL_glGetnSeparableFilter
#define glGetnHistogram					SharedGL_glGetnHistogram
#define glGetnMinmax					SharedGL_glGetnMinmax
#define glTextureBarrier				SharedGL_glTextureBarrier

typedef void      (__stdcall *PFNGLCLIPCONTROLPROC)                              (GLenum origin, GLenum depth);
typedef void      (__stdcall *PFNGLCREATETRANSFORMFEEDBACKSPROC)                 (GLsizei n, GLuint *ids);
typedef void      (__stdcall *PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)              (GLuint xfb, GLuint index, GLuint buffer);
typedef void      (__stdcall *PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)             (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void      (__stdcall *PFNGLGETTRANSFORMFEEDBACKIVPROC)                   (GLuint xfb, GLenum pname, GLint *param);
typedef void      (__stdcall *PFNGLGETTRANSFORMFEEDBACKI_VPROC)                  (GLuint xfb, GLenum pname, GLuint index, GLint *param);
typedef void      (__stdcall *PFNGLGETTRANSFORMFEEDBACKI64_VPROC)                (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
typedef void      (__stdcall *PFNGLCREATEBUFFERSPROC)                            (GLsizei n, GLuint *buffers);
typedef void      (__stdcall *PFNGLNAMEDBUFFERSTORAGEPROC)                       (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
typedef void      (__stdcall *PFNGLNAMEDBUFFERDATAPROC)                          (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
typedef void      (__stdcall *PFNGLNAMEDBUFFERSUBDATAPROC)                       (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
typedef void      (__stdcall *PFNGLCOPYNAMEDBUFFERSUBDATAPROC)                   (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void      (__stdcall *PFNGLCLEARNAMEDBUFFERDATAPROC)                     (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
typedef void      (__stdcall *PFNGLCLEARNAMEDBUFFERSUBDATAPROC)                  (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
typedef void*     (__stdcall *PFNGLMAPNAMEDBUFFERPROC)                           (GLuint buffer, GLenum access);
typedef void*     (__stdcall *PFNGLMAPNAMEDBUFFERRANGEPROC)                      (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean (__stdcall *PFNGLUNMAPNAMEDBUFFERPROC)                         (GLuint buffer);
typedef void      (__stdcall *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)              (GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void      (__stdcall *PFNGLGETNAMEDBUFFERPARAMETERIVPROC)                (GLuint buffer, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)              (GLuint buffer, GLenum pname, GLint64 *params);
typedef void      (__stdcall *PFNGLGETNAMEDBUFFERPOINTERVPROC)                   (GLuint buffer, GLenum pname, void **params);
typedef void      (__stdcall *PFNGLGETNAMEDBUFFERSUBDATAPROC)                    (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
typedef void      (__stdcall *PFNGLCREATEFRAMEBUFFERSPROC)                       (GLsizei n, GLuint *framebuffers);
typedef void      (__stdcall *PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)             (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void      (__stdcall *PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)               (GLuint framebuffer, GLenum pname, GLint param);
typedef void      (__stdcall *PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)                  (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void      (__stdcall *PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)             (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void      (__stdcall *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)               (GLuint framebuffer, GLenum buf);
typedef void      (__stdcall *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)              (GLuint framebuffer, GLsizei n, const GLenum *bufs);
typedef void      (__stdcall *PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)               (GLuint framebuffer, GLenum src);
typedef void      (__stdcall *PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)           (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
typedef void      (__stdcall *PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)        (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void      (__stdcall *PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)                  (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
typedef void      (__stdcall *PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)                 (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
typedef void      (__stdcall *PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)                  (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
typedef void      (__stdcall *PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)                  (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void      (__stdcall *PFNGLBLITNAMEDFRAMEBUFFERPROC)                     (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum    (__stdcall *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)              (GLuint framebuffer, GLenum target);
typedef void      (__stdcall *PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)           (GLuint framebuffer, GLenum pname, GLint *param);
typedef void      (__stdcall *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLCREATERENDERBUFFERSPROC)                      (GLsizei n, GLuint *renderbuffers);
typedef void      (__stdcall *PFNGLNAMEDRENDERBUFFERSTORAGEPROC)                 (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void      (__stdcall *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISASharedGLLEPROC)      (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void      (__stdcall *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)          (GLuint renderbuffer, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLCREATETEXTURESPROC)                           (GLenum target, GLsizei n, GLuint *textures);
typedef void      (__stdcall *PFNGLTEXTUREBUFFERPROC)                            (GLuint texture, GLenum internalformat, GLuint buffer);
typedef void      (__stdcall *PFNGLTEXTUREBUFFERRANGEPROC)                       (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void      (__stdcall *PFNGLTEXTURESTORAGE1DPROC)                         (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void      (__stdcall *PFNGLTEXTURESTORAGE2DPROC)                         (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void      (__stdcall *PFNGLTEXTURESTORAGE3DPROC)                         (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void      (__stdcall *PFNGLTEXTURESTORAGE2DMULTISASharedGLLEPROC)              (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void      (__stdcall *PFNGLTEXTURESTORAGE3DMULTISASharedGLLEPROC)              (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void      (__stdcall *PFNGLTEXTURESUBIMAGE1DPROC)                        (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
typedef void      (__stdcall *PFNGLTEXTURESUBIMAGE2DPROC)                        (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
typedef void      (__stdcall *PFNGLTEXTURESUBIMAGE3DPROC)                        (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
typedef void      (__stdcall *PFNGLCOSharedGLRESSEDTEXTURESUBIMAGE1DPROC)              (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
typedef void      (__stdcall *PFNGLCOSharedGLRESSEDTEXTURESUBIMAGE2DPROC)              (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
typedef void      (__stdcall *PFNGLCOSharedGLRESSEDTEXTURESUBIMAGE3DPROC)              (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
typedef void      (__stdcall *PFNGLCOPYTEXTURESUBIMAGE1DPROC)                    (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void      (__stdcall *PFNGLCOPYTEXTURESUBIMAGE2DPROC)                    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void      (__stdcall *PFNGLCOPYTEXTURESUBIMAGE3DPROC)                    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void      (__stdcall *PFNGLTEXTUREPARAMETERFPROC)                        (GLuint texture, GLenum pname, GLfloat param);
typedef void      (__stdcall *PFNGLTEXTUREPARAMETERFVPROC)                       (GLuint texture, GLenum pname, const GLfloat *param);
typedef void      (__stdcall *PFNGLTEXTUREPARAMETERIPROC)                        (GLuint texture, GLenum pname, GLint param);
typedef void      (__stdcall *PFNGLTEXTUREPARAMETERIIVPROC)                      (GLuint texture, GLenum pname, const GLint *params);
typedef void      (__stdcall *PFNGLTEXTUREPARAMETERIUIVPROC)                     (GLuint texture, GLenum pname, const GLuint *params);
typedef void      (__stdcall *PFNGLTEXTUREPARAMETERIVPROC)                       (GLuint texture, GLenum pname, const GLint *param);
typedef void      (__stdcall *PFNGLGENERATETEXTUREMIPMAPPROC)                    (GLuint texture);
typedef void      (__stdcall *PFNGLBINDTEXTUREUNITPROC)                          (GLuint unit, GLuint texture);
typedef void      (__stdcall *PFNGLGETTEXTUREIMAGEPROC)                          (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void      (__stdcall *PFNGLGETCOSharedGLRESSEDTEXTUREIMAGEPROC)                (GLuint texture, GLint level, GLsizei bufSize, void *pixels);
typedef void      (__stdcall *PFNGLGETTEXTURELEVELPARAMETERFVPROC)               (GLuint texture, GLint level, GLenum pname, GLfloat *params);
typedef void      (__stdcall *PFNGLGETTEXTURELEVELPARAMETERIVPROC)               (GLuint texture, GLint level, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETTEXTUREPARAMETERFVPROC)                    (GLuint texture, GLenum pname, GLfloat *params);
typedef void      (__stdcall *PFNGLGETTEXTUREPARAMETERIIVPROC)                   (GLuint texture, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLGETTEXTUREPARAMETERIUIVPROC)                  (GLuint texture, GLenum pname, GLuint *params);
typedef void      (__stdcall *PFNGLGETTEXTUREPARAMETERIVPROC)                    (GLuint texture, GLenum pname, GLint *params);
typedef void      (__stdcall *PFNGLCREATEVERTEXARRAYSPROC)                       (GLsizei n, GLuint *arrays);
typedef void      (__stdcall *PFNGLDISABLEVERTEXARRAYATTRIBPROC)                 (GLuint vaobj, GLuint index);
typedef void      (__stdcall *PFNGLENABLEVERTEXARRAYATTRIBPROC)                  (GLuint vaobj, GLuint index);
typedef void      (__stdcall *PFNGLVERTEXARRAYELEMENTBUFFERPROC)                 (GLuint vaobj, GLuint buffer);
typedef void      (__stdcall *PFNGLVERTEXARRAYVERTEXBUFFERPROC)                  (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void      (__stdcall *PFNGLVERTEXARRAYVERTEXBUFFERSPROC)                 (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
typedef void      (__stdcall *PFNGLVERTEXARRAYATTRIBBINDINGPROC)                 (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void      (__stdcall *PFNGLVERTEXARRAYATTRIBFORMATPROC)                  (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void      (__stdcall *PFNGLVERTEXARRAYATTRIBIFORMATPROC)                 (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void      (__stdcall *PFNGLVERTEXARRAYATTRIBLFORMATPROC)                 (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void      (__stdcall *PFNGLVERTEXARRAYBINDINGDIVISORPROC)                (GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void      (__stdcall *PFNGLGETVERTEXARRAYIVPROC)                         (GLuint vaobj, GLenum pname, GLint *param);
typedef void      (__stdcall *PFNGLGETVERTEXARRAYINDEXEDIVPROC)                  (GLuint vaobj, GLuint index, GLenum pname, GLint *param);
typedef void      (__stdcall *PFNGLGETVERTEXARRAYINDEXED64IVPROC)                (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
typedef void      (__stdcall *PFNGLCREATESASharedGLLERSPROC)                           (GLsizei n, GLuint *samplers);
typedef void      (__stdcall *PFNGLCREATEPROGRASharedGLIPELINESPROC)			 (GLsizei n, GLuint *pipelines);
typedef void      (__stdcall *PFNGLCREATEQUERIESPROC)				 (GLenum target, GLsizei n, GLuint *ids);
typedef void      (__stdcall *PFNGLGETQUERYBUFFEROBJECTI64VPROC)		 (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void      (__stdcall *PFNGLGETQUERYBUFFEROBJECTIVPROC)			 (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void      (__stdcall *PFNGLGETQUERYBUFFEROBJECTUI64VPROC)		 (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void      (__stdcall *PFNGLGETQUERYBUFFEROBJECTUIVPROC)			 (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void      (__stdcall *PFNGLMEMORYBARRIERBYREGIONPROC)			 (GLbitfield barriers);
typedef void      (__stdcall *PFNGLGETTEXTURESUBIMAGEPROC)			 (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void      (__stdcall *PFNGLGETCOSharedGLRESSEDTEXTURESUBIMAGEPROC)		 (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
typedef GLenum    (__stdcall * PFNGLGETGRAPHICSRESETSTATUSPROC)			 (void);
typedef void      (__stdcall *PFNGLGETNCOSharedGLRESSEDTEXIMAGEPROC)			 (GLenum target, GLint lod, GLsizei bufSize, void *pixels);
typedef void      (__stdcall *PFNGLGETNTEXIMAGEPROC)				 (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
typedef void      (__stdcall *PFNGLGETNUNIFORMDVPROC)				 (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
typedef void      (__stdcall *PFNGLGETNUNIFORMFVPROC)				 (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
typedef void      (__stdcall *PFNGLGETNUNIFORMIVPROC)				 (GLuint program, GLint location, GLsizei bufSize, GLint *params);
typedef void      (__stdcall *PFNGLGETNUNIFORMUIVPROC)				 (GLuint program, GLint location, GLsizei bufSize, GLuint *params);
typedef void      (__stdcall *PFNGLREADNPIXELSPROC)				 (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
typedef void      (__stdcall *PFNGLGETNMAPDVPROC)				 (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
typedef void      (__stdcall *PFNGLGETNMAPFVPROC)				 (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
typedef void      (__stdcall *PFNGLGETNMAPIVPROC)				 (GLenum target, GLenum query, GLsizei bufSize, GLint *v);
typedef void      (__stdcall *PFNGLGETNPIXELMAPFVPROC)				 (GLenum map, GLsizei bufSize, GLfloat *values);
typedef void      (__stdcall *PFNGLGETNPIXELMAPUIVPROC)				 (GLenum map, GLsizei bufSize, GLuint *values);
typedef void      (__stdcall *PFNGLGETNPIXELMAPUSVPROC)				 (GLenum map, GLsizei bufSize, GLushort *values);
typedef void      (__stdcall *PFNGLGETNPOLYGONSTIPPLEPROC)			 (GLsizei bufSize, GLubyte *pattern);
typedef void      (__stdcall *PFNGLGETNCOLORTABLEPROC)				 (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
typedef void      (__stdcall *PFNGLGETNCONVOLUTIONFILTERPROC)			 (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
typedef void      (__stdcall *PFNGLGETNSEPARABLEFILTERPROC)			 (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
typedef void      (__stdcall *PFNGLGETNHISTOGRASharedGLROC)				 (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void      (__stdcall *PFNGLGETNMINMAXPROC)				 (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
typedef void      (__stdcall *PFNGLTEXTUREBARRIERPROC)				 (void);

PFNGLCLIPCONTROLPROC					SharedGL_glClipControl			       = 0;
PFNGLCREATETRANSFORMFEEDBACKSPROC			SharedGL_glCreateTransformFeedbacks		       = 0;
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC			SharedGL_glTransformFeedbackBufferBase	       = 0;
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC			SharedGL_glTransformFeedbackBufferRange	       = 0;
PFNGLGETTRANSFORMFEEDBACKIVPROC				SharedGL_glGetTransformFeedbackiv		       = 0;
PFNGLGETTRANSFORMFEEDBACKI_VPROC			SharedGL_glGetTransformFeedbacki_v		       = 0;
PFNGLGETTRANSFORMFEEDBACKI64_VPROC			SharedGL_glGetTransformFeedbacki64_v		       = 0;
PFNGLCREATEBUFFERSPROC					SharedGL_glCreateBuffers			       = 0;
PFNGLNAMEDBUFFERSTORAGEPROC				SharedGL_glNamedBufferStorage		       = 0;
PFNGLNAMEDBUFFERDATAPROC				SharedGL_glNamedBufferData			       = 0;
PFNGLNAMEDBUFFERSUBDATAPROC				SharedGL_glNamedBufferSubData		       = 0;
PFNGLCOPYNAMEDBUFFERSUBDATAPROC				SharedGL_glCopyNamedBufferSubData		       = 0;
PFNGLCLEARNAMEDBUFFERDATAPROC				SharedGL_glClearNamedBufferData		       = 0;
PFNGLCLEARNAMEDBUFFERSUBDATAPROC			SharedGL_glClearNamedBufferSubData		       = 0;
PFNGLMAPNAMEDBUFFERPROC					SharedGL_glMapNamedBuffer			       = 0;
PFNGLMAPNAMEDBUFFERRANGEPROC				SharedGL_glMapNamedBufferRange		       = 0;
PFNGLUNMAPNAMEDBUFFERPROC				SharedGL_glUnmapNamedBuffer			       = 0;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC			SharedGL_glFlushMappedNamedBufferRange	       = 0;
PFNGLGETNAMEDBUFFERPARAMETERIVPROC			SharedGL_glGetNamedBufferParameteriv		       = 0;
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC			SharedGL_glGetNamedBufferParameteri64v	       = 0;
PFNGLGETNAMEDBUFFERPOINTERVPROC				SharedGL_glGetNamedBufferPointerv		       = 0;
PFNGLGETNAMEDBUFFERSUBDATAPROC				SharedGL_glGetNamedBufferSubData		       = 0;
PFNGLCREATEFRAMEBUFFERSPROC				SharedGL_glCreateFramebuffers		       = 0;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC			SharedGL_glNamedFramebufferRenderbuffer	       = 0;
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC			SharedGL_glNamedFramebufferParameteri	       = 0;
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC			SharedGL_glNamedFramebufferTexture		       = 0;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC			SharedGL_glNamedFramebufferTextureLayer	       = 0;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC			SharedGL_glNamedFramebufferDrawBuffer	       = 0;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC			SharedGL_glNamedFramebufferDrawBuffers	       = 0;
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC			SharedGL_glNamedFramebufferReadBuffer	       = 0;
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC			SharedGL_glInvalidateNamedFramebufferData	       = 0;
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC		SharedGL_glInvalidateNamedFramebufferSubData	       = 0;
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC			SharedGL_glClearNamedFramebufferiv		       = 0;
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC			SharedGL_glClearNamedFramebufferuiv		       = 0;
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC			SharedGL_glClearNamedFramebufferfv		       = 0;
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC			SharedGL_glClearNamedFramebufferfi		       = 0;
PFNGLBLITNAMEDFRAMEBUFFERPROC				SharedGL_glBlitNamedFramebuffer		       = 0;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC			SharedGL_glCheckNamedFramebufferStatus	       = 0;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC			SharedGL_glGetNamedFramebufferParameteriv	       = 0;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	SharedGL_glGetNamedFramebufferAttachmentParameteriv = 0;
PFNGLCREATERENDERBUFFERSPROC				SharedGL_glCreateRenderbuffers		       = 0;
PFNGLNAMEDRENDERBUFFERSTORAGEPROC			SharedGL_glNamedRenderbufferStorage		       = 0;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISASharedGLLEPROC		SharedGL_glNamedRenderbufferStorageMultisample      = 0;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC		SharedGL_glGetNamedRenderbufferParameteriv	       = 0;
PFNGLCREATETEXTURESPROC					SharedGL_glCreateTextures			       = 0;
PFNGLTEXTUREBUFFERPROC					SharedGL_glTextureBuffer			       = 0;
PFNGLTEXTUREBUFFERRANGEPROC				SharedGL_glTextureBufferRange		       = 0;
PFNGLTEXTURESTORAGE1DPROC				SharedGL_glTextureStorage1D			       = 0;
PFNGLTEXTURESTORAGE2DPROC				SharedGL_glTextureStorage2D			       = 0;
PFNGLTEXTURESTORAGE3DPROC				SharedGL_glTextureStorage3D			       = 0;
PFNGLTEXTURESTORAGE2DMULTISASharedGLLEPROC			SharedGL_glTextureStorage2DMultisample	       = 0;
PFNGLTEXTURESTORAGE3DMULTISASharedGLLEPROC			SharedGL_glTextureStorage3DMultisample	       = 0;
PFNGLTEXTURESUBIMAGE1DPROC				SharedGL_glTextureSubImage1D			       = 0;
PFNGLTEXTURESUBIMAGE2DPROC				SharedGL_glTextureSubImage2D			       = 0;
PFNGLTEXTURESUBIMAGE3DPROC				SharedGL_glTextureSubImage3D			       = 0;
PFNGLCOSharedGLRESSEDTEXTURESUBIMAGE1DPROC			SharedGL_glCompressedTextureSubImage1D	       = 0;
PFNGLCOSharedGLRESSEDTEXTURESUBIMAGE2DPROC			SharedGL_glCompressedTextureSubImage2D	       = 0;
PFNGLCOSharedGLRESSEDTEXTURESUBIMAGE3DPROC			SharedGL_glCompressedTextureSubImage3D	       = 0;
PFNGLCOPYTEXTURESUBIMAGE1DPROC				SharedGL_glCopyTextureSubImage1D		       = 0;
PFNGLCOPYTEXTURESUBIMAGE2DPROC				SharedGL_glCopyTextureSubImage2D		       = 0;
PFNGLCOPYTEXTURESUBIMAGE3DPROC				SharedGL_glCopyTextureSubImage3D		       = 0;
PFNGLTEXTUREPARAMETERFPROC				SharedGL_glTextureParameterf			       = 0;
PFNGLTEXTUREPARAMETERFVPROC				SharedGL_glTextureParameterfv		       = 0;
PFNGLTEXTUREPARAMETERIPROC				SharedGL_glTextureParameteri			       = 0;
PFNGLTEXTUREPARAMETERIIVPROC				SharedGL_glTextureParameterIiv		       = 0;
PFNGLTEXTUREPARAMETERIUIVPROC				SharedGL_glTextureParameterIuiv		       = 0;
PFNGLTEXTUREPARAMETERIVPROC				SharedGL_glTextureParameteriv		       = 0;
PFNGLGENERATETEXTUREMIPMAPPROC				SharedGL_glGenerateTextureMipmap		       = 0;
PFNGLBINDTEXTUREUNITPROC				SharedGL_glBindTextureUnit			       = 0;
PFNGLGETTEXTUREIMAGEPROC				SharedGL_glGetTextureImage			       = 0;
PFNGLGETCOSharedGLRESSEDTEXTUREIMAGEPROC			SharedGL_glGetCompressedTextureImage		       = 0;
PFNGLGETTEXTURELEVELPARAMETERFVPROC			SharedGL_glGetTextureLevelParameterfv	       = 0;
PFNGLGETTEXTURELEVELPARAMETERIVPROC			SharedGL_glGetTextureLevelParameteriv	       = 0;
PFNGLGETTEXTUREPARAMETERFVPROC				SharedGL_glGetTextureParameterfv		       = 0;
PFNGLGETTEXTUREPARAMETERIIVPROC				SharedGL_glGetTextureParameterIiv		       = 0;
PFNGLGETTEXTUREPARAMETERIUIVPROC			SharedGL_glGetTextureParameterIuiv		       = 0;
PFNGLGETTEXTUREPARAMETERIVPROC				SharedGL_glGetTextureParameteriv		       = 0;
PFNGLCREATEVERTEXARRAYSPROC				SharedGL_glCreateVertexArrays		       = 0;
PFNGLDISABLEVERTEXARRAYATTRIBPROC			SharedGL_glDisableVertexArrayAttrib		       = 0;
PFNGLENABLEVERTEXARRAYATTRIBPROC			SharedGL_glEnableVertexArrayAttrib		       = 0;
PFNGLVERTEXARRAYELEMENTBUFFERPROC			SharedGL_glVertexArrayElementBuffer		       = 0;
PFNGLVERTEXARRAYVERTEXBUFFERPROC			SharedGL_glVertexArrayVertexBuffer		       = 0;
PFNGLVERTEXARRAYVERTEXBUFFERSPROC			SharedGL_glVertexArrayVertexBuffers		       = 0;
PFNGLVERTEXARRAYATTRIBBINDINGPROC			SharedGL_glVertexArrayAttribBinding		       = 0;
PFNGLVERTEXARRAYATTRIBFORMATPROC			SharedGL_glVertexArrayAttribFormat		       = 0;
PFNGLVERTEXARRAYATTRIBIFORMATPROC			SharedGL_glVertexArrayAttribIFormat		       = 0;
PFNGLVERTEXARRAYATTRIBLFORMATPROC			SharedGL_glVertexArrayAttribLFormat		       = 0;
PFNGLVERTEXARRAYBINDINGDIVISORPROC			SharedGL_glVertexArrayBindingDivisor		       = 0;
PFNGLGETVERTEXARRAYIVPROC				SharedGL_glGetVertexArrayiv			       = 0;
PFNGLGETVERTEXARRAYINDEXEDIVPROC			SharedGL_glGetVertexArrayIndexediv		       = 0;
PFNGLGETVERTEXARRAYINDEXED64IVPROC			SharedGL_glGetVertexArrayIndexed64iv		       = 0;
PFNGLCREATESASharedGLLERSPROC					SharedGL_glCreateSamplers			       = 0;
PFNGLCREATEPROGRASharedGLIPELINESPROC				SharedGL_glCreateProgramPipelines		       = 0;
PFNGLCREATEQUERIESPROC					SharedGL_glCreateQueries			       = 0;
PFNGLGETQUERYBUFFEROBJECTI64VPROC			SharedGL_glGetQueryBufferObjecti64v		       = 0;
PFNGLGETQUERYBUFFEROBJECTIVPROC				SharedGL_glGetQueryBufferObjectiv		       = 0;
PFNGLGETQUERYBUFFEROBJECTUI64VPROC			SharedGL_glGetQueryBufferObjectui64v		       = 0;
PFNGLGETQUERYBUFFEROBJECTUIVPROC			SharedGL_glGetQueryBufferObjectuiv		       = 0;
PFNGLMEMORYBARRIERBYREGIONPROC				SharedGL_glMemoryBarrierByRegion		       = 0;
PFNGLGETTEXTURESUBIMAGEPROC				SharedGL_glGetTextureSubImage		       = 0;
PFNGLGETCOSharedGLRESSEDTEXTURESUBIMAGEPROC			SharedGL_glGetCompressedTextureSubImage	       = 0;
PFNGLGETGRAPHICSRESETSTATUSPROC				SharedGL_glGetGraphicsResetStatus		       = 0;
PFNGLGETNCOSharedGLRESSEDTEXIMAGEPROC				SharedGL_glGetnCompressedTexImage		       = 0;
PFNGLGETNTEXIMAGEPROC					SharedGL_glGetnTexImage			       = 0;
PFNGLGETNUNIFORMDVPROC					SharedGL_glGetnUniformdv			       = 0;
PFNGLGETNUNIFORMFVPROC					SharedGL_glGetnUniformfv			       = 0;
PFNGLGETNUNIFORMIVPROC					SharedGL_glGetnUniformiv			       = 0;
PFNGLGETNUNIFORMUIVPROC					SharedGL_glGetnUniformuiv			       = 0;
PFNGLREADNPIXELSPROC					SharedGL_glReadnPixels			       = 0;
PFNGLGETNMAPDVPROC					SharedGL_glGetnMapdv				       = 0;
PFNGLGETNMAPFVPROC					SharedGL_glGetnMapfv				       = 0;
PFNGLGETNMAPIVPROC					SharedGL_glGetnMapiv				       = 0;
PFNGLGETNPIXELMAPFVPROC					SharedGL_glGetnPixelMapfv			       = 0;
PFNGLGETNPIXELMAPUIVPROC				SharedGL_glGetnPixelMapuiv			       = 0;
PFNGLGETNPIXELMAPUSVPROC				SharedGL_glGetnPixelMapusv			       = 0;
PFNGLGETNPOLYGONSTIPPLEPROC				SharedGL_glGetnPolygonStipple		       = 0;
PFNGLGETNCOLORTABLEPROC					SharedGL_glGetnColorTable			       = 0;
PFNGLGETNCONVOLUTIONFILTERPROC				SharedGL_glGetnConvolutionFilter		       = 0;
PFNGLGETNSEPARABLEFILTERPROC				SharedGL_glGetnSeparableFilter		       = 0;
PFNGLGETNHISTOGRASharedGLROC					SharedGL_glGetnHistogram			       = 0;
PFNGLGETNMINMAXPROC					SharedGL_glGetnMinmax			       = 0;
PFNGLTEXTUREBARRIERPROC					SharedGL_glTextureBarrier			       = 0;

// 4.6
#define glSpecializeShader			SharedGL_glSpecializeShader
#define glMultiDrawArraysIndirectCount		SharedGL_glMultiDrawArraysIndirectCount
#define glMultiDrawElementsIndirectCount	SharedGL_glMultiDrawElementsIndirectCount
#define glPolygonOffsetClamp			SharedGL_glPolygonOffsetClamp

typedef void (__stdcall *PFNGLSPECIALIZESHADERPROC)               (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
typedef void (__stdcall *PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)   (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (__stdcall *PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (__stdcall *PFNGLPOLYGONOFFSETCLASharedGLPROC)             (GLfloat factor, GLfloat units, GLfloat clamp);

PFNGLSPECIALIZESHADERPROC		SharedGL_glSpecializeShader	          = 0;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC	SharedGL_glMultiDrawArraysIndirectCount   = 0;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC	SharedGL_glMultiDrawElementsIndirectCount = 0;
PFNGLPOLYGONOFFSETCLASharedGLPROC	SharedGL_glPolygonOffsetClamp	          = 0;


// HELPERS

GLuint opengl_shader_compile_vertex(s8* source, s32 size)
{
    GLuint shader = glCreateShader(GL_VERTEX_SHADER);
    glShaderSource (shader, 1, &(GLchar*)source, &(GLint)size);
    glCompileShader(shader);
    
    GLint status = 0;
    glGetShaderiv(shader, GL_COMPILE_STATUS, &status);
    if(!status)
    {
	GLint shader_info_size;
	glGetShaderiv(shader, GL_INFO_LOG_LENGTH, &shader_info_size);

	GLchar shader_info[1024];
	glGetShaderInfoLog(shader, shader_info_size, &shader_info_size, shader_info);
	
	return(0);
    } 

    return(shader);
}
GLuint opengl_shader_compile_fragment(s8* source, s32 size)
{
    GLuint shader = glCreateShader(GL_FRAGMENT_SHADER);
    glShaderSource(shader, 1, &(GLchar*)source, &(GLint)size);
    glCompileShader(shader);
	
    GLint status = 0;
    glGetShaderiv(shader, GL_COMPILE_STATUS, &status);
    if(!status)
    {
	GLint shader_info_size;
	glGetShaderiv(shader, GL_INFO_LOG_LENGTH, &shader_info_size);

	GLchar shader_info[1024];
	glGetShaderInfoLog(shader, shader_info_size, &shader_info_size, shader_info);
	    
	return(0);
    } 
    
    return(shader);
}
GLuint opengl_shader_compile_program(GLuint vertex_shader, GLuint fragment_shader)
{
    GLuint program = glCreateProgram();
    
    glAttachShader(program,   vertex_shader);
    glAttachShader(program, fragment_shader);
    glLinkProgram(program);

    glDeleteShader(  vertex_shader);
    glDeleteShader(fragment_shader);

    return(program);
}
    
GLuint opengl_texture_compile(s8* source, s32 width, s32 height)
{
    GLuint obj = 0;
    glGenTextures(1, &obj);
    glBindTexture(GL_TEXTURE_2D, obj);
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_BGRA, GL_UNSIGNED_BYTE, source);
    glGenerateMipmap(GL_TEXTURE_2D);
    return(obj);
}
